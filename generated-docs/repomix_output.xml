<?xml version="1.0" encoding="UTF-8"?>
<repository>
<repository_structure>
  <file name=".editorconfig"/>
  <file name=".gitattributes"/>
  <directory name=".github">
    <directory name="workflows">
      <file name="lint.yml"/>
      <file name="tests.yml"/>
    </directory>
  </directory>
  <file name=".gitignore"/>
  <file name=".prettierignore"/>
  <file name=".prettierrc"/>
  <directory name="app">
    <directory name="Http">
      <directory name="Controllers">
        <directory name="Auth">
          <file name="EmailVerificationNotificationController.php"/>
          <file name="EmailVerificationPromptController.php"/>
          <file name="PasswordResetLinkController.php"/>
          <file name="VerifyEmailController.php"/>
        </directory>
        <file name="Controller.php"/>
      </directory>
      <directory name="Middleware">
        <file name="HandleAppearance.php"/>
        <file name="HandleInertiaRequests.php"/>
      </directory>
      <directory name="Requests">
        <directory name="Settings">
          <file name="ProfileUpdateRequest.php"/>
        </directory>
      </directory>
    </directory>
    <directory name="Providers">
      <file name="AppServiceProvider.php"/>
    </directory>
  </directory>
  <file name="artisan"/>
  <directory name="bootstrap">
    <file name="app.php"/>
    <directory name="cache">
      <file name=".gitignore"/>
      <file name="packages.php"/>
    </directory>
    <file name="providers.php"/>
  </directory>
  <file name="components.json"/>
  <file name="composer.json"/>
  <directory name="config">
    <file name="app.php"/>
    <file name="inertia.php"/>
    <file name="logging.php"/>
    <file name="session.php"/>
  </directory>
  <directory name="database">
    <file name=".gitignore"/>
    <directory name="migrations">
      <file name="0001_01_01_000001_create_cache_table.php"/>
      <file name="0001_01_01_000002_create_jobs_table.php"/>
    </directory>
    <directory name="seeders">
      <file name="DatabaseSeeder.php"/>
    </directory>
  </directory>
  <file name="eslint.config.js"/>
  <file name="package.json"/>
  <file name="phpunit.xml"/>
  <directory name="public">
    <file name=".htaccess"/>
    <file name="index.php"/>
    <file name="robots.txt"/>
  </directory>
  <directory name="resources">
    <directory name="css">
      <file name="app.css"/>
    </directory>
    <directory name="js">
      <directory name="actions">
        <directory name="App">
          <directory name="Http">
            <directory name="Controllers">
              <directory name="Auth">
                <file name="AuthenticatedSessionController.ts"/>
                <file name="ConfirmablePasswordController.ts"/>
                <file name="EmailVerificationNotificationController.ts"/>
                <file name="EmailVerificationPromptController.ts"/>
                <file name="PasswordResetLinkController.ts"/>
                <file name="RegisteredUserController.ts"/>
                <file name="VerifyEmailController.ts"/>
              </directory>
              <file name="index.ts"/>
              <directory name="Settings">
                <file name="PasswordController.ts"/>
                <file name="ProfileController.ts"/>
              </directory>
            </directory>
            <file name="index.ts"/>
          </directory>
          <file name="index.ts"/>
        </directory>
        <directory name="Illuminate">
          <file name="index.ts"/>
          <directory name="Routing">
            <file name="index.ts"/>
            <file name="RedirectController.ts"/>
          </directory>
        </directory>
      </directory>
      <file name="app.tsx"/>
      <directory name="components">
        <file name="app-content.tsx"/>
        <file name="app-header.tsx"/>
        <file name="app-logo-icon.tsx"/>
        <file name="app-logo.tsx"/>
        <file name="app-shell.tsx"/>
        <file name="app-sidebar-header.tsx"/>
        <file name="app-sidebar.tsx"/>
        <file name="appearance-dropdown.tsx"/>
        <file name="appearance-tabs.tsx"/>
        <file name="breadcrumbs.tsx"/>
        <file name="heading-small.tsx"/>
        <file name="heading.tsx"/>
        <file name="icon.tsx"/>
        <file name="input-error.tsx"/>
        <file name="nav-footer.tsx"/>
        <file name="nav-main.tsx"/>
        <file name="nav-user.tsx"/>
        <file name="text-link.tsx"/>
        <directory name="ui">
          <file name="alert.tsx"/>
          <file name="avatar.tsx"/>
          <file name="badge.tsx"/>
          <file name="breadcrumb.tsx"/>
          <file name="button.tsx"/>
          <file name="card.tsx"/>
          <file name="checkbox.tsx"/>
          <file name="collapsible.tsx"/>
          <file name="dialog.tsx"/>
          <file name="dropdown-menu.tsx"/>
          <file name="icon.tsx"/>
          <file name="input.tsx"/>
          <file name="label.tsx"/>
          <file name="navigation-menu.tsx"/>
          <file name="placeholder-pattern.tsx"/>
          <file name="select.tsx"/>
          <file name="separator.tsx"/>
          <file name="sheet.tsx"/>
          <file name="sidebar.tsx"/>
          <file name="skeleton.tsx"/>
          <file name="toggle-group.tsx"/>
          <file name="toggle.tsx"/>
          <file name="tooltip.tsx"/>
        </directory>
        <file name="user-info.tsx"/>
        <file name="user-menu-content.tsx"/>
      </directory>
      <directory name="hooks">
        <file name="use-appearance.tsx"/>
        <file name="use-initials.tsx"/>
        <file name="use-mobile-navigation.ts"/>
        <file name="use-mobile.tsx"/>
      </directory>
      <directory name="layouts">
        <directory name="app">
          <file name="app-header-layout.tsx"/>
          <file name="app-sidebar-layout.tsx"/>
        </directory>
        <file name="app-layout.tsx"/>
        <directory name="auth">
          <file name="auth-card-layout.tsx"/>
          <file name="auth-simple-layout.tsx"/>
          <file name="auth-split-layout.tsx"/>
        </directory>
        <file name="auth-layout.tsx"/>
      </directory>
      <directory name="pages">
        <directory name="auth">
          <file name="login.tsx"/>
          <file name="verify-email.tsx"/>
        </directory>
        <file name="dashboard.tsx"/>
        <directory name="settings">
          <file name="appearance.tsx"/>
          <file name="profile.tsx"/>
        </directory>
        <file name="welcome.tsx"/>
      </directory>
      <directory name="routes">
        <file name="index.ts"/>
        <directory name="login">
          <file name="index.ts"/>
        </directory>
        <directory name="password">
          <directory name="confirm">
            <file name="index.ts"/>
          </directory>
        </directory>
        <directory name="profile">
          <file name="index.ts"/>
        </directory>
        <directory name="register">
          <file name="index.ts"/>
        </directory>
        <directory name="storage">
          <file name="index.ts"/>
        </directory>
        <directory name="verification">
          <file name="index.ts"/>
        </directory>
      </directory>
      <file name="ssr.tsx"/>
      <directory name="wayfinder">
        <file name="index.ts"/>
      </directory>
    </directory>
    <directory name="views">
      <file name="app.blade.php"/>
    </directory>
  </directory>
  <directory name="routes">
    <file name="console.php"/>
    <file name="web.php"/>
  </directory>
  <directory name="storage">
    <directory name="app">
      <file name=".gitignore"/>
      <directory name="private">
        <file name=".gitignore"/>
      </directory>
      <directory name="public">
        <file name=".gitignore"/>
      </directory>
    </directory>
    <directory name="framework">
      <file name=".gitignore"/>
      <directory name="cache">
        <file name=".gitignore"/>
        <directory name="data">
          <file name=".gitignore"/>
        </directory>
      </directory>
      <directory name="sessions">
        <file name=".gitignore"/>
      </directory>
      <directory name="testing">
        <file name=".gitignore"/>
      </directory>
      <directory name="views">
        <file name=".gitignore"/>
        <file name="1077c2d274bb732d416d182fc2d906ed.php"/>
        <file name="357c133fa0d791427a33a63701cbf366.php"/>
        <file name="edc0d82e8583c7fcd29844caf9b77a6f.php"/>
      </directory>
    </directory>
    <directory name="logs">
      <file name=".gitignore"/>
    </directory>
  </directory>
  <directory name="tests">
    <directory name="Feature">
      <directory name="Auth">
        <file name="EmailVerificationTest.php"/>
        <file name="VerificationNotificationTest.php"/>
      </directory>
      <file name="DashboardTest.php"/>
      <file name="ExampleTest.php"/>
    </directory>
    <file name="Pest.php"/>
    <file name="TestCase.php"/>
    <directory name="Unit">
      <file name="ExampleTest.php"/>
    </directory>
  </directory>
  <file name="tsconfig.json"/>
  <file name="vite.config.ts"/>
</repository_structure>
<repository_files>
  <file>
    
  
    <path>.editorconfig</path>
    
  
    <content>root = true

[*]
charset = utf-8
end_of_line = lf
indent_size = 4
indent_style = space
insert_final_newline = true
trim_trailing_whitespace = true

[*.md]
trim_trailing_whitespace = false

[*.{yml,yaml}]
indent_size = 2

[docker-compose.yml]
indent_size = 4</content>
    

  </file>
  <file>
    
  
    <path>.gitattributes</path>
    
  
    <content>* text=auto eol=lf

*.blade.php diff=html
*.css diff=css
*.html diff=html
*.md diff=markdown
*.php diff=php

CHANGELOG.md export-ignore
README.md export-ignore</content>
    

  </file>
  <file>
    
  
    <path>.github/workflows/lint.yml</path>
    
  
    <content>name: linter

on:
  push:
    branches:
      - develop
      - main
  pull_request:
    branches:
      - develop
      - main

permissions:
  contents: write

jobs:
  quality:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.4'

      - name: Install Dependencies
        run: |
          composer install -q --no-ansi --no-interaction --no-scripts --no-progress --prefer-dist
          npm install

      - name: Run Pint
        run: vendor/bin/pint

      - name: Format Frontend
        run: npm run format

      - name: Lint Frontend
        run: npm run lint

      # - name: Commit Changes
      #   uses: stefanzweifel/git-auto-commit-action@v5
      #   with:
      #     commit_message: fix code style
      #     commit_options: '--no-verify'</content>
    

  </file>
  <file>
    
  
    <path>.github/workflows/tests.yml</path>
    
  
    <content>name: tests

on:
  push:
    branches:
      - develop
      - main
  pull_request:
    branches:
      - develop
      - main

jobs:
  ci:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: 8.4
          tools: composer:v2
          coverage: xdebug

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: '22'
          cache: 'npm'

      - name: Install Node Dependencies
        run: npm ci

      - name: Install Dependencies
        run: composer install --no-interaction --prefer-dist --optimize-autoloader

      - name: Build Assets
        run: npm run build

      - name: Copy Environment File
        run: cp .env.example .env

      - name: Generate Application Key
        run: php artisan key:generate

      - name: Tests
        run: ./vendor/bin/pest</content>
    

  </file>
  <file>
    
  
    <path>.gitignore</path>
    
  
    <content>/.phpunit.cache
/bootstrap/ssr
/node_modules
/public/build
/public/hot
/public/storage
/resources/js/actions
/resources/js/routes
/resources/js/wayfinder
/storage/*.key
/storage/pail
/vendor
.env
.env.backup
.env.production
.phpactor.json
.phpunit.result.cache
Homestead.json
Homestead.yaml
npm-debug.log
yarn-error.log
/auth.json
/.fleet
/.idea
/.nova
/.vscode
/.zed</content>
    

  </file>
  <file>
    
  
    <path>.prettierignore</path>
    
  
    <content>resources/js/components/ui/*
resources/views/mail/*</content>
    

  </file>
  <file>
    
  
    <path>.prettierrc</path>
    
  
    <content>{
    "semi": true,
    "singleQuote": true,
    "singleAttributePerLine": false,
    "htmlWhitespaceSensitivity": "css",
    "printWidth": 150,
    "plugins": ["prettier-plugin-organize-imports", "prettier-plugin-tailwindcss"],
    "tailwindFunctions": ["clsx", "cn"],
    "tailwindStylesheet": "resources/css/app.css",
    "tabWidth": 4,
    "overrides": [
        {
            "files": "**/*.yml",
            "options": {
                "tabWidth": 2
            }
        }
    ]
}</content>
    

  </file>
  <file>
    
  
    <path>app/Http/Controllers/Auth/EmailVerificationNotificationController.php</path>
    
  
    <content>&lt;?php

namespace App\Http\Controllers\Auth;

use App\Http\Controllers\Controller;
use Illuminate\Http\RedirectResponse;
use Illuminate\Http\Request;

class EmailVerificationNotificationController extends Controller
{
    /**
     * Send a new email verification notification.
     */
    public function store(Request $request): RedirectResponse
    {
        if ($request-&gt;user()-&gt;hasVerifiedEmail()) {
            return redirect()-&gt;intended(route('dashboard', absolute: false));
        }

        $request-&gt;user()-&gt;sendEmailVerificationNotification();

        return back()-&gt;with('status', 'verification-link-sent');
    }
}</content>
    

  </file>
  <file>
    
  
    <path>app/Http/Controllers/Auth/EmailVerificationPromptController.php</path>
    
  
    <content>&lt;?php

namespace App\Http\Controllers\Auth;

use App\Http\Controllers\Controller;
use Illuminate\Http\RedirectResponse;
use Illuminate\Http\Request;
use Inertia\Inertia;
use Inertia\Response;

class EmailVerificationPromptController extends Controller
{
    /**
     * Show the email verification prompt page.
     */
    public function __invoke(Request $request): Response|RedirectResponse
    {
        return $request-&gt;user()-&gt;hasVerifiedEmail()
                    ? redirect()-&gt;intended(route('dashboard', absolute: false))
                    : Inertia::render('auth/verify-email', ['status' =&gt; $request-&gt;session()-&gt;get('status')]);
    }
}</content>
    

  </file>
  <file>
    
  
    <path>app/Http/Controllers/Auth/PasswordResetLinkController.php</path>
    
  
    <content>&lt;?php

namespace App\Http\Controllers\Auth;

use App\Http\Controllers\Controller;
use Illuminate\Http\RedirectResponse;
use Illuminate\Http\Request;
use Illuminate\Support\Facades\Password;
use Inertia\Inertia;
use Inertia\Response;

class PasswordResetLinkController extends Controller
{
    /**
     * Show the password reset link request page.
     */
    public function create(Request $request): Response
    {
        return Inertia::render('auth/forgot-password', [
            'status' =&gt; $request-&gt;session()-&gt;get('status'),
        ]);
    }

    /**
     * Handle an incoming password reset link request.
     *
     * @throws \Illuminate\Validation\ValidationException
     */
    public function store(Request $request): RedirectResponse
    {
        $request-&gt;validate([
            'email' =&gt; 'required|email',
        ]);

        Password::sendResetLink(
            $request-&gt;only('email')
        );

        return back()-&gt;with('status', __('A reset link will be sent if the account exists.'));
    }
}</content>
    

  </file>
  <file>
    
  
    <path>app/Http/Controllers/Auth/VerifyEmailController.php</path>
    
  
    <content>&lt;?php

namespace App\Http\Controllers\Auth;

use App\Http\Controllers\Controller;
use Illuminate\Foundation\Auth\EmailVerificationRequest;
use Illuminate\Http\RedirectResponse;

class VerifyEmailController extends Controller
{
    /**
     * Mark the authenticated user's email address as verified.
     */
    public function __invoke(EmailVerificationRequest $request): RedirectResponse
    {
        if ($request-&gt;user()-&gt;hasVerifiedEmail()) {
            return redirect()-&gt;intended(route('dashboard', absolute: false).'?verified=1');
        }

        $request-&gt;fulfill();

        return redirect()-&gt;intended(route('dashboard', absolute: false).'?verified=1');
    }
}</content>
    

  </file>
  <file>
    
  
    <path>app/Http/Controllers/Controller.php</path>
    
  
    <content>&lt;?php

namespace App\Http\Controllers;

abstract class Controller
{
    //
}</content>
    

  </file>
  <file>
    
  
    <path>app/Http/Middleware/HandleAppearance.php</path>
    
  
    <content>&lt;?php

namespace App\Http\Middleware;

use Closure;
use Illuminate\Http\Request;
use Illuminate\Support\Facades\View;
use Symfony\Component\HttpFoundation\Response;

class HandleAppearance
{
    /**
     * Handle an incoming request.
     *
     * @param  \Closure(\Illuminate\Http\Request): (\Symfony\Component\HttpFoundation\Response)  $next
     */
    public function handle(Request $request, Closure $next): Response
    {
        View::share('appearance', $request-&gt;cookie('appearance') ?? 'system');

        return $next($request);
    }
}</content>
    

  </file>
  <file>
    
  
    <path>app/Http/Middleware/HandleInertiaRequests.php</path>
    
  
    <content>&lt;?php

namespace App\Http\Middleware;

use Illuminate\Foundation\Inspiring;
use Illuminate\Http\Request;
use Inertia\Middleware;

class HandleInertiaRequests extends Middleware
{
    /**
     * The root template that's loaded on the first page visit.
     *
     * @see https://inertiajs.com/server-side-setup#root-template
     *
     * @var string
     */
    protected $rootView = 'app';

    /**
     * Determines the current asset version.
     *
     * @see https://inertiajs.com/asset-versioning
     */
    public function version(Request $request): ?string
    {
        return parent::version($request);
    }

    /**
     * Define the props that are shared by default.
     *
     * @see https://inertiajs.com/shared-data
     *
     * @return array&lt;string, mixed&gt;
     */
    public function share(Request $request): array
    {
        [$message, $author] = str(Inspiring::quotes()-&gt;random())-&gt;explode('-');

        return [
            ...parent::share($request),
            'name' =&gt; config('app.name'),
            'quote' =&gt; ['message' =&gt; trim($message), 'author' =&gt; trim($author)],
            'auth' =&gt; [
                'user' =&gt; $request-&gt;user(),
            ],
            'sidebarOpen' =&gt; ! $request-&gt;hasCookie('sidebar_state') || $request-&gt;cookie('sidebar_state') === 'true',
        ];
    }
}</content>
    

  </file>
  <file>
    
  
    <path>app/Http/Requests/Settings/ProfileUpdateRequest.php</path>
    
  
    <content>&lt;?php

namespace App\Http\Requests\Settings;

use App\Models\User;
use Illuminate\Contracts\Validation\ValidationRule;
use Illuminate\Foundation\Http\FormRequest;
use Illuminate\Validation\Rule;

class ProfileUpdateRequest extends FormRequest
{
    /**
     * Get the validation rules that apply to the request.
     *
     * @return array&lt;string, ValidationRule|array&lt;mixed&gt;|string&gt;
     */
    public function rules(): array
    {
        return [
            'name' =&gt; ['required', 'string', 'max:255'],

            'email' =&gt; [
                'required',
                'string',
                'lowercase',
                'email',
                'max:255',
                Rule::unique(User::class)-&gt;ignore($this-&gt;user()-&gt;id),
            ],
        ];
    }
}</content>
    

  </file>
  <file>
    
  
    <path>app/Providers/AppServiceProvider.php</path>
    
  
    <content>&lt;?php

namespace App\Providers;

use Illuminate\Support\ServiceProvider;

class AppServiceProvider extends ServiceProvider
{
    /**
     * Register any application services.
     */
    public function register(): void
    {
        //
    }

    /**
     * Bootstrap any application services.
     */
    public function boot(): void
    {
        //
    }
}</content>
    

  </file>
  <file>
    
  
    <path>artisan</path>
    
  
    <content>#!/usr/bin/env php
&lt;?php

use Illuminate\Foundation\Application;
use Symfony\Component\Console\Input\ArgvInput;

define('LARAVEL_START', microtime(true));

// Register the Composer autoloader...
require __DIR__.'/vendor/autoload.php';

// Bootstrap Laravel and handle the command...
/** @var Application $app */
$app = require_once __DIR__.'/bootstrap/app.php';

$status = $app-&gt;handleCommand(new ArgvInput);

exit($status);</content>
    

  </file>
  <file>
    
  
    <path>bootstrap/app.php</path>
    
  
    <content>&lt;?php

use App\Http\Middleware\HandleAppearance;
use App\Http\Middleware\HandleInertiaRequests;
use Illuminate\Foundation\Application;
use Illuminate\Foundation\Configuration\Exceptions;
use Illuminate\Foundation\Configuration\Middleware;
use Illuminate\Http\Middleware\AddLinkHeadersForPreloadedAssets;

return Application::configure(basePath: dirname(__DIR__))
    -&gt;withRouting(
        web: __DIR__.'/../routes/web.php',
        commands: __DIR__.'/../routes/console.php',
        health: '/up',
    )
    -&gt;withMiddleware(function (Middleware $middleware) {
        $middleware-&gt;encryptCookies(except: ['appearance', 'sidebar_state']);

        $middleware-&gt;web(append: [
            HandleAppearance::class,
            HandleInertiaRequests::class,
            AddLinkHeadersForPreloadedAssets::class,
        ]);
    })
    -&gt;withExceptions(function (Exceptions $exceptions) {
        //
    })-&gt;create();</content>
    

  </file>
  <file>
    
  
    <path>bootstrap/cache/.gitignore</path>
    
  
    <content>*
!.gitignore</content>
    

  </file>
  <file>
    
  
    <path>bootstrap/cache/packages.php</path>
    
  
    <content>&lt;?php return array (
  'inertiajs/inertia-laravel' =&gt; 
  array (
    'providers' =&gt; 
    array (
      0 =&gt; 'Inertia\\ServiceProvider',
    ),
  ),
  'laravel/pail' =&gt; 
  array (
    'providers' =&gt; 
    array (
      0 =&gt; 'Laravel\\Pail\\PailServiceProvider',
    ),
  ),
  'laravel/sail' =&gt; 
  array (
    'providers' =&gt; 
    array (
      0 =&gt; 'Laravel\\Sail\\SailServiceProvider',
    ),
  ),
  'laravel/tinker' =&gt; 
  array (
    'providers' =&gt; 
    array (
      0 =&gt; 'Laravel\\Tinker\\TinkerServiceProvider',
    ),
  ),
  'laravel/wayfinder' =&gt; 
  array (
    'providers' =&gt; 
    array (
      0 =&gt; 'Laravel\\Wayfinder\\WayfinderServiceProvider',
    ),
  ),
  'nesbot/carbon' =&gt; 
  array (
    'providers' =&gt; 
    array (
      0 =&gt; 'Carbon\\Laravel\\ServiceProvider',
    ),
  ),
  'nunomaduro/collision' =&gt; 
  array (
    'providers' =&gt; 
    array (
      0 =&gt; 'NunoMaduro\\Collision\\Adapters\\Laravel\\CollisionServiceProvider',
    ),
  ),
  'nunomaduro/termwind' =&gt; 
  array (
    'providers' =&gt; 
    array (
      0 =&gt; 'Termwind\\Laravel\\TermwindServiceProvider',
    ),
  ),
  'pestphp/pest-plugin-laravel' =&gt; 
  array (
    'providers' =&gt; 
    array (
      0 =&gt; 'Pest\\Laravel\\PestServiceProvider',
    ),
  ),
);</content>
    

  </file>
  <file>
    
  
    <path>bootstrap/providers.php</path>
    
  
    <content>&lt;?php

return [
    App\Providers\AppServiceProvider::class,
];</content>
    

  </file>
  <file>
    
  
    <path>components.json</path>
    
  
    <content>{
    "$schema": "https://ui.shadcn.com/schema.json",
    "style": "new-york",
    "rsc": false,
    "tsx": true,
    "tailwind": {
        "config": "tailwind.config.js",
        "css": "resources/css/app.css",
        "baseColor": "neutral",
        "cssVariables": true,
        "prefix": ""
    },
    "aliases": {
        "components": "@/components",
        "utils": "@/lib/utils",
        "ui": "@/components/ui",
        "lib": "@/lib",
        "hooks": "@/hooks"
    },
    "iconLibrary": "lucide"
}</content>
    

  </file>
  <file>
    
  
    <path>composer.json</path>
    
  
    <content>{
    "$schema": "https://getcomposer.org/schema.json",
    "name": "laravel/react-starter-kit",
    "type": "project",
    "description": "The skeleton application for the Laravel framework.",
    "keywords": [
        "laravel",
        "framework"
    ],
    "license": "MIT",
    "require": {
        "php": "^8.2",
        "inertiajs/inertia-laravel": "^2.0",
        "laravel/framework": "^12.0",
        "laravel/tinker": "^2.10.1",
        "laravel/wayfinder": "^0.1.9"
    },
    "require-dev": {
        "fakerphp/faker": "^1.23",
        "laravel/pail": "^1.2.2",
        "laravel/pint": "^1.18",
        "laravel/sail": "^1.41",
        "mockery/mockery": "^1.6",
        "nunomaduro/collision": "^8.6",
        "pestphp/pest": "^4.0",
        "pestphp/pest-plugin-laravel": "^4.0"
    },
    "autoload": {
        "psr-4": {
            "App\\": "app/",
            "Database\\Factories\\": "database/factories/",
            "Database\\Seeders\\": "database/seeders/"
        }
    },
    "autoload-dev": {
        "psr-4": {
            "Tests\\": "tests/"
        }
    },
    "scripts": {
        "post-autoload-dump": [
            "Illuminate\\Foundation\\ComposerScripts::postAutoloadDump",
            "@php artisan package:discover --ansi"
        ],
        "post-update-cmd": [
            "@php artisan vendor:publish --tag=laravel-assets --ansi --force"
        ],
        "post-root-package-install": [
            "@php -r \"file_exists('.env') || copy('.env.example', '.env');\""
        ],
        "post-create-project-cmd": [
            "@php artisan key:generate --ansi",
            "@php -r \"file_exists('database/database.sqlite') || touch('database/database.sqlite');\"",
            "@php artisan migrate --graceful --ansi"
        ],
        "dev": [
            "Composer\\Config::disableProcessTimeout",
            "npx concurrently -c \"#93c5fd,#c4b5fd,#fdba74\" \"php artisan serve\" \"php artisan queue:listen --tries=1\" \"npm run dev\" --names='server,queue,vite'"
        ],
        "dev:ssr": [
            "npm run build:ssr",
            "Composer\\Config::disableProcessTimeout",
            "npx concurrently -c \"#93c5fd,#c4b5fd,#fb7185,#fdba74\" \"php artisan serve\" \"php artisan queue:listen --tries=1\" \"php artisan pail --timeout=0\" \"php artisan inertia:start-ssr\" --names=server,queue,logs,ssr --kill-others"
        ],
        "test": [
            "@php artisan config:clear --ansi",
            "@php artisan test"
        ]
    },
    "extra": {
        "laravel": {
            "dont-discover": []
        }
    },
    "config": {
        "optimize-autoloader": true,
        "preferred-install": "dist",
        "sort-packages": true,
        "allow-plugins": {
            "pestphp/pest-plugin": true,
            "php-http/discovery": true
        }
    },
    "minimum-stability": "stable",
    "prefer-stable": true
}</content>
    

  </file>
  <file>
    
  
    <path>config/app.php</path>
    
  
    <content>&lt;?php

return [

    /*
    |--------------------------------------------------------------------------
    | Application Name
    |--------------------------------------------------------------------------
    |
    | This value is the name of your application, which will be used when the
    | framework needs to place the application's name in a notification or
    | other UI elements where an application name needs to be displayed.
    |
    */

    'name' =&gt; env('APP_NAME', 'Laravel'),

    /*
    |--------------------------------------------------------------------------
    | Application Environment
    |--------------------------------------------------------------------------
    |
    | This value determines the "environment" your application is currently
    | running in. This may determine how you prefer to configure various
    | services the application utilizes. Set this in your ".env" file.
    |
    */

    'env' =&gt; env('APP_ENV', 'production'),

    /*
    |--------------------------------------------------------------------------
    | Application Debug Mode
    |--------------------------------------------------------------------------
    |
    | When your application is in debug mode, detailed error messages with
    | stack traces will be shown on every error that occurs within your
    | application. If disabled, a simple generic error page is shown.
    |
    */

    'debug' =&gt; (bool) env('APP_DEBUG', false),

    /*
    |--------------------------------------------------------------------------
    | Application URL
    |--------------------------------------------------------------------------
    |
    | This URL is used by the console to properly generate URLs when using
    | the Artisan command line tool. You should set this to the root of
    | the application so that it's available within Artisan commands.
    |
    */

    'url' =&gt; env('APP_URL', 'http://localhost'),

    /*
    |--------------------------------------------------------------------------
    | Application Timezone
    |--------------------------------------------------------------------------
    |
    | Here you may specify the default timezone for your application, which
    | will be used by the PHP date and date-time functions. The timezone
    | is set to "UTC" by default as it is suitable for most use cases.
    |
    */

    'timezone' =&gt; 'UTC',

    /*
    |--------------------------------------------------------------------------
    | Application Locale Configuration
    |--------------------------------------------------------------------------
    |
    | The application locale determines the default locale that will be used
    | by Laravel's translation / localization methods. This option can be
    | set to any locale for which you plan to have translation strings.
    |
    */

    'locale' =&gt; env('APP_LOCALE', 'en'),

    'fallback_locale' =&gt; env('APP_FALLBACK_LOCALE', 'en'),

    'faker_locale' =&gt; env('APP_FAKER_LOCALE', 'en_US'),

    /*
    |--------------------------------------------------------------------------
    | Encryption Key
    |--------------------------------------------------------------------------
    |
    | This key is utilized by Laravel's encryption services and should be set
    | to a random, 32 character string to ensure that all encrypted values
    | are secure. You should do this prior to deploying the application.
    |
    */

    'cipher' =&gt; 'AES-256-CBC',

    'key' =&gt; env('APP_KEY'),

    'previous_keys' =&gt; [
        ...array_filter(
            explode(',', env('APP_PREVIOUS_KEYS', ''))
        ),
    ],

    /*
    |--------------------------------------------------------------------------
    | Maintenance Mode Driver
    |--------------------------------------------------------------------------
    |
    | These configuration options determine the driver used to determine and
    | manage Laravel's "maintenance mode" status. The "cache" driver will
    | allow maintenance mode to be controlled across multiple machines.
    |
    | Supported drivers: "file", "cache"
    |
    */

    'maintenance' =&gt; [
        'driver' =&gt; env('APP_MAINTENANCE_DRIVER', 'file'),
        'store' =&gt; env('APP_MAINTENANCE_STORE', 'database'),
    ],

];</content>
    

  </file>
  <file>
    
  
    <path>config/inertia.php</path>
    
  
    <content>&lt;?php

return [

    /*
    |--------------------------------------------------------------------------
    | Server Side Rendering
    |--------------------------------------------------------------------------
    |
    | These options configures if and how Inertia uses Server Side Rendering
    | to pre-render each initial request made to your application's pages
    | so that server rendered HTML is delivered for the user's browser.
    |
    | See: https://inertiajs.com/server-side-rendering
    |
    */

    'ssr' =&gt; [
        'enabled' =&gt; true,
        'url' =&gt; 'http://127.0.0.1:13714',
        // 'bundle' =&gt; base_path('bootstrap/ssr/ssr.mjs'),

    ],

    /*
    |--------------------------------------------------------------------------
    | Testing
    |--------------------------------------------------------------------------
    |
    | The values described here are used to locate Inertia components on the
    | filesystem. For instance, when using `assertInertia`, the assertion
    | attempts to locate the component as a file relative to the paths.
    |
    */

    'testing' =&gt; [

        'ensure_pages_exist' =&gt; true,

        'page_paths' =&gt; [
            resource_path('js/pages'),
        ],

        'page_extensions' =&gt; [
            'js',
            'jsx',
            'svelte',
            'ts',
            'tsx',
            'vue',
        ],

    ],

];</content>
    

  </file>
  <file>
    
  
    <path>config/logging.php</path>
    
  
    <content>&lt;?php

use Monolog\Handler\NullHandler;
use Monolog\Handler\StreamHandler;
use Monolog\Handler\SyslogUdpHandler;
use Monolog\Processor\PsrLogMessageProcessor;

return [

    /*
    |--------------------------------------------------------------------------
    | Default Log Channel
    |--------------------------------------------------------------------------
    |
    | This option defines the default log channel that is utilized to write
    | messages to your logs. The value provided here should match one of
    | the channels present in the list of "channels" configured below.
    |
    */

    'default' =&gt; env('LOG_CHANNEL', 'stack'),

    /*
    |--------------------------------------------------------------------------
    | Deprecations Log Channel
    |--------------------------------------------------------------------------
    |
    | This option controls the log channel that should be used to log warnings
    | regarding deprecated PHP and library features. This allows you to get
    | your application ready for upcoming major versions of dependencies.
    |
    */

    'deprecations' =&gt; [
        'channel' =&gt; env('LOG_DEPRECATIONS_CHANNEL', 'null'),
        'trace' =&gt; env('LOG_DEPRECATIONS_TRACE', false),
    ],

    /*
    |--------------------------------------------------------------------------
    | Log Channels
    |--------------------------------------------------------------------------
    |
    | Here you may configure the log channels for your application. Laravel
    | utilizes the Monolog PHP logging library, which includes a variety
    | of powerful log handlers and formatters that you're free to use.
    |
    | Available drivers: "single", "daily", "slack", "syslog",
    |                    "errorlog", "monolog", "custom", "stack"
    |
    */

    'channels' =&gt; [

        'stack' =&gt; [
            'driver' =&gt; 'stack',
            'channels' =&gt; explode(',', env('LOG_STACK', 'single')),
            'ignore_exceptions' =&gt; false,
        ],

        'single' =&gt; [
            'driver' =&gt; 'single',
            'path' =&gt; storage_path('logs/laravel.log'),
            'level' =&gt; env('LOG_LEVEL', 'debug'),
            'replace_placeholders' =&gt; true,
        ],

        'daily' =&gt; [
            'driver' =&gt; 'daily',
            'path' =&gt; storage_path('logs/laravel.log'),
            'level' =&gt; env('LOG_LEVEL', 'debug'),
            'days' =&gt; env('LOG_DAILY_DAYS', 14),
            'replace_placeholders' =&gt; true,
        ],

        'slack' =&gt; [
            'driver' =&gt; 'slack',
            'url' =&gt; env('LOG_SLACK_WEBHOOK_URL'),
            'username' =&gt; env('LOG_SLACK_USERNAME', 'Laravel Log'),
            'emoji' =&gt; env('LOG_SLACK_EMOJI', ':boom:'),
            'level' =&gt; env('LOG_LEVEL', 'critical'),
            'replace_placeholders' =&gt; true,
        ],

        'papertrail' =&gt; [
            'driver' =&gt; 'monolog',
            'level' =&gt; env('LOG_LEVEL', 'debug'),
            'handler' =&gt; env('LOG_PAPERTRAIL_HANDLER', SyslogUdpHandler::class),
            'handler_with' =&gt; [
                'host' =&gt; env('PAPERTRAIL_URL'),
                'port' =&gt; env('PAPERTRAIL_PORT'),
                'connectionString' =&gt; 'tls://'.env('PAPERTRAIL_URL').':'.env('PAPERTRAIL_PORT'),
            ],
            'processors' =&gt; [PsrLogMessageProcessor::class],
        ],

        'stderr' =&gt; [
            'driver' =&gt; 'monolog',
            'level' =&gt; env('LOG_LEVEL', 'debug'),
            'handler' =&gt; StreamHandler::class,
            'formatter' =&gt; env('LOG_STDERR_FORMATTER'),
            'with' =&gt; [
                'stream' =&gt; 'php://stderr',
            ],
            'processors' =&gt; [PsrLogMessageProcessor::class],
        ],

        'syslog' =&gt; [
            'driver' =&gt; 'syslog',
            'level' =&gt; env('LOG_LEVEL', 'debug'),
            'facility' =&gt; env('LOG_SYSLOG_FACILITY', LOG_USER),
            'replace_placeholders' =&gt; true,
        ],

        'errorlog' =&gt; [
            'driver' =&gt; 'errorlog',
            'level' =&gt; env('LOG_LEVEL', 'debug'),
            'replace_placeholders' =&gt; true,
        ],

        'null' =&gt; [
            'driver' =&gt; 'monolog',
            'handler' =&gt; NullHandler::class,
        ],

        'emergency' =&gt; [
            'path' =&gt; storage_path('logs/laravel.log'),
        ],

    ],

];</content>
    

  </file>
  <file>
    
  
    <path>config/session.php</path>
    
  
    <content>&lt;?php

use Illuminate\Support\Str;

return [

    /*
    |--------------------------------------------------------------------------
    | Default Session Driver
    |--------------------------------------------------------------------------
    |
    | This option determines the default session driver that is utilized for
    | incoming requests. Laravel supports a variety of storage options to
    | persist session data. Database storage is a great default choice.
    |
    | Supported: "file", "cookie", "database", "apc",
    |            "memcached", "redis", "dynamodb", "array"
    |
    */

    'driver' =&gt; env('SESSION_DRIVER', 'database'),

    /*
    |--------------------------------------------------------------------------
    | Session Lifetime
    |--------------------------------------------------------------------------
    |
    | Here you may specify the number of minutes that you wish the session
    | to be allowed to remain idle before it expires. If you want them
    | to expire immediately when the browser is closed then you may
    | indicate that via the expire_on_close configuration option.
    |
    */

    'lifetime' =&gt; (int) env('SESSION_LIFETIME', 120),

    'expire_on_close' =&gt; env('SESSION_EXPIRE_ON_CLOSE', false),

    /*
    |--------------------------------------------------------------------------
    | Session Encryption
    |--------------------------------------------------------------------------
    |
    | This option allows you to easily specify that all of your session data
    | should be encrypted before it's stored. All encryption is performed
    | automatically by Laravel and you may use the session like normal.
    |
    */

    'encrypt' =&gt; env('SESSION_ENCRYPT', false),

    /*
    |--------------------------------------------------------------------------
    | Session File Location
    |--------------------------------------------------------------------------
    |
    | When utilizing the "file" session driver, the session files are placed
    | on disk. The default storage location is defined here; however, you
    | are free to provide another location where they should be stored.
    |
    */

    'files' =&gt; storage_path('framework/sessions'),

    /*
    |--------------------------------------------------------------------------
    | Session Database Connection
    |--------------------------------------------------------------------------
    |
    | When using the "database" or "redis" session drivers, you may specify a
    | connection that should be used to manage these sessions. This should
    | correspond to a connection in your database configuration options.
    |
    */

    'connection' =&gt; env('SESSION_CONNECTION'),

    /*
    |--------------------------------------------------------------------------
    | Session Database Table
    |--------------------------------------------------------------------------
    |
    | When using the "database" session driver, you may specify the table to
    | be used to store sessions. Of course, a sensible default is defined
    | for you; however, you're welcome to change this to another table.
    |
    */

    'table' =&gt; env('SESSION_TABLE', 'sessions'),

    /*
    |--------------------------------------------------------------------------
    | Session Cache Store
    |--------------------------------------------------------------------------
    |
    | When using one of the framework's cache driven session backends, you may
    | define the cache store which should be used to store the session data
    | between requests. This must match one of your defined cache stores.
    |
    | Affects: "apc", "dynamodb", "memcached", "redis"
    |
    */

    'store' =&gt; env('SESSION_STORE'),

    /*
    |--------------------------------------------------------------------------
    | Session Sweeping Lottery
    |--------------------------------------------------------------------------
    |
    | Some session drivers must manually sweep their storage location to get
    | rid of old sessions from storage. Here are the chances that it will
    | happen on a given request. By default, the odds are 2 out of 100.
    |
    */

    'lottery' =&gt; [2, 100],

    /*
    |--------------------------------------------------------------------------
    | Session Cookie Name
    |--------------------------------------------------------------------------
    |
    | Here you may change the name of the session cookie that is created by
    | the framework. Typically, you should not need to change this value
    | since doing so does not grant a meaningful security improvement.
    |
    */

    'cookie' =&gt; env(
        'SESSION_COOKIE',
        Str::slug(env('APP_NAME', 'laravel'), '_').'_session'
    ),

    /*
    |--------------------------------------------------------------------------
    | Session Cookie Path
    |--------------------------------------------------------------------------
    |
    | The session cookie path determines the path for which the cookie will
    | be regarded as available. Typically, this will be the root path of
    | your application, but you're free to change this when necessary.
    |
    */

    'path' =&gt; env('SESSION_PATH', '/'),

    /*
    |--------------------------------------------------------------------------
    | Session Cookie Domain
    |--------------------------------------------------------------------------
    |
    | This value determines the domain and subdomains the session cookie is
    | available to. By default, the cookie will be available to the root
    | domain and all subdomains. Typically, this shouldn't be changed.
    |
    */

    'domain' =&gt; env('SESSION_DOMAIN'),

    /*
    |--------------------------------------------------------------------------
    | HTTPS Only Cookies
    |--------------------------------------------------------------------------
    |
    | By setting this option to true, session cookies will only be sent back
    | to the server if the browser has a HTTPS connection. This will keep
    | the cookie from being sent to you when it can't be done securely.
    |
    */

    'secure' =&gt; env('SESSION_SECURE_COOKIE'),

    /*
    |--------------------------------------------------------------------------
    | HTTP Access Only
    |--------------------------------------------------------------------------
    |
    | Setting this value to true will prevent JavaScript from accessing the
    | value of the cookie and the cookie will only be accessible through
    | the HTTP protocol. It's unlikely you should disable this option.
    |
    */

    'http_only' =&gt; env('SESSION_HTTP_ONLY', true),

    /*
    |--------------------------------------------------------------------------
    | Same-Site Cookies
    |--------------------------------------------------------------------------
    |
    | This option determines how your cookies behave when cross-site requests
    | take place, and can be used to mitigate CSRF attacks. By default, we
    | will set this value to "lax" to permit secure cross-site requests.
    |
    | See: https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Set-Cookie#samesitesamesite-value
    |
    | Supported: "lax", "strict", "none", null
    |
    */

    'same_site' =&gt; env('SESSION_SAME_SITE', 'lax'),

    /*
    |--------------------------------------------------------------------------
    | Partitioned Cookies
    |--------------------------------------------------------------------------
    |
    | Setting this value to true will tie the cookie to the top-level site for
    | a cross-site context. Partitioned cookies are accepted by the browser
    | when flagged "secure" and the Same-Site attribute is set to "none".
    |
    */

    'partitioned' =&gt; env('SESSION_PARTITIONED_COOKIE', false),

];</content>
    

  </file>
  <file>
    
  
    <path>database/.gitignore</path>
    
  
    <content>*.sqlite*</content>
    

  </file>
  <file>
    
  
    <path>database/migrations/0001_01_01_000001_create_cache_table.php</path>
    
  
    <content>&lt;?php

use Illuminate\Database\Migrations\Migration;
use Illuminate\Database\Schema\Blueprint;
use Illuminate\Support\Facades\Schema;

return new class extends Migration
{
    /**
     * Run the migrations.
     */
    public function up(): void
    {
        Schema::create('cache', function (Blueprint $table) {
            $table-&gt;string('key')-&gt;primary();
            $table-&gt;mediumText('value');
            $table-&gt;integer('expiration');
        });

        Schema::create('cache_locks', function (Blueprint $table) {
            $table-&gt;string('key')-&gt;primary();
            $table-&gt;string('owner');
            $table-&gt;integer('expiration');
        });
    }

    /**
     * Reverse the migrations.
     */
    public function down(): void
    {
        Schema::dropIfExists('cache');
        Schema::dropIfExists('cache_locks');
    }
};</content>
    

  </file>
  <file>
    
  
    <path>database/migrations/0001_01_01_000002_create_jobs_table.php</path>
    
  
    <content>&lt;?php

use Illuminate\Database\Migrations\Migration;
use Illuminate\Database\Schema\Blueprint;
use Illuminate\Support\Facades\Schema;

return new class extends Migration
{
    /**
     * Run the migrations.
     */
    public function up(): void
    {
        Schema::create('jobs', function (Blueprint $table) {
            $table-&gt;id();
            $table-&gt;string('queue')-&gt;index();
            $table-&gt;longText('payload');
            $table-&gt;unsignedTinyInteger('attempts');
            $table-&gt;unsignedInteger('reserved_at')-&gt;nullable();
            $table-&gt;unsignedInteger('available_at');
            $table-&gt;unsignedInteger('created_at');
        });

        Schema::create('job_batches', function (Blueprint $table) {
            $table-&gt;string('id')-&gt;primary();
            $table-&gt;string('name');
            $table-&gt;integer('total_jobs');
            $table-&gt;integer('pending_jobs');
            $table-&gt;integer('failed_jobs');
            $table-&gt;longText('failed_job_ids');
            $table-&gt;mediumText('options')-&gt;nullable();
            $table-&gt;integer('cancelled_at')-&gt;nullable();
            $table-&gt;integer('created_at');
            $table-&gt;integer('finished_at')-&gt;nullable();
        });

        Schema::create('failed_jobs', function (Blueprint $table) {
            $table-&gt;id();
            $table-&gt;string('uuid')-&gt;unique();
            $table-&gt;text('connection');
            $table-&gt;text('queue');
            $table-&gt;longText('payload');
            $table-&gt;longText('exception');
            $table-&gt;timestamp('failed_at')-&gt;useCurrent();
        });
    }

    /**
     * Reverse the migrations.
     */
    public function down(): void
    {
        Schema::dropIfExists('jobs');
        Schema::dropIfExists('job_batches');
        Schema::dropIfExists('failed_jobs');
    }
};</content>
    

  </file>
  <file>
    
  
    <path>database/seeders/DatabaseSeeder.php</path>
    
  
    <content>&lt;?php

namespace Database\Seeders;

use App\Models\User;
// use Illuminate\Database\Console\Seeds\WithoutModelEvents;
use Illuminate\Database\Seeder;

class DatabaseSeeder extends Seeder
{
    /**
     * Seed the application's database.
     */
    public function run(): void
    {
        // User::factory(10)-&gt;create();

        User::factory()-&gt;create([
            'name' =&gt; 'Test User',
            'email' =&gt; 'test@example.com',
        ]);
    }
}</content>
    

  </file>
  <file>
    
  
    <path>eslint.config.js</path>
    
  
    <content>import js from '@eslint/js';
import prettier from 'eslint-config-prettier';
import react from 'eslint-plugin-react';
import reactHooks from 'eslint-plugin-react-hooks';
import globals from 'globals';
import typescript from 'typescript-eslint';

/** @type {import('eslint').Linter.Config[]} */
export default [
    js.configs.recommended,
    ...typescript.configs.recommended,
    {
        ...react.configs.flat.recommended,
        ...react.configs.flat['jsx-runtime'], // Required for React 17+
        languageOptions: {
            globals: {
                ...globals.browser,
            },
        },
        rules: {
            'react/react-in-jsx-scope': 'off',
            'react/prop-types': 'off',
            'react/no-unescaped-entities': 'off',
        },
        settings: {
            react: {
                version: 'detect',
            },
        },
    },
    {
        plugins: {
            'react-hooks': reactHooks,
        },
        rules: {
            'react-hooks/rules-of-hooks': 'error',
            'react-hooks/exhaustive-deps': 'warn',
        },
    },
    {
        ignores: ['vendor', 'node_modules', 'public', 'bootstrap/ssr', 'tailwind.config.js'],
    },
    prettier, // Turn off all rules that might conflict with Prettier
];</content>
    

  </file>
  <file>
    
  
    <path>package.json</path>
    
  
    <content>{
    "private": true,
    "type": "module",
    "scripts": {
        "build": "vite build",
        "build:ssr": "vite build &amp;&amp; vite build --ssr",
        "dev": "vite",
        "format": "prettier --write resources/",
        "format:check": "prettier --check resources/",
        "lint": "eslint . --fix",
        "types": "tsc --noEmit"
    },
    "devDependencies": {
        "@eslint/js": "^9.19.0",
        "@laravel/vite-plugin-wayfinder": "^0.1.3",
        "@types/node": "^22.13.5",
        "eslint": "^9.17.0",
        "eslint-config-prettier": "^10.0.1",
        "eslint-plugin-react": "^7.37.3",
        "eslint-plugin-react-hooks": "^5.1.0",
        "prettier": "^3.4.2",
        "prettier-plugin-organize-imports": "^4.1.0",
        "prettier-plugin-tailwindcss": "^0.6.11",
        "typescript-eslint": "^8.23.0"
    },
    "dependencies": {
        "@headlessui/react": "^2.2.0",
        "@inertiajs/react": "^2.1.0",
        "@radix-ui/react-avatar": "^1.1.3",
        "@radix-ui/react-checkbox": "^1.1.4",
        "@radix-ui/react-collapsible": "^1.1.3",
        "@radix-ui/react-dialog": "^1.1.6",
        "@radix-ui/react-dropdown-menu": "^2.1.6",
        "@radix-ui/react-label": "^2.1.2",
        "@radix-ui/react-navigation-menu": "^1.2.5",
        "@radix-ui/react-select": "^2.1.6",
        "@radix-ui/react-separator": "^1.1.2",
        "@radix-ui/react-slot": "^1.1.2",
        "@radix-ui/react-toggle": "^1.1.2",
        "@radix-ui/react-toggle-group": "^1.1.2",
        "@radix-ui/react-tooltip": "^1.1.8",
        "@tailwindcss/vite": "^4.1.11",
        "@types/react": "^19.0.3",
        "@types/react-dom": "^19.0.2",
        "@vitejs/plugin-react": "^4.6.0",
        "class-variance-authority": "^0.7.1",
        "clsx": "^2.1.1",
        "concurrently": "^9.0.1",
        "globals": "^15.14.0",
        "laravel-vite-plugin": "^2.0",
        "lucide-react": "^0.475.0",
        "react": "^19.0.0",
        "react-dom": "^19.0.0",
        "tailwind-merge": "^3.0.1",
        "tailwindcss": "^4.0.0",
        "tailwindcss-animate": "^1.0.7",
        "typescript": "^5.7.2",
        "vite": "^7.0.4"
    },
    "optionalDependencies": {
        "@rollup/rollup-linux-x64-gnu": "4.9.5",
        "@tailwindcss/oxide-linux-x64-gnu": "^4.0.1",
        "lightningcss-linux-x64-gnu": "^1.29.1"
    }
}</content>
    

  </file>
  <file>
    
  
    <path>phpunit.xml</path>
    
  
    <content>&lt;?xml version="1.0" encoding="UTF-8"?&gt;
&lt;phpunit xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:noNamespaceSchemaLocation="vendor/phpunit/phpunit/phpunit.xsd"
         bootstrap="vendor/autoload.php"
         colors="true"
&gt;
    &lt;testsuites&gt;
        &lt;testsuite name="Unit"&gt;
            &lt;directory&gt;tests/Unit&lt;/directory&gt;
        &lt;/testsuite&gt;
        &lt;testsuite name="Feature"&gt;
            &lt;directory&gt;tests/Feature&lt;/directory&gt;
        &lt;/testsuite&gt;
    &lt;/testsuites&gt;
    &lt;source&gt;
        &lt;include&gt;
            &lt;directory&gt;app&lt;/directory&gt;
        &lt;/include&gt;
    &lt;/source&gt;
    &lt;php&gt;
        &lt;env name="APP_ENV" value="testing"/&gt;
        &lt;env name="APP_MAINTENANCE_DRIVER" value="file"/&gt;
        &lt;env name="BCRYPT_ROUNDS" value="4"/&gt;
        &lt;env name="CACHE_STORE" value="array"/&gt;
        &lt;env name="DB_CONNECTION" value="sqlite"/&gt;
        &lt;env name="DB_DATABASE" value=":memory:"/&gt;
        &lt;env name="MAIL_MAILER" value="array"/&gt;
        &lt;env name="PULSE_ENABLED" value="false"/&gt;
        &lt;env name="QUEUE_CONNECTION" value="sync"/&gt;
        &lt;env name="SESSION_DRIVER" value="array"/&gt;
        &lt;env name="TELESCOPE_ENABLED" value="false"/&gt;
    &lt;/php&gt;
&lt;/phpunit&gt;</content>
    

  </file>
  <file>
    
  
    <path>public/.htaccess</path>
    
  
    <content>&lt;IfModule mod_rewrite.c&gt;
    &lt;IfModule mod_negotiation.c&gt;
        Options -MultiViews -Indexes
    &lt;/IfModule&gt;

    RewriteEngine On

    # Handle Authorization Header
    RewriteCond %{HTTP:Authorization} .
    RewriteRule .* - [E=HTTP_AUTHORIZATION:%{HTTP:Authorization}]

    # Handle X-XSRF-Token Header
    RewriteCond %{HTTP:x-xsrf-token} .
    RewriteRule .* - [E=HTTP_X_XSRF_TOKEN:%{HTTP:X-XSRF-Token}]

    # Redirect Trailing Slashes If Not A Folder...
    RewriteCond %{REQUEST_FILENAME} !-d
    RewriteCond %{REQUEST_URI} (.+)/$
    RewriteRule ^ %1 [L,R=301]

    # Send Requests To Front Controller...
    RewriteCond %{REQUEST_FILENAME} !-d
    RewriteCond %{REQUEST_FILENAME} !-f
    RewriteRule ^ index.php [L]
&lt;/IfModule&gt;</content>
    

  </file>
  <file>
    
  
    <path>public/index.php</path>
    
  
    <content>&lt;?php

use Illuminate\Foundation\Application;
use Illuminate\Http\Request;

define('LARAVEL_START', microtime(true));

// Determine if the application is in maintenance mode...
if (file_exists($maintenance = __DIR__.'/../storage/framework/maintenance.php')) {
    require $maintenance;
}

// Register the Composer autoloader...
require __DIR__.'/../vendor/autoload.php';

// Bootstrap Laravel and handle the request...
/** @var Application $app */
$app = require_once __DIR__.'/../bootstrap/app.php';

$app-&gt;handleRequest(Request::capture());</content>
    

  </file>
  <file>
    
  
    <path>public/robots.txt</path>
    
  
    <content>User-agent: *
Disallow:</content>
    

  </file>
  <file>
    
  
    <path>resources/css/app.css</path>
    
  
    <content>@import 'tailwindcss';

@plugin 'tailwindcss-animate';

@source '../views';
@source '../../vendor/laravel/framework/src/Illuminate/Pagination/resources/views/*.blade.php';

@custom-variant dark (&amp;:is(.dark *));

@theme {
    --font-sans:
        'Instrument Sans', ui-sans-serif, system-ui, sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol', 'Noto Color Emoji';

    --radius-lg: var(--radius);
    --radius-md: calc(var(--radius) - 2px);
    --radius-sm: calc(var(--radius) - 4px);

    --color-background: var(--background);
    --color-foreground: var(--foreground);

    --color-card: var(--card);
    --color-card-foreground: var(--card-foreground);

    --color-popover: var(--popover);
    --color-popover-foreground: var(--popover-foreground);

    --color-primary: var(--primary);
    --color-primary-foreground: var(--primary-foreground);

    --color-secondary: var(--secondary);
    --color-secondary-foreground: var(--secondary-foreground);

    --color-muted: var(--muted);
    --color-muted-foreground: var(--muted-foreground);

    --color-accent: var(--accent);
    --color-accent-foreground: var(--accent-foreground);

    --color-destructive: var(--destructive);
    --color-destructive-foreground: var(--destructive-foreground);

    --color-border: var(--border);
    --color-input: var(--input);
    --color-ring: var(--ring);

    --color-chart-1: var(--chart-1);
    --color-chart-2: var(--chart-2);
    --color-chart-3: var(--chart-3);
    --color-chart-4: var(--chart-4);
    --color-chart-5: var(--chart-5);

    --color-sidebar: var(--sidebar);
    --color-sidebar-foreground: var(--sidebar-foreground);
    --color-sidebar-primary: var(--sidebar-primary);
    --color-sidebar-primary-foreground: var(--sidebar-primary-foreground);
    --color-sidebar-accent: var(--sidebar-accent);
    --color-sidebar-accent-foreground: var(--sidebar-accent-foreground);
    --color-sidebar-border: var(--sidebar-border);
    --color-sidebar-ring: var(--sidebar-ring);
}

:root {
    --background: oklch(1 0 0);
    --foreground: oklch(0.145 0 0);
    --card: oklch(1 0 0);
    --card-foreground: oklch(0.145 0 0);
    --popover: oklch(1 0 0);
    --popover-foreground: oklch(0.145 0 0);
    --primary: oklch(0.205 0 0);
    --primary-foreground: oklch(0.985 0 0);
    --secondary: oklch(0.97 0 0);
    --secondary-foreground: oklch(0.205 0 0);
    --muted: oklch(0.97 0 0);
    --muted-foreground: oklch(0.556 0 0);
    --accent: oklch(0.97 0 0);
    --accent-foreground: oklch(0.205 0 0);
    --destructive: oklch(0.577 0.245 27.325);
    --destructive-foreground: oklch(0.577 0.245 27.325);
    --border: oklch(0.922 0 0);
    --input: oklch(0.922 0 0);
    --ring: oklch(0.87 0 0);
    --chart-1: oklch(0.646 0.222 41.116);
    --chart-2: oklch(0.6 0.118 184.704);
    --chart-3: oklch(0.398 0.07 227.392);
    --chart-4: oklch(0.828 0.189 84.429);
    --chart-5: oklch(0.769 0.188 70.08);
    --radius: 0.625rem;
    --sidebar: oklch(0.985 0 0);
    --sidebar-foreground: oklch(0.145 0 0);
    --sidebar-primary: oklch(0.205 0 0);
    --sidebar-primary-foreground: oklch(0.985 0 0);
    --sidebar-accent: oklch(0.97 0 0);
    --sidebar-accent-foreground: oklch(0.205 0 0);
    --sidebar-border: oklch(0.922 0 0);
    --sidebar-ring: oklch(0.87 0 0);
}

.dark {
    --background: oklch(0.145 0 0);
    --foreground: oklch(0.985 0 0);
    --card: oklch(0.145 0 0);
    --card-foreground: oklch(0.985 0 0);
    --popover: oklch(0.145 0 0);
    --popover-foreground: oklch(0.985 0 0);
    --primary: oklch(0.985 0 0);
    --primary-foreground: oklch(0.205 0 0);
    --secondary: oklch(0.269 0 0);
    --secondary-foreground: oklch(0.985 0 0);
    --muted: oklch(0.269 0 0);
    --muted-foreground: oklch(0.708 0 0);
    --accent: oklch(0.269 0 0);
    --accent-foreground: oklch(0.985 0 0);
    --destructive: oklch(0.396 0.141 25.723);
    --destructive-foreground: oklch(0.637 0.237 25.331);
    --border: oklch(0.269 0 0);
    --input: oklch(0.269 0 0);
    --ring: oklch(0.439 0 0);
    --chart-1: oklch(0.488 0.243 264.376);
    --chart-2: oklch(0.696 0.17 162.48);
    --chart-3: oklch(0.769 0.188 70.08);
    --chart-4: oklch(0.627 0.265 303.9);
    --chart-5: oklch(0.645 0.246 16.439);
    --sidebar: oklch(0.205 0 0);
    --sidebar-foreground: oklch(0.985 0 0);
    --sidebar-primary: oklch(0.985 0 0);
    --sidebar-primary-foreground: oklch(0.985 0 0);
    --sidebar-accent: oklch(0.269 0 0);
    --sidebar-accent-foreground: oklch(0.985 0 0);
    --sidebar-border: oklch(0.269 0 0);
    --sidebar-ring: oklch(0.439 0 0);
}

@layer base {
    * {
        @apply border-border;
    }

    body {
        @apply bg-background text-foreground;
    }
}</content>
    

  </file>
  <file>
    
  
    <path>resources/js/actions/App/Http/Controllers/Auth/AuthenticatedSessionController.ts</path>
    
  
    <content>import { queryParams, type RouteQueryOptions, type RouteDefinition, type RouteFormDefinition } from './../../../../../wayfinder'
/**
* @see \App\Http\Controllers\Auth\AuthenticatedSessionController::create
 * @see app/Http/Controllers/Auth/AuthenticatedSessionController.php:19
 * @route '/login'
 */
export const create = (options?: RouteQueryOptions): RouteDefinition&lt;'get'&gt; =&gt; ({
    url: create.url(options),
    method: 'get',
})

create.definition = {
    methods: ["get","head"],
    url: '/login',
} satisfies RouteDefinition&lt;["get","head"]&gt;

/**
* @see \App\Http\Controllers\Auth\AuthenticatedSessionController::create
 * @see app/Http/Controllers/Auth/AuthenticatedSessionController.php:19
 * @route '/login'
 */
create.url = (options?: RouteQueryOptions) =&gt; {
    return create.definition.url + queryParams(options)
}

/**
* @see \App\Http\Controllers\Auth\AuthenticatedSessionController::create
 * @see app/Http/Controllers/Auth/AuthenticatedSessionController.php:19
 * @route '/login'
 */
create.get = (options?: RouteQueryOptions): RouteDefinition&lt;'get'&gt; =&gt; ({
    url: create.url(options),
    method: 'get',
})
/**
* @see \App\Http\Controllers\Auth\AuthenticatedSessionController::create
 * @see app/Http/Controllers/Auth/AuthenticatedSessionController.php:19
 * @route '/login'
 */
create.head = (options?: RouteQueryOptions): RouteDefinition&lt;'head'&gt; =&gt; ({
    url: create.url(options),
    method: 'head',
})

    /**
* @see \App\Http\Controllers\Auth\AuthenticatedSessionController::create
 * @see app/Http/Controllers/Auth/AuthenticatedSessionController.php:19
 * @route '/login'
 */
    const createForm = (options?: RouteQueryOptions): RouteFormDefinition&lt;'get'&gt; =&gt; ({
        action: create.url(options),
        method: 'get',
    })

            /**
* @see \App\Http\Controllers\Auth\AuthenticatedSessionController::create
 * @see app/Http/Controllers/Auth/AuthenticatedSessionController.php:19
 * @route '/login'
 */
        createForm.get = (options?: RouteQueryOptions): RouteFormDefinition&lt;'get'&gt; =&gt; ({
            action: create.url(options),
            method: 'get',
        })
            /**
* @see \App\Http\Controllers\Auth\AuthenticatedSessionController::create
 * @see app/Http/Controllers/Auth/AuthenticatedSessionController.php:19
 * @route '/login'
 */
        createForm.head = (options?: RouteQueryOptions): RouteFormDefinition&lt;'get'&gt; =&gt; ({
            action: create.url({
                        [options?.mergeQuery ? 'mergeQuery' : 'query']: {
                            _method: 'HEAD',
                            ...(options?.query ?? options?.mergeQuery ?? {}),
                        }
                    }),
            method: 'get',
        })
    
    create.form = createForm
/**
* @see \App\Http\Controllers\Auth\AuthenticatedSessionController::store
 * @see app/Http/Controllers/Auth/AuthenticatedSessionController.php:30
 * @route '/login'
 */
export const store = (options?: RouteQueryOptions): RouteDefinition&lt;'post'&gt; =&gt; ({
    url: store.url(options),
    method: 'post',
})

store.definition = {
    methods: ["post"],
    url: '/login',
} satisfies RouteDefinition&lt;["post"]&gt;

/**
* @see \App\Http\Controllers\Auth\AuthenticatedSessionController::store
 * @see app/Http/Controllers/Auth/AuthenticatedSessionController.php:30
 * @route '/login'
 */
store.url = (options?: RouteQueryOptions) =&gt; {
    return store.definition.url + queryParams(options)
}

/**
* @see \App\Http\Controllers\Auth\AuthenticatedSessionController::store
 * @see app/Http/Controllers/Auth/AuthenticatedSessionController.php:30
 * @route '/login'
 */
store.post = (options?: RouteQueryOptions): RouteDefinition&lt;'post'&gt; =&gt; ({
    url: store.url(options),
    method: 'post',
})

    /**
* @see \App\Http\Controllers\Auth\AuthenticatedSessionController::store
 * @see app/Http/Controllers/Auth/AuthenticatedSessionController.php:30
 * @route '/login'
 */
    const storeForm = (options?: RouteQueryOptions): RouteFormDefinition&lt;'post'&gt; =&gt; ({
        action: store.url(options),
        method: 'post',
    })

            /**
* @see \App\Http\Controllers\Auth\AuthenticatedSessionController::store
 * @see app/Http/Controllers/Auth/AuthenticatedSessionController.php:30
 * @route '/login'
 */
        storeForm.post = (options?: RouteQueryOptions): RouteFormDefinition&lt;'post'&gt; =&gt; ({
            action: store.url(options),
            method: 'post',
        })
    
    store.form = storeForm
/**
* @see \App\Http\Controllers\Auth\AuthenticatedSessionController::destroy
 * @see app/Http/Controllers/Auth/AuthenticatedSessionController.php:42
 * @route '/logout'
 */
export const destroy = (options?: RouteQueryOptions): RouteDefinition&lt;'post'&gt; =&gt; ({
    url: destroy.url(options),
    method: 'post',
})

destroy.definition = {
    methods: ["post"],
    url: '/logout',
} satisfies RouteDefinition&lt;["post"]&gt;

/**
* @see \App\Http\Controllers\Auth\AuthenticatedSessionController::destroy
 * @see app/Http/Controllers/Auth/AuthenticatedSessionController.php:42
 * @route '/logout'
 */
destroy.url = (options?: RouteQueryOptions) =&gt; {
    return destroy.definition.url + queryParams(options)
}

/**
* @see \App\Http\Controllers\Auth\AuthenticatedSessionController::destroy
 * @see app/Http/Controllers/Auth/AuthenticatedSessionController.php:42
 * @route '/logout'
 */
destroy.post = (options?: RouteQueryOptions): RouteDefinition&lt;'post'&gt; =&gt; ({
    url: destroy.url(options),
    method: 'post',
})

    /**
* @see \App\Http\Controllers\Auth\AuthenticatedSessionController::destroy
 * @see app/Http/Controllers/Auth/AuthenticatedSessionController.php:42
 * @route '/logout'
 */
    const destroyForm = (options?: RouteQueryOptions): RouteFormDefinition&lt;'post'&gt; =&gt; ({
        action: destroy.url(options),
        method: 'post',
    })

            /**
* @see \App\Http\Controllers\Auth\AuthenticatedSessionController::destroy
 * @see app/Http/Controllers/Auth/AuthenticatedSessionController.php:42
 * @route '/logout'
 */
        destroyForm.post = (options?: RouteQueryOptions): RouteFormDefinition&lt;'post'&gt; =&gt; ({
            action: destroy.url(options),
            method: 'post',
        })
    
    destroy.form = destroyForm
const AuthenticatedSessionController = { create, store, destroy }

export default AuthenticatedSessionController</content>
    

  </file>
  <file>
    
  
    <path>resources/js/actions/App/Http/Controllers/Auth/ConfirmablePasswordController.ts</path>
    
  
    <content>import { queryParams, type RouteQueryOptions, type RouteDefinition, type RouteFormDefinition } from './../../../../../wayfinder'
/**
* @see \App\Http\Controllers\Auth\ConfirmablePasswordController::show
 * @see app/Http/Controllers/Auth/ConfirmablePasswordController.php:18
 * @route '/confirm-password'
 */
export const show = (options?: RouteQueryOptions): RouteDefinition&lt;'get'&gt; =&gt; ({
    url: show.url(options),
    method: 'get',
})

show.definition = {
    methods: ["get","head"],
    url: '/confirm-password',
} satisfies RouteDefinition&lt;["get","head"]&gt;

/**
* @see \App\Http\Controllers\Auth\ConfirmablePasswordController::show
 * @see app/Http/Controllers/Auth/ConfirmablePasswordController.php:18
 * @route '/confirm-password'
 */
show.url = (options?: RouteQueryOptions) =&gt; {
    return show.definition.url + queryParams(options)
}

/**
* @see \App\Http\Controllers\Auth\ConfirmablePasswordController::show
 * @see app/Http/Controllers/Auth/ConfirmablePasswordController.php:18
 * @route '/confirm-password'
 */
show.get = (options?: RouteQueryOptions): RouteDefinition&lt;'get'&gt; =&gt; ({
    url: show.url(options),
    method: 'get',
})
/**
* @see \App\Http\Controllers\Auth\ConfirmablePasswordController::show
 * @see app/Http/Controllers/Auth/ConfirmablePasswordController.php:18
 * @route '/confirm-password'
 */
show.head = (options?: RouteQueryOptions): RouteDefinition&lt;'head'&gt; =&gt; ({
    url: show.url(options),
    method: 'head',
})

    /**
* @see \App\Http\Controllers\Auth\ConfirmablePasswordController::show
 * @see app/Http/Controllers/Auth/ConfirmablePasswordController.php:18
 * @route '/confirm-password'
 */
    const showForm = (options?: RouteQueryOptions): RouteFormDefinition&lt;'get'&gt; =&gt; ({
        action: show.url(options),
        method: 'get',
    })

            /**
* @see \App\Http\Controllers\Auth\ConfirmablePasswordController::show
 * @see app/Http/Controllers/Auth/ConfirmablePasswordController.php:18
 * @route '/confirm-password'
 */
        showForm.get = (options?: RouteQueryOptions): RouteFormDefinition&lt;'get'&gt; =&gt; ({
            action: show.url(options),
            method: 'get',
        })
            /**
* @see \App\Http\Controllers\Auth\ConfirmablePasswordController::show
 * @see app/Http/Controllers/Auth/ConfirmablePasswordController.php:18
 * @route '/confirm-password'
 */
        showForm.head = (options?: RouteQueryOptions): RouteFormDefinition&lt;'get'&gt; =&gt; ({
            action: show.url({
                        [options?.mergeQuery ? 'mergeQuery' : 'query']: {
                            _method: 'HEAD',
                            ...(options?.query ?? options?.mergeQuery ?? {}),
                        }
                    }),
            method: 'get',
        })
    
    show.form = showForm
/**
* @see \App\Http\Controllers\Auth\ConfirmablePasswordController::store
 * @see app/Http/Controllers/Auth/ConfirmablePasswordController.php:26
 * @route '/confirm-password'
 */
export const store = (options?: RouteQueryOptions): RouteDefinition&lt;'post'&gt; =&gt; ({
    url: store.url(options),
    method: 'post',
})

store.definition = {
    methods: ["post"],
    url: '/confirm-password',
} satisfies RouteDefinition&lt;["post"]&gt;

/**
* @see \App\Http\Controllers\Auth\ConfirmablePasswordController::store
 * @see app/Http/Controllers/Auth/ConfirmablePasswordController.php:26
 * @route '/confirm-password'
 */
store.url = (options?: RouteQueryOptions) =&gt; {
    return store.definition.url + queryParams(options)
}

/**
* @see \App\Http\Controllers\Auth\ConfirmablePasswordController::store
 * @see app/Http/Controllers/Auth/ConfirmablePasswordController.php:26
 * @route '/confirm-password'
 */
store.post = (options?: RouteQueryOptions): RouteDefinition&lt;'post'&gt; =&gt; ({
    url: store.url(options),
    method: 'post',
})

    /**
* @see \App\Http\Controllers\Auth\ConfirmablePasswordController::store
 * @see app/Http/Controllers/Auth/ConfirmablePasswordController.php:26
 * @route '/confirm-password'
 */
    const storeForm = (options?: RouteQueryOptions): RouteFormDefinition&lt;'post'&gt; =&gt; ({
        action: store.url(options),
        method: 'post',
    })

            /**
* @see \App\Http\Controllers\Auth\ConfirmablePasswordController::store
 * @see app/Http/Controllers/Auth/ConfirmablePasswordController.php:26
 * @route '/confirm-password'
 */
        storeForm.post = (options?: RouteQueryOptions): RouteFormDefinition&lt;'post'&gt; =&gt; ({
            action: store.url(options),
            method: 'post',
        })
    
    store.form = storeForm
const ConfirmablePasswordController = { show, store }

export default ConfirmablePasswordController</content>
    

  </file>
  <file>
    
  
    <path>resources/js/actions/App/Http/Controllers/Auth/EmailVerificationNotificationController.ts</path>
    
  
    <content>import { queryParams, type RouteQueryOptions, type RouteDefinition, type RouteFormDefinition } from './../../../../../wayfinder'
/**
* @see \App\Http\Controllers\Auth\EmailVerificationNotificationController::store
 * @see app/Http/Controllers/Auth/EmailVerificationNotificationController.php:14
 * @route '/email/verification-notification'
 */
export const store = (options?: RouteQueryOptions): RouteDefinition&lt;'post'&gt; =&gt; ({
    url: store.url(options),
    method: 'post',
})

store.definition = {
    methods: ["post"],
    url: '/email/verification-notification',
} satisfies RouteDefinition&lt;["post"]&gt;

/**
* @see \App\Http\Controllers\Auth\EmailVerificationNotificationController::store
 * @see app/Http/Controllers/Auth/EmailVerificationNotificationController.php:14
 * @route '/email/verification-notification'
 */
store.url = (options?: RouteQueryOptions) =&gt; {
    return store.definition.url + queryParams(options)
}

/**
* @see \App\Http\Controllers\Auth\EmailVerificationNotificationController::store
 * @see app/Http/Controllers/Auth/EmailVerificationNotificationController.php:14
 * @route '/email/verification-notification'
 */
store.post = (options?: RouteQueryOptions): RouteDefinition&lt;'post'&gt; =&gt; ({
    url: store.url(options),
    method: 'post',
})

    /**
* @see \App\Http\Controllers\Auth\EmailVerificationNotificationController::store
 * @see app/Http/Controllers/Auth/EmailVerificationNotificationController.php:14
 * @route '/email/verification-notification'
 */
    const storeForm = (options?: RouteQueryOptions): RouteFormDefinition&lt;'post'&gt; =&gt; ({
        action: store.url(options),
        method: 'post',
    })

            /**
* @see \App\Http\Controllers\Auth\EmailVerificationNotificationController::store
 * @see app/Http/Controllers/Auth/EmailVerificationNotificationController.php:14
 * @route '/email/verification-notification'
 */
        storeForm.post = (options?: RouteQueryOptions): RouteFormDefinition&lt;'post'&gt; =&gt; ({
            action: store.url(options),
            method: 'post',
        })
    
    store.form = storeForm
const EmailVerificationNotificationController = { store }

export default EmailVerificationNotificationController</content>
    

  </file>
  <file>
    
  
    <path>resources/js/actions/App/Http/Controllers/Auth/EmailVerificationPromptController.ts</path>
    
  
    <content>import { queryParams, type RouteQueryOptions, type RouteDefinition, type RouteFormDefinition } from './../../../../../wayfinder'
/**
* @see \App\Http\Controllers\Auth\EmailVerificationPromptController::__invoke
 * @see app/Http/Controllers/Auth/EmailVerificationPromptController.php:16
 * @route '/verify-email'
 */
const EmailVerificationPromptController = (options?: RouteQueryOptions): RouteDefinition&lt;'get'&gt; =&gt; ({
    url: EmailVerificationPromptController.url(options),
    method: 'get',
})

EmailVerificationPromptController.definition = {
    methods: ["get","head"],
    url: '/verify-email',
} satisfies RouteDefinition&lt;["get","head"]&gt;

/**
* @see \App\Http\Controllers\Auth\EmailVerificationPromptController::__invoke
 * @see app/Http/Controllers/Auth/EmailVerificationPromptController.php:16
 * @route '/verify-email'
 */
EmailVerificationPromptController.url = (options?: RouteQueryOptions) =&gt; {
    return EmailVerificationPromptController.definition.url + queryParams(options)
}

/**
* @see \App\Http\Controllers\Auth\EmailVerificationPromptController::__invoke
 * @see app/Http/Controllers/Auth/EmailVerificationPromptController.php:16
 * @route '/verify-email'
 */
EmailVerificationPromptController.get = (options?: RouteQueryOptions): RouteDefinition&lt;'get'&gt; =&gt; ({
    url: EmailVerificationPromptController.url(options),
    method: 'get',
})
/**
* @see \App\Http\Controllers\Auth\EmailVerificationPromptController::__invoke
 * @see app/Http/Controllers/Auth/EmailVerificationPromptController.php:16
 * @route '/verify-email'
 */
EmailVerificationPromptController.head = (options?: RouteQueryOptions): RouteDefinition&lt;'head'&gt; =&gt; ({
    url: EmailVerificationPromptController.url(options),
    method: 'head',
})

    /**
* @see \App\Http\Controllers\Auth\EmailVerificationPromptController::__invoke
 * @see app/Http/Controllers/Auth/EmailVerificationPromptController.php:16
 * @route '/verify-email'
 */
    const EmailVerificationPromptControllerForm = (options?: RouteQueryOptions): RouteFormDefinition&lt;'get'&gt; =&gt; ({
        action: EmailVerificationPromptController.url(options),
        method: 'get',
    })

            /**
* @see \App\Http\Controllers\Auth\EmailVerificationPromptController::__invoke
 * @see app/Http/Controllers/Auth/EmailVerificationPromptController.php:16
 * @route '/verify-email'
 */
        EmailVerificationPromptControllerForm.get = (options?: RouteQueryOptions): RouteFormDefinition&lt;'get'&gt; =&gt; ({
            action: EmailVerificationPromptController.url(options),
            method: 'get',
        })
            /**
* @see \App\Http\Controllers\Auth\EmailVerificationPromptController::__invoke
 * @see app/Http/Controllers/Auth/EmailVerificationPromptController.php:16
 * @route '/verify-email'
 */
        EmailVerificationPromptControllerForm.head = (options?: RouteQueryOptions): RouteFormDefinition&lt;'get'&gt; =&gt; ({
            action: EmailVerificationPromptController.url({
                        [options?.mergeQuery ? 'mergeQuery' : 'query']: {
                            _method: 'HEAD',
                            ...(options?.query ?? options?.mergeQuery ?? {}),
                        }
                    }),
            method: 'get',
        })
    
    EmailVerificationPromptController.form = EmailVerificationPromptControllerForm
export default EmailVerificationPromptController</content>
    

  </file>
  <file>
    
  
    <path>resources/js/actions/App/Http/Controllers/Auth/PasswordResetLinkController.ts</path>
    
  
    <content>import { queryParams, type RouteQueryOptions, type RouteDefinition, type RouteFormDefinition } from './../../../../../wayfinder'
/**
* @see \App\Http\Controllers\Auth\PasswordResetLinkController::create
 * @see app/Http/Controllers/Auth/PasswordResetLinkController.php:17
 * @route '/forgot-password'
 */
export const create = (options?: RouteQueryOptions): RouteDefinition&lt;'get'&gt; =&gt; ({
    url: create.url(options),
    method: 'get',
})

create.definition = {
    methods: ["get","head"],
    url: '/forgot-password',
} satisfies RouteDefinition&lt;["get","head"]&gt;

/**
* @see \App\Http\Controllers\Auth\PasswordResetLinkController::create
 * @see app/Http/Controllers/Auth/PasswordResetLinkController.php:17
 * @route '/forgot-password'
 */
create.url = (options?: RouteQueryOptions) =&gt; {
    return create.definition.url + queryParams(options)
}

/**
* @see \App\Http\Controllers\Auth\PasswordResetLinkController::create
 * @see app/Http/Controllers/Auth/PasswordResetLinkController.php:17
 * @route '/forgot-password'
 */
create.get = (options?: RouteQueryOptions): RouteDefinition&lt;'get'&gt; =&gt; ({
    url: create.url(options),
    method: 'get',
})
/**
* @see \App\Http\Controllers\Auth\PasswordResetLinkController::create
 * @see app/Http/Controllers/Auth/PasswordResetLinkController.php:17
 * @route '/forgot-password'
 */
create.head = (options?: RouteQueryOptions): RouteDefinition&lt;'head'&gt; =&gt; ({
    url: create.url(options),
    method: 'head',
})

    /**
* @see \App\Http\Controllers\Auth\PasswordResetLinkController::create
 * @see app/Http/Controllers/Auth/PasswordResetLinkController.php:17
 * @route '/forgot-password'
 */
    const createForm = (options?: RouteQueryOptions): RouteFormDefinition&lt;'get'&gt; =&gt; ({
        action: create.url(options),
        method: 'get',
    })

            /**
* @see \App\Http\Controllers\Auth\PasswordResetLinkController::create
 * @see app/Http/Controllers/Auth/PasswordResetLinkController.php:17
 * @route '/forgot-password'
 */
        createForm.get = (options?: RouteQueryOptions): RouteFormDefinition&lt;'get'&gt; =&gt; ({
            action: create.url(options),
            method: 'get',
        })
            /**
* @see \App\Http\Controllers\Auth\PasswordResetLinkController::create
 * @see app/Http/Controllers/Auth/PasswordResetLinkController.php:17
 * @route '/forgot-password'
 */
        createForm.head = (options?: RouteQueryOptions): RouteFormDefinition&lt;'get'&gt; =&gt; ({
            action: create.url({
                        [options?.mergeQuery ? 'mergeQuery' : 'query']: {
                            _method: 'HEAD',
                            ...(options?.query ?? options?.mergeQuery ?? {}),
                        }
                    }),
            method: 'get',
        })
    
    create.form = createForm
/**
* @see \App\Http\Controllers\Auth\PasswordResetLinkController::store
 * @see app/Http/Controllers/Auth/PasswordResetLinkController.php:29
 * @route '/forgot-password'
 */
export const store = (options?: RouteQueryOptions): RouteDefinition&lt;'post'&gt; =&gt; ({
    url: store.url(options),
    method: 'post',
})

store.definition = {
    methods: ["post"],
    url: '/forgot-password',
} satisfies RouteDefinition&lt;["post"]&gt;

/**
* @see \App\Http\Controllers\Auth\PasswordResetLinkController::store
 * @see app/Http/Controllers/Auth/PasswordResetLinkController.php:29
 * @route '/forgot-password'
 */
store.url = (options?: RouteQueryOptions) =&gt; {
    return store.definition.url + queryParams(options)
}

/**
* @see \App\Http\Controllers\Auth\PasswordResetLinkController::store
 * @see app/Http/Controllers/Auth/PasswordResetLinkController.php:29
 * @route '/forgot-password'
 */
store.post = (options?: RouteQueryOptions): RouteDefinition&lt;'post'&gt; =&gt; ({
    url: store.url(options),
    method: 'post',
})

    /**
* @see \App\Http\Controllers\Auth\PasswordResetLinkController::store
 * @see app/Http/Controllers/Auth/PasswordResetLinkController.php:29
 * @route '/forgot-password'
 */
    const storeForm = (options?: RouteQueryOptions): RouteFormDefinition&lt;'post'&gt; =&gt; ({
        action: store.url(options),
        method: 'post',
    })

            /**
* @see \App\Http\Controllers\Auth\PasswordResetLinkController::store
 * @see app/Http/Controllers/Auth/PasswordResetLinkController.php:29
 * @route '/forgot-password'
 */
        storeForm.post = (options?: RouteQueryOptions): RouteFormDefinition&lt;'post'&gt; =&gt; ({
            action: store.url(options),
            method: 'post',
        })
    
    store.form = storeForm
const PasswordResetLinkController = { create, store }

export default PasswordResetLinkController</content>
    

  </file>
  <file>
    
  
    <path>resources/js/actions/App/Http/Controllers/Auth/RegisteredUserController.ts</path>
    
  
    <content>import { queryParams, type RouteQueryOptions, type RouteDefinition, type RouteFormDefinition } from './../../../../../wayfinder'
/**
* @see \App\Http\Controllers\Auth\RegisteredUserController::create
 * @see app/Http/Controllers/Auth/RegisteredUserController.php:21
 * @route '/register'
 */
export const create = (options?: RouteQueryOptions): RouteDefinition&lt;'get'&gt; =&gt; ({
    url: create.url(options),
    method: 'get',
})

create.definition = {
    methods: ["get","head"],
    url: '/register',
} satisfies RouteDefinition&lt;["get","head"]&gt;

/**
* @see \App\Http\Controllers\Auth\RegisteredUserController::create
 * @see app/Http/Controllers/Auth/RegisteredUserController.php:21
 * @route '/register'
 */
create.url = (options?: RouteQueryOptions) =&gt; {
    return create.definition.url + queryParams(options)
}

/**
* @see \App\Http\Controllers\Auth\RegisteredUserController::create
 * @see app/Http/Controllers/Auth/RegisteredUserController.php:21
 * @route '/register'
 */
create.get = (options?: RouteQueryOptions): RouteDefinition&lt;'get'&gt; =&gt; ({
    url: create.url(options),
    method: 'get',
})
/**
* @see \App\Http\Controllers\Auth\RegisteredUserController::create
 * @see app/Http/Controllers/Auth/RegisteredUserController.php:21
 * @route '/register'
 */
create.head = (options?: RouteQueryOptions): RouteDefinition&lt;'head'&gt; =&gt; ({
    url: create.url(options),
    method: 'head',
})

    /**
* @see \App\Http\Controllers\Auth\RegisteredUserController::create
 * @see app/Http/Controllers/Auth/RegisteredUserController.php:21
 * @route '/register'
 */
    const createForm = (options?: RouteQueryOptions): RouteFormDefinition&lt;'get'&gt; =&gt; ({
        action: create.url(options),
        method: 'get',
    })

            /**
* @see \App\Http\Controllers\Auth\RegisteredUserController::create
 * @see app/Http/Controllers/Auth/RegisteredUserController.php:21
 * @route '/register'
 */
        createForm.get = (options?: RouteQueryOptions): RouteFormDefinition&lt;'get'&gt; =&gt; ({
            action: create.url(options),
            method: 'get',
        })
            /**
* @see \App\Http\Controllers\Auth\RegisteredUserController::create
 * @see app/Http/Controllers/Auth/RegisteredUserController.php:21
 * @route '/register'
 */
        createForm.head = (options?: RouteQueryOptions): RouteFormDefinition&lt;'get'&gt; =&gt; ({
            action: create.url({
                        [options?.mergeQuery ? 'mergeQuery' : 'query']: {
                            _method: 'HEAD',
                            ...(options?.query ?? options?.mergeQuery ?? {}),
                        }
                    }),
            method: 'get',
        })
    
    create.form = createForm
/**
* @see \App\Http\Controllers\Auth\RegisteredUserController::store
 * @see app/Http/Controllers/Auth/RegisteredUserController.php:31
 * @route '/register'
 */
export const store = (options?: RouteQueryOptions): RouteDefinition&lt;'post'&gt; =&gt; ({
    url: store.url(options),
    method: 'post',
})

store.definition = {
    methods: ["post"],
    url: '/register',
} satisfies RouteDefinition&lt;["post"]&gt;

/**
* @see \App\Http\Controllers\Auth\RegisteredUserController::store
 * @see app/Http/Controllers/Auth/RegisteredUserController.php:31
 * @route '/register'
 */
store.url = (options?: RouteQueryOptions) =&gt; {
    return store.definition.url + queryParams(options)
}

/**
* @see \App\Http\Controllers\Auth\RegisteredUserController::store
 * @see app/Http/Controllers/Auth/RegisteredUserController.php:31
 * @route '/register'
 */
store.post = (options?: RouteQueryOptions): RouteDefinition&lt;'post'&gt; =&gt; ({
    url: store.url(options),
    method: 'post',
})

    /**
* @see \App\Http\Controllers\Auth\RegisteredUserController::store
 * @see app/Http/Controllers/Auth/RegisteredUserController.php:31
 * @route '/register'
 */
    const storeForm = (options?: RouteQueryOptions): RouteFormDefinition&lt;'post'&gt; =&gt; ({
        action: store.url(options),
        method: 'post',
    })

            /**
* @see \App\Http\Controllers\Auth\RegisteredUserController::store
 * @see app/Http/Controllers/Auth/RegisteredUserController.php:31
 * @route '/register'
 */
        storeForm.post = (options?: RouteQueryOptions): RouteFormDefinition&lt;'post'&gt; =&gt; ({
            action: store.url(options),
            method: 'post',
        })
    
    store.form = storeForm
const RegisteredUserController = { create, store }

export default RegisteredUserController</content>
    

  </file>
  <file>
    
  
    <path>resources/js/actions/App/Http/Controllers/Auth/VerifyEmailController.ts</path>
    
  
    <content>import { queryParams, type RouteQueryOptions, type RouteDefinition, type RouteFormDefinition, applyUrlDefaults } from './../../../../../wayfinder'
/**
* @see \App\Http\Controllers\Auth\VerifyEmailController::__invoke
 * @see app/Http/Controllers/Auth/VerifyEmailController.php:14
 * @route '/verify-email/{id}/{hash}'
 */
const VerifyEmailController = (args: { id: string | number, hash: string | number } | [id: string | number, hash: string | number ], options?: RouteQueryOptions): RouteDefinition&lt;'get'&gt; =&gt; ({
    url: VerifyEmailController.url(args, options),
    method: 'get',
})

VerifyEmailController.definition = {
    methods: ["get","head"],
    url: '/verify-email/{id}/{hash}',
} satisfies RouteDefinition&lt;["get","head"]&gt;

/**
* @see \App\Http\Controllers\Auth\VerifyEmailController::__invoke
 * @see app/Http/Controllers/Auth/VerifyEmailController.php:14
 * @route '/verify-email/{id}/{hash}'
 */
VerifyEmailController.url = (args: { id: string | number, hash: string | number } | [id: string | number, hash: string | number ], options?: RouteQueryOptions) =&gt; {
    if (Array.isArray(args)) {
        args = {
                    id: args[0],
                    hash: args[1],
                }
    }

    args = applyUrlDefaults(args)

    const parsedArgs = {
                        id: args.id,
                                hash: args.hash,
                }

    return VerifyEmailController.definition.url
            .replace('{id}', parsedArgs.id.toString())
            .replace('{hash}', parsedArgs.hash.toString())
            .replace(/\/+$/, '') + queryParams(options)
}

/**
* @see \App\Http\Controllers\Auth\VerifyEmailController::__invoke
 * @see app/Http/Controllers/Auth/VerifyEmailController.php:14
 * @route '/verify-email/{id}/{hash}'
 */
VerifyEmailController.get = (args: { id: string | number, hash: string | number } | [id: string | number, hash: string | number ], options?: RouteQueryOptions): RouteDefinition&lt;'get'&gt; =&gt; ({
    url: VerifyEmailController.url(args, options),
    method: 'get',
})
/**
* @see \App\Http\Controllers\Auth\VerifyEmailController::__invoke
 * @see app/Http/Controllers/Auth/VerifyEmailController.php:14
 * @route '/verify-email/{id}/{hash}'
 */
VerifyEmailController.head = (args: { id: string | number, hash: string | number } | [id: string | number, hash: string | number ], options?: RouteQueryOptions): RouteDefinition&lt;'head'&gt; =&gt; ({
    url: VerifyEmailController.url(args, options),
    method: 'head',
})

    /**
* @see \App\Http\Controllers\Auth\VerifyEmailController::__invoke
 * @see app/Http/Controllers/Auth/VerifyEmailController.php:14
 * @route '/verify-email/{id}/{hash}'
 */
    const VerifyEmailControllerForm = (args: { id: string | number, hash: string | number } | [id: string | number, hash: string | number ], options?: RouteQueryOptions): RouteFormDefinition&lt;'get'&gt; =&gt; ({
        action: VerifyEmailController.url(args, options),
        method: 'get',
    })

            /**
* @see \App\Http\Controllers\Auth\VerifyEmailController::__invoke
 * @see app/Http/Controllers/Auth/VerifyEmailController.php:14
 * @route '/verify-email/{id}/{hash}'
 */
        VerifyEmailControllerForm.get = (args: { id: string | number, hash: string | number } | [id: string | number, hash: string | number ], options?: RouteQueryOptions): RouteFormDefinition&lt;'get'&gt; =&gt; ({
            action: VerifyEmailController.url(args, options),
            method: 'get',
        })
            /**
* @see \App\Http\Controllers\Auth\VerifyEmailController::__invoke
 * @see app/Http/Controllers/Auth/VerifyEmailController.php:14
 * @route '/verify-email/{id}/{hash}'
 */
        VerifyEmailControllerForm.head = (args: { id: string | number, hash: string | number } | [id: string | number, hash: string | number ], options?: RouteQueryOptions): RouteFormDefinition&lt;'get'&gt; =&gt; ({
            action: VerifyEmailController.url(args, {
                        [options?.mergeQuery ? 'mergeQuery' : 'query']: {
                            _method: 'HEAD',
                            ...(options?.query ?? options?.mergeQuery ?? {}),
                        }
                    }),
            method: 'get',
        })
    
    VerifyEmailController.form = VerifyEmailControllerForm
export default VerifyEmailController</content>
    

  </file>
  <file>
    
  
    <path>resources/js/actions/App/Http/Controllers/index.ts</path>
    
  
    <content>import Settings from './Settings'
import Auth from './Auth'
const Controllers = {
    Settings,
Auth,
}

export default Controllers</content>
    

  </file>
  <file>
    
  
    <path>resources/js/actions/App/Http/Controllers/Settings/PasswordController.ts</path>
    
  
    <content>import { queryParams, type RouteQueryOptions, type RouteDefinition, type RouteFormDefinition } from './../../../../../wayfinder'
/**
* @see \App\Http\Controllers\Settings\PasswordController::edit
 * @see app/Http/Controllers/Settings/PasswordController.php:18
 * @route '/settings/password'
 */
export const edit = (options?: RouteQueryOptions): RouteDefinition&lt;'get'&gt; =&gt; ({
    url: edit.url(options),
    method: 'get',
})

edit.definition = {
    methods: ["get","head"],
    url: '/settings/password',
} satisfies RouteDefinition&lt;["get","head"]&gt;

/**
* @see \App\Http\Controllers\Settings\PasswordController::edit
 * @see app/Http/Controllers/Settings/PasswordController.php:18
 * @route '/settings/password'
 */
edit.url = (options?: RouteQueryOptions) =&gt; {
    return edit.definition.url + queryParams(options)
}

/**
* @see \App\Http\Controllers\Settings\PasswordController::edit
 * @see app/Http/Controllers/Settings/PasswordController.php:18
 * @route '/settings/password'
 */
edit.get = (options?: RouteQueryOptions): RouteDefinition&lt;'get'&gt; =&gt; ({
    url: edit.url(options),
    method: 'get',
})
/**
* @see \App\Http\Controllers\Settings\PasswordController::edit
 * @see app/Http/Controllers/Settings/PasswordController.php:18
 * @route '/settings/password'
 */
edit.head = (options?: RouteQueryOptions): RouteDefinition&lt;'head'&gt; =&gt; ({
    url: edit.url(options),
    method: 'head',
})

    /**
* @see \App\Http\Controllers\Settings\PasswordController::edit
 * @see app/Http/Controllers/Settings/PasswordController.php:18
 * @route '/settings/password'
 */
    const editForm = (options?: RouteQueryOptions): RouteFormDefinition&lt;'get'&gt; =&gt; ({
        action: edit.url(options),
        method: 'get',
    })

            /**
* @see \App\Http\Controllers\Settings\PasswordController::edit
 * @see app/Http/Controllers/Settings/PasswordController.php:18
 * @route '/settings/password'
 */
        editForm.get = (options?: RouteQueryOptions): RouteFormDefinition&lt;'get'&gt; =&gt; ({
            action: edit.url(options),
            method: 'get',
        })
            /**
* @see \App\Http\Controllers\Settings\PasswordController::edit
 * @see app/Http/Controllers/Settings/PasswordController.php:18
 * @route '/settings/password'
 */
        editForm.head = (options?: RouteQueryOptions): RouteFormDefinition&lt;'get'&gt; =&gt; ({
            action: edit.url({
                        [options?.mergeQuery ? 'mergeQuery' : 'query']: {
                            _method: 'HEAD',
                            ...(options?.query ?? options?.mergeQuery ?? {}),
                        }
                    }),
            method: 'get',
        })
    
    edit.form = editForm
/**
* @see \App\Http\Controllers\Settings\PasswordController::update
 * @see app/Http/Controllers/Settings/PasswordController.php:26
 * @route '/settings/password'
 */
export const update = (options?: RouteQueryOptions): RouteDefinition&lt;'put'&gt; =&gt; ({
    url: update.url(options),
    method: 'put',
})

update.definition = {
    methods: ["put"],
    url: '/settings/password',
} satisfies RouteDefinition&lt;["put"]&gt;

/**
* @see \App\Http\Controllers\Settings\PasswordController::update
 * @see app/Http/Controllers/Settings/PasswordController.php:26
 * @route '/settings/password'
 */
update.url = (options?: RouteQueryOptions) =&gt; {
    return update.definition.url + queryParams(options)
}

/**
* @see \App\Http\Controllers\Settings\PasswordController::update
 * @see app/Http/Controllers/Settings/PasswordController.php:26
 * @route '/settings/password'
 */
update.put = (options?: RouteQueryOptions): RouteDefinition&lt;'put'&gt; =&gt; ({
    url: update.url(options),
    method: 'put',
})

    /**
* @see \App\Http\Controllers\Settings\PasswordController::update
 * @see app/Http/Controllers/Settings/PasswordController.php:26
 * @route '/settings/password'
 */
    const updateForm = (options?: RouteQueryOptions): RouteFormDefinition&lt;'post'&gt; =&gt; ({
        action: update.url({
                    [options?.mergeQuery ? 'mergeQuery' : 'query']: {
                        _method: 'PUT',
                        ...(options?.query ?? options?.mergeQuery ?? {}),
                    }
                }),
        method: 'post',
    })

            /**
* @see \App\Http\Controllers\Settings\PasswordController::update
 * @see app/Http/Controllers/Settings/PasswordController.php:26
 * @route '/settings/password'
 */
        updateForm.put = (options?: RouteQueryOptions): RouteFormDefinition&lt;'post'&gt; =&gt; ({
            action: update.url({
                        [options?.mergeQuery ? 'mergeQuery' : 'query']: {
                            _method: 'PUT',
                            ...(options?.query ?? options?.mergeQuery ?? {}),
                        }
                    }),
            method: 'post',
        })
    
    update.form = updateForm
const PasswordController = { edit, update }

export default PasswordController</content>
    

  </file>
  <file>
    
  
    <path>resources/js/actions/App/Http/Controllers/Settings/ProfileController.ts</path>
    
  
    <content>import { queryParams, type RouteQueryOptions, type RouteDefinition, type RouteFormDefinition } from './../../../../../wayfinder'
/**
* @see \App\Http\Controllers\Settings\ProfileController::edit
 * @see app/Http/Controllers/Settings/ProfileController.php:19
 * @route '/settings/profile'
 */
export const edit = (options?: RouteQueryOptions): RouteDefinition&lt;'get'&gt; =&gt; ({
    url: edit.url(options),
    method: 'get',
})

edit.definition = {
    methods: ["get","head"],
    url: '/settings/profile',
} satisfies RouteDefinition&lt;["get","head"]&gt;

/**
* @see \App\Http\Controllers\Settings\ProfileController::edit
 * @see app/Http/Controllers/Settings/ProfileController.php:19
 * @route '/settings/profile'
 */
edit.url = (options?: RouteQueryOptions) =&gt; {
    return edit.definition.url + queryParams(options)
}

/**
* @see \App\Http\Controllers\Settings\ProfileController::edit
 * @see app/Http/Controllers/Settings/ProfileController.php:19
 * @route '/settings/profile'
 */
edit.get = (options?: RouteQueryOptions): RouteDefinition&lt;'get'&gt; =&gt; ({
    url: edit.url(options),
    method: 'get',
})
/**
* @see \App\Http\Controllers\Settings\ProfileController::edit
 * @see app/Http/Controllers/Settings/ProfileController.php:19
 * @route '/settings/profile'
 */
edit.head = (options?: RouteQueryOptions): RouteDefinition&lt;'head'&gt; =&gt; ({
    url: edit.url(options),
    method: 'head',
})

    /**
* @see \App\Http\Controllers\Settings\ProfileController::edit
 * @see app/Http/Controllers/Settings/ProfileController.php:19
 * @route '/settings/profile'
 */
    const editForm = (options?: RouteQueryOptions): RouteFormDefinition&lt;'get'&gt; =&gt; ({
        action: edit.url(options),
        method: 'get',
    })

            /**
* @see \App\Http\Controllers\Settings\ProfileController::edit
 * @see app/Http/Controllers/Settings/ProfileController.php:19
 * @route '/settings/profile'
 */
        editForm.get = (options?: RouteQueryOptions): RouteFormDefinition&lt;'get'&gt; =&gt; ({
            action: edit.url(options),
            method: 'get',
        })
            /**
* @see \App\Http\Controllers\Settings\ProfileController::edit
 * @see app/Http/Controllers/Settings/ProfileController.php:19
 * @route '/settings/profile'
 */
        editForm.head = (options?: RouteQueryOptions): RouteFormDefinition&lt;'get'&gt; =&gt; ({
            action: edit.url({
                        [options?.mergeQuery ? 'mergeQuery' : 'query']: {
                            _method: 'HEAD',
                            ...(options?.query ?? options?.mergeQuery ?? {}),
                        }
                    }),
            method: 'get',
        })
    
    edit.form = editForm
/**
* @see \App\Http\Controllers\Settings\ProfileController::update
 * @see app/Http/Controllers/Settings/ProfileController.php:30
 * @route '/settings/profile'
 */
export const update = (options?: RouteQueryOptions): RouteDefinition&lt;'patch'&gt; =&gt; ({
    url: update.url(options),
    method: 'patch',
})

update.definition = {
    methods: ["patch"],
    url: '/settings/profile',
} satisfies RouteDefinition&lt;["patch"]&gt;

/**
* @see \App\Http\Controllers\Settings\ProfileController::update
 * @see app/Http/Controllers/Settings/ProfileController.php:30
 * @route '/settings/profile'
 */
update.url = (options?: RouteQueryOptions) =&gt; {
    return update.definition.url + queryParams(options)
}

/**
* @see \App\Http\Controllers\Settings\ProfileController::update
 * @see app/Http/Controllers/Settings/ProfileController.php:30
 * @route '/settings/profile'
 */
update.patch = (options?: RouteQueryOptions): RouteDefinition&lt;'patch'&gt; =&gt; ({
    url: update.url(options),
    method: 'patch',
})

    /**
* @see \App\Http\Controllers\Settings\ProfileController::update
 * @see app/Http/Controllers/Settings/ProfileController.php:30
 * @route '/settings/profile'
 */
    const updateForm = (options?: RouteQueryOptions): RouteFormDefinition&lt;'post'&gt; =&gt; ({
        action: update.url({
                    [options?.mergeQuery ? 'mergeQuery' : 'query']: {
                        _method: 'PATCH',
                        ...(options?.query ?? options?.mergeQuery ?? {}),
                    }
                }),
        method: 'post',
    })

            /**
* @see \App\Http\Controllers\Settings\ProfileController::update
 * @see app/Http/Controllers/Settings/ProfileController.php:30
 * @route '/settings/profile'
 */
        updateForm.patch = (options?: RouteQueryOptions): RouteFormDefinition&lt;'post'&gt; =&gt; ({
            action: update.url({
                        [options?.mergeQuery ? 'mergeQuery' : 'query']: {
                            _method: 'PATCH',
                            ...(options?.query ?? options?.mergeQuery ?? {}),
                        }
                    }),
            method: 'post',
        })
    
    update.form = updateForm
/**
* @see \App\Http\Controllers\Settings\ProfileController::destroy
 * @see app/Http/Controllers/Settings/ProfileController.php:46
 * @route '/settings/profile'
 */
export const destroy = (options?: RouteQueryOptions): RouteDefinition&lt;'delete'&gt; =&gt; ({
    url: destroy.url(options),
    method: 'delete',
})

destroy.definition = {
    methods: ["delete"],
    url: '/settings/profile',
} satisfies RouteDefinition&lt;["delete"]&gt;

/**
* @see \App\Http\Controllers\Settings\ProfileController::destroy
 * @see app/Http/Controllers/Settings/ProfileController.php:46
 * @route '/settings/profile'
 */
destroy.url = (options?: RouteQueryOptions) =&gt; {
    return destroy.definition.url + queryParams(options)
}

/**
* @see \App\Http\Controllers\Settings\ProfileController::destroy
 * @see app/Http/Controllers/Settings/ProfileController.php:46
 * @route '/settings/profile'
 */
destroy.delete = (options?: RouteQueryOptions): RouteDefinition&lt;'delete'&gt; =&gt; ({
    url: destroy.url(options),
    method: 'delete',
})

    /**
* @see \App\Http\Controllers\Settings\ProfileController::destroy
 * @see app/Http/Controllers/Settings/ProfileController.php:46
 * @route '/settings/profile'
 */
    const destroyForm = (options?: RouteQueryOptions): RouteFormDefinition&lt;'post'&gt; =&gt; ({
        action: destroy.url({
                    [options?.mergeQuery ? 'mergeQuery' : 'query']: {
                        _method: 'DELETE',
                        ...(options?.query ?? options?.mergeQuery ?? {}),
                    }
                }),
        method: 'post',
    })

            /**
* @see \App\Http\Controllers\Settings\ProfileController::destroy
 * @see app/Http/Controllers/Settings/ProfileController.php:46
 * @route '/settings/profile'
 */
        destroyForm.delete = (options?: RouteQueryOptions): RouteFormDefinition&lt;'post'&gt; =&gt; ({
            action: destroy.url({
                        [options?.mergeQuery ? 'mergeQuery' : 'query']: {
                            _method: 'DELETE',
                            ...(options?.query ?? options?.mergeQuery ?? {}),
                        }
                    }),
            method: 'post',
        })
    
    destroy.form = destroyForm
const ProfileController = { edit, update, destroy }

export default ProfileController</content>
    

  </file>
  <file>
    
  
    <path>resources/js/actions/App/Http/index.ts</path>
    
  
    <content>import Controllers from './Controllers'
const Http = {
    Controllers,
}

export default Http</content>
    

  </file>
  <file>
    
  
    <path>resources/js/actions/App/index.ts</path>
    
  
    <content>import Http from './Http'
const App = {
    Http,
}

export default App</content>
    

  </file>
  <file>
    
  
    <path>resources/js/actions/Illuminate/index.ts</path>
    
  
    <content>import Routing from './Routing'
const Illuminate = {
    Routing,
}

export default Illuminate</content>
    

  </file>
  <file>
    
  
    <path>resources/js/actions/Illuminate/Routing/index.ts</path>
    
  
    <content>import RedirectController from './RedirectController'
const Routing = {
    RedirectController,
}

export default Routing</content>
    

  </file>
  <file>
    
  
    <path>resources/js/actions/Illuminate/Routing/RedirectController.ts</path>
    
  
    <content>import { queryParams, type RouteQueryOptions, type RouteDefinition, type RouteFormDefinition } from './../../../wayfinder'
/**
* @see \Illuminate\Routing\RedirectController::__invoke
 * @see vendor/laravel/framework/src/Illuminate/Routing/RedirectController.php:19
 * @route '/settings'
 */
const RedirectController = (options?: RouteQueryOptions): RouteDefinition&lt;'get'&gt; =&gt; ({
    url: RedirectController.url(options),
    method: 'get',
})

RedirectController.definition = {
    methods: ["get","head","post","put","patch","delete","options"],
    url: '/settings',
} satisfies RouteDefinition&lt;["get","head","post","put","patch","delete","options"]&gt;

/**
* @see \Illuminate\Routing\RedirectController::__invoke
 * @see vendor/laravel/framework/src/Illuminate/Routing/RedirectController.php:19
 * @route '/settings'
 */
RedirectController.url = (options?: RouteQueryOptions) =&gt; {
    return RedirectController.definition.url + queryParams(options)
}

/**
* @see \Illuminate\Routing\RedirectController::__invoke
 * @see vendor/laravel/framework/src/Illuminate/Routing/RedirectController.php:19
 * @route '/settings'
 */
RedirectController.get = (options?: RouteQueryOptions): RouteDefinition&lt;'get'&gt; =&gt; ({
    url: RedirectController.url(options),
    method: 'get',
})
/**
* @see \Illuminate\Routing\RedirectController::__invoke
 * @see vendor/laravel/framework/src/Illuminate/Routing/RedirectController.php:19
 * @route '/settings'
 */
RedirectController.head = (options?: RouteQueryOptions): RouteDefinition&lt;'head'&gt; =&gt; ({
    url: RedirectController.url(options),
    method: 'head',
})
/**
* @see \Illuminate\Routing\RedirectController::__invoke
 * @see vendor/laravel/framework/src/Illuminate/Routing/RedirectController.php:19
 * @route '/settings'
 */
RedirectController.post = (options?: RouteQueryOptions): RouteDefinition&lt;'post'&gt; =&gt; ({
    url: RedirectController.url(options),
    method: 'post',
})
/**
* @see \Illuminate\Routing\RedirectController::__invoke
 * @see vendor/laravel/framework/src/Illuminate/Routing/RedirectController.php:19
 * @route '/settings'
 */
RedirectController.put = (options?: RouteQueryOptions): RouteDefinition&lt;'put'&gt; =&gt; ({
    url: RedirectController.url(options),
    method: 'put',
})
/**
* @see \Illuminate\Routing\RedirectController::__invoke
 * @see vendor/laravel/framework/src/Illuminate/Routing/RedirectController.php:19
 * @route '/settings'
 */
RedirectController.patch = (options?: RouteQueryOptions): RouteDefinition&lt;'patch'&gt; =&gt; ({
    url: RedirectController.url(options),
    method: 'patch',
})
/**
* @see \Illuminate\Routing\RedirectController::__invoke
 * @see vendor/laravel/framework/src/Illuminate/Routing/RedirectController.php:19
 * @route '/settings'
 */
RedirectController.delete = (options?: RouteQueryOptions): RouteDefinition&lt;'delete'&gt; =&gt; ({
    url: RedirectController.url(options),
    method: 'delete',
})
/**
* @see \Illuminate\Routing\RedirectController::__invoke
 * @see vendor/laravel/framework/src/Illuminate/Routing/RedirectController.php:19
 * @route '/settings'
 */
RedirectController.options = (options?: RouteQueryOptions): RouteDefinition&lt;'options'&gt; =&gt; ({
    url: RedirectController.url(options),
    method: 'options',
})

    /**
* @see \Illuminate\Routing\RedirectController::__invoke
 * @see vendor/laravel/framework/src/Illuminate/Routing/RedirectController.php:19
 * @route '/settings'
 */
    const RedirectControllerForm = (options?: RouteQueryOptions): RouteFormDefinition&lt;'get'&gt; =&gt; ({
        action: RedirectController.url(options),
        method: 'get',
    })

            /**
* @see \Illuminate\Routing\RedirectController::__invoke
 * @see vendor/laravel/framework/src/Illuminate/Routing/RedirectController.php:19
 * @route '/settings'
 */
        RedirectControllerForm.get = (options?: RouteQueryOptions): RouteFormDefinition&lt;'get'&gt; =&gt; ({
            action: RedirectController.url(options),
            method: 'get',
        })
            /**
* @see \Illuminate\Routing\RedirectController::__invoke
 * @see vendor/laravel/framework/src/Illuminate/Routing/RedirectController.php:19
 * @route '/settings'
 */
        RedirectControllerForm.head = (options?: RouteQueryOptions): RouteFormDefinition&lt;'get'&gt; =&gt; ({
            action: RedirectController.url({
                        [options?.mergeQuery ? 'mergeQuery' : 'query']: {
                            _method: 'HEAD',
                            ...(options?.query ?? options?.mergeQuery ?? {}),
                        }
                    }),
            method: 'get',
        })
            /**
* @see \Illuminate\Routing\RedirectController::__invoke
 * @see vendor/laravel/framework/src/Illuminate/Routing/RedirectController.php:19
 * @route '/settings'
 */
        RedirectControllerForm.post = (options?: RouteQueryOptions): RouteFormDefinition&lt;'post'&gt; =&gt; ({
            action: RedirectController.url(options),
            method: 'post',
        })
            /**
* @see \Illuminate\Routing\RedirectController::__invoke
 * @see vendor/laravel/framework/src/Illuminate/Routing/RedirectController.php:19
 * @route '/settings'
 */
        RedirectControllerForm.put = (options?: RouteQueryOptions): RouteFormDefinition&lt;'post'&gt; =&gt; ({
            action: RedirectController.url({
                        [options?.mergeQuery ? 'mergeQuery' : 'query']: {
                            _method: 'PUT',
                            ...(options?.query ?? options?.mergeQuery ?? {}),
                        }
                    }),
            method: 'post',
        })
            /**
* @see \Illuminate\Routing\RedirectController::__invoke
 * @see vendor/laravel/framework/src/Illuminate/Routing/RedirectController.php:19
 * @route '/settings'
 */
        RedirectControllerForm.patch = (options?: RouteQueryOptions): RouteFormDefinition&lt;'post'&gt; =&gt; ({
            action: RedirectController.url({
                        [options?.mergeQuery ? 'mergeQuery' : 'query']: {
                            _method: 'PATCH',
                            ...(options?.query ?? options?.mergeQuery ?? {}),
                        }
                    }),
            method: 'post',
        })
            /**
* @see \Illuminate\Routing\RedirectController::__invoke
 * @see vendor/laravel/framework/src/Illuminate/Routing/RedirectController.php:19
 * @route '/settings'
 */
        RedirectControllerForm.delete = (options?: RouteQueryOptions): RouteFormDefinition&lt;'post'&gt; =&gt; ({
            action: RedirectController.url({
                        [options?.mergeQuery ? 'mergeQuery' : 'query']: {
                            _method: 'DELETE',
                            ...(options?.query ?? options?.mergeQuery ?? {}),
                        }
                    }),
            method: 'post',
        })
            /**
* @see \Illuminate\Routing\RedirectController::__invoke
 * @see vendor/laravel/framework/src/Illuminate/Routing/RedirectController.php:19
 * @route '/settings'
 */
        RedirectControllerForm.options = (options?: RouteQueryOptions): RouteFormDefinition&lt;'get'&gt; =&gt; ({
            action: RedirectController.url({
                        [options?.mergeQuery ? 'mergeQuery' : 'query']: {
                            _method: 'OPTIONS',
                            ...(options?.query ?? options?.mergeQuery ?? {}),
                        }
                    }),
            method: 'get',
        })
    
    RedirectController.form = RedirectControllerForm
export default RedirectController</content>
    

  </file>
  <file>
    
  
    <path>resources/js/app.tsx</path>
    
  
    <content>import '../css/app.css';

import { createInertiaApp } from '@inertiajs/react';
import { resolvePageComponent } from 'laravel-vite-plugin/inertia-helpers';
import { createRoot } from 'react-dom/client';
import { initializeTheme } from './hooks/use-appearance';

const appName = import.meta.env.VITE_APP_NAME || 'Laravel';

createInertiaApp({
    title: (title) =&gt; title ? `${title} - ${appName}` : appName,
    resolve: (name) =&gt; resolvePageComponent(`./pages/${name}.tsx`, import.meta.glob('./pages/**/*.tsx')),
    setup({ el, App, props }) {
        const root = createRoot(el);

        root.render(&lt;App {...props} /&gt;);
    },
    progress: {
        color: '#4B5563',
    },
});

// This will set light / dark mode on load...
initializeTheme();</content>
    

  </file>
  <file>
    
  
    <path>resources/js/components/app-content.tsx</path>
    
  
    <content>import { SidebarInset } from '@/components/ui/sidebar';
import * as React from 'react';

interface AppContentProps extends React.ComponentProps&lt;'main'&gt; {
    variant?: 'header' | 'sidebar';
}

export function AppContent({ variant = 'header', children, ...props }: AppContentProps) {
    if (variant === 'sidebar') {
        return &lt;SidebarInset {...props}&gt;{children}&lt;/SidebarInset&gt;;
    }

    return (
        &lt;main className="mx-auto flex h-full w-full max-w-7xl flex-1 flex-col gap-4 rounded-xl" {...props}&gt;
            {children}
        &lt;/main&gt;
    );
}</content>
    

  </file>
  <file>
    
  
    <path>resources/js/components/app-header.tsx</path>
    
  
    <content>import { Breadcrumbs } from '@/components/breadcrumbs';
import { Icon } from '@/components/icon';
import { Avatar, AvatarFallback, AvatarImage } from '@/components/ui/avatar';
import { Button } from '@/components/ui/button';
import { DropdownMenu, DropdownMenuContent, DropdownMenuTrigger } from '@/components/ui/dropdown-menu';
import { NavigationMenu, NavigationMenuItem, NavigationMenuList, navigationMenuTriggerStyle } from '@/components/ui/navigation-menu';
import { Sheet, SheetContent, SheetHeader, SheetTitle, SheetTrigger } from '@/components/ui/sheet';
import { Tooltip, TooltipContent, TooltipProvider, TooltipTrigger } from '@/components/ui/tooltip';
import { UserMenuContent } from '@/components/user-menu-content';
import { useInitials } from '@/hooks/use-initials';
import { cn } from '@/lib/utils';
import { dashboard } from '@/routes';
import { type BreadcrumbItem, type NavItem, type SharedData } from '@/types';
import { Link, usePage } from '@inertiajs/react';
import { BookOpen, Folder, LayoutGrid, Menu, Search } from 'lucide-react';
import AppLogo from './app-logo';
import AppLogoIcon from './app-logo-icon';

const mainNavItems: NavItem[] = [
    {
        title: 'Dashboard',
        href: dashboard(),
        icon: LayoutGrid,
    },
];

const rightNavItems: NavItem[] = [
    {
        title: 'Repository',
        href: 'https://github.com/laravel/react-starter-kit',
        icon: Folder,
    },
    {
        title: 'Documentation',
        href: 'https://laravel.com/docs/starter-kits#react',
        icon: BookOpen,
    },
];

const activeItemStyles = 'text-neutral-900 dark:bg-neutral-800 dark:text-neutral-100';

interface AppHeaderProps {
    breadcrumbs?: BreadcrumbItem[];
}

export function AppHeader({ breadcrumbs = [] }: AppHeaderProps) {
    const page = usePage&lt;SharedData&gt;();
    const { auth } = page.props;
    const getInitials = useInitials();
    return (
        &lt;&gt;
            &lt;div className="border-b border-sidebar-border/80"&gt;
                &lt;div className="mx-auto flex h-16 items-center px-4 md:max-w-7xl"&gt;
                    {/* Mobile Menu */}
                    &lt;div className="lg:hidden"&gt;
                        &lt;Sheet&gt;
                            &lt;SheetTrigger asChild&gt;
                                &lt;Button variant="ghost" size="icon" className="mr-2 h-[34px] w-[34px]"&gt;
                                    &lt;Menu className="h-5 w-5" /&gt;
                                &lt;/Button&gt;
                            &lt;/SheetTrigger&gt;
                            &lt;SheetContent side="left" className="flex h-full w-64 flex-col items-stretch justify-between bg-sidebar"&gt;
                                &lt;SheetTitle className="sr-only"&gt;Navigation Menu&lt;/SheetTitle&gt;
                                &lt;SheetHeader className="flex justify-start text-left"&gt;
                                    &lt;AppLogoIcon className="h-6 w-6 fill-current text-black dark:text-white" /&gt;
                                &lt;/SheetHeader&gt;
                                &lt;div className="flex h-full flex-1 flex-col space-y-4 p-4"&gt;
                                    &lt;div className="flex h-full flex-col justify-between text-sm"&gt;
                                        &lt;div className="flex flex-col space-y-4"&gt;
                                            {mainNavItems.map((item) =&gt; (
                                                &lt;Link key={item.title} href={item.href} className="flex items-center space-x-2 font-medium"&gt;
                                                    {item.icon &amp;&amp; &lt;Icon iconNode={item.icon} className="h-5 w-5" /&gt;}
                                                    &lt;span&gt;{item.title}&lt;/span&gt;
                                                &lt;/Link&gt;
                                            ))}
                                        &lt;/div&gt;

                                        &lt;div className="flex flex-col space-y-4"&gt;
                                            {rightNavItems.map((item) =&gt; (
                                                &lt;a
                                                    key={item.title}
                                                    href={typeof item.href === 'string' ? item.href : item.href.url}
                                                    target="_blank"
                                                    rel="noopener noreferrer"
                                                    className="flex items-center space-x-2 font-medium"
                                                &gt;
                                                    {item.icon &amp;&amp; &lt;Icon iconNode={item.icon} className="h-5 w-5" /&gt;}
                                                    &lt;span&gt;{item.title}&lt;/span&gt;
                                                &lt;/a&gt;
                                            ))}
                                        &lt;/div&gt;
                                    &lt;/div&gt;
                                &lt;/div&gt;
                            &lt;/SheetContent&gt;
                        &lt;/Sheet&gt;
                    &lt;/div&gt;

                    &lt;Link href={dashboard()} prefetch className="flex items-center space-x-2"&gt;
                        &lt;AppLogo /&gt;
                    &lt;/Link&gt;

                    {/* Desktop Navigation */}
                    &lt;div className="ml-6 hidden h-full items-center space-x-6 lg:flex"&gt;
                        &lt;NavigationMenu className="flex h-full items-stretch"&gt;
                            &lt;NavigationMenuList className="flex h-full items-stretch space-x-2"&gt;
                                {mainNavItems.map((item, index) =&gt; (
                                    &lt;NavigationMenuItem key={index} className="relative flex h-full items-center"&gt;
                                        &lt;Link
                                            href={item.href}
                                            className={cn(
                                                navigationMenuTriggerStyle(),
                                                page.url === (typeof item.href === 'string' ? item.href : item.href.url) &amp;&amp; activeItemStyles,
                                                'h-9 cursor-pointer px-3',
                                            )}
                                        &gt;
                                            {item.icon &amp;&amp; &lt;Icon iconNode={item.icon} className="mr-2 h-4 w-4" /&gt;}
                                            {item.title}
                                        &lt;/Link&gt;
                                        {page.url === item.href &amp;&amp; (
                                            &lt;div className="absolute bottom-0 left-0 h-0.5 w-full translate-y-px bg-black dark:bg-white"&gt;&lt;/div&gt;
                                        )}
                                    &lt;/NavigationMenuItem&gt;
                                ))}
                            &lt;/NavigationMenuList&gt;
                        &lt;/NavigationMenu&gt;
                    &lt;/div&gt;

                    &lt;div className="ml-auto flex items-center space-x-2"&gt;
                        &lt;div className="relative flex items-center space-x-1"&gt;
                            &lt;Button variant="ghost" size="icon" className="group h-9 w-9 cursor-pointer"&gt;
                                &lt;Search className="!size-5 opacity-80 group-hover:opacity-100" /&gt;
                            &lt;/Button&gt;
                            &lt;div className="hidden lg:flex"&gt;
                                {rightNavItems.map((item) =&gt; (
                                    &lt;TooltipProvider key={item.title} delayDuration={0}&gt;
                                        &lt;Tooltip&gt;
                                            &lt;TooltipTrigger&gt;
                                                &lt;a
                                                    href={typeof item.href === 'string' ? item.href : item.href.url}
                                                    target="_blank"
                                                    rel="noopener noreferrer"
                                                    className="group ml-1 inline-flex h-9 w-9 items-center justify-center rounded-md bg-transparent p-0 text-sm font-medium text-accent-foreground ring-offset-background transition-colors hover:bg-accent hover:text-accent-foreground focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 focus-visible:outline-none disabled:pointer-events-none disabled:opacity-50"
                                                &gt;
                                                    &lt;span className="sr-only"&gt;{item.title}&lt;/span&gt;
                                                    {item.icon &amp;&amp; &lt;Icon iconNode={item.icon} className="size-5 opacity-80 group-hover:opacity-100" /&gt;}
                                                &lt;/a&gt;
                                            &lt;/TooltipTrigger&gt;
                                            &lt;TooltipContent&gt;
                                                &lt;p&gt;{item.title}&lt;/p&gt;
                                            &lt;/TooltipContent&gt;
                                        &lt;/Tooltip&gt;
                                    &lt;/TooltipProvider&gt;
                                ))}
                            &lt;/div&gt;
                        &lt;/div&gt;
                        &lt;DropdownMenu&gt;
                            &lt;DropdownMenuTrigger asChild&gt;
                                &lt;Button variant="ghost" className="size-10 rounded-full p-1"&gt;
                                    &lt;Avatar className="size-8 overflow-hidden rounded-full"&gt;
                                        &lt;AvatarImage src={auth.user.avatar} alt={auth.user.name} /&gt;
                                        &lt;AvatarFallback className="rounded-lg bg-neutral-200 text-black dark:bg-neutral-700 dark:text-white"&gt;
                                            {getInitials(auth.user.name)}
                                        &lt;/AvatarFallback&gt;
                                    &lt;/Avatar&gt;
                                &lt;/Button&gt;
                            &lt;/DropdownMenuTrigger&gt;
                            &lt;DropdownMenuContent className="w-56" align="end"&gt;
                                &lt;UserMenuContent user={auth.user} /&gt;
                            &lt;/DropdownMenuContent&gt;
                        &lt;/DropdownMenu&gt;
                    &lt;/div&gt;
                &lt;/div&gt;
            &lt;/div&gt;
            {breadcrumbs.length &gt; 1 &amp;&amp; (
                &lt;div className="flex w-full border-b border-sidebar-border/70"&gt;
                    &lt;div className="mx-auto flex h-12 w-full items-center justify-start px-4 text-neutral-500 md:max-w-7xl"&gt;
                        &lt;Breadcrumbs breadcrumbs={breadcrumbs} /&gt;
                    &lt;/div&gt;
                &lt;/div&gt;
            )}
        &lt;/&gt;
    );
}</content>
    

  </file>
  <file>
    
  
    <path>resources/js/components/app-logo-icon.tsx</path>
    
  
    <content>import { SVGAttributes } from 'react';

export default function AppLogoIcon(props: SVGAttributes&lt;SVGElement&gt;) {
    return (
        &lt;svg {...props} viewBox="0 0 40 42" xmlns="http://www.w3.org/2000/svg"&gt;
            &lt;path
                fillRule="evenodd"
                clipRule="evenodd"
                d="M17.2 5.63325L8.6 0.855469L0 5.63325V32.1434L16.2 41.1434L32.4 32.1434V23.699L40 19.4767V9.85547L31.4 5.07769L22.8 9.85547V18.2999L17.2 21.411V5.63325ZM38 18.2999L32.4 21.411V15.2545L38 12.1434V18.2999ZM36.9409 10.4439L31.4 13.5221L25.8591 10.4439L31.4 7.36561L36.9409 10.4439ZM24.8 18.2999V12.1434L30.4 15.2545V21.411L24.8 18.2999ZM23.8 20.0323L29.3409 23.1105L16.2 30.411L10.6591 27.3328L23.8 20.0323ZM7.6 27.9212L15.2 32.1434V38.2999L2 30.9666V7.92116L7.6 11.0323V27.9212ZM8.6 9.29991L3.05913 6.22165L8.6 3.14339L14.1409 6.22165L8.6 9.29991ZM30.4 24.8101L17.2 32.1434V38.2999L30.4 30.9666V24.8101ZM9.6 11.0323L15.2 7.92117V22.5221L9.6 25.6333V11.0323Z"
            /&gt;
        &lt;/svg&gt;
    );
}</content>
    

  </file>
  <file>
    
  
    <path>resources/js/components/app-logo.tsx</path>
    
  
    <content>import AppLogoIcon from './app-logo-icon';

export default function AppLogo() {
    return (
        &lt;&gt;
            &lt;div className="flex aspect-square size-8 items-center justify-center rounded-md bg-sidebar-primary text-sidebar-primary-foreground"&gt;
                &lt;AppLogoIcon className="size-5 fill-current text-white dark:text-black" /&gt;
            &lt;/div&gt;
            &lt;div className="ml-1 grid flex-1 text-left text-sm"&gt;
                &lt;span className="mb-0.5 truncate leading-tight font-semibold"&gt;Laravel Starter Kit&lt;/span&gt;
            &lt;/div&gt;
        &lt;/&gt;
    );
}</content>
    

  </file>
  <file>
    
  
    <path>resources/js/components/app-shell.tsx</path>
    
  
    <content>import { SidebarProvider } from '@/components/ui/sidebar';
import { SharedData } from '@/types';
import { usePage } from '@inertiajs/react';

interface AppShellProps {
    children: React.ReactNode;
    variant?: 'header' | 'sidebar';
}

export function AppShell({ children, variant = 'header' }: AppShellProps) {
    const isOpen = usePage&lt;SharedData&gt;().props.sidebarOpen;

    if (variant === 'header') {
        return &lt;div className="flex min-h-screen w-full flex-col"&gt;{children}&lt;/div&gt;;
    }

    return &lt;SidebarProvider defaultOpen={isOpen}&gt;{children}&lt;/SidebarProvider&gt;;
}</content>
    

  </file>
  <file>
    
  
    <path>resources/js/components/app-sidebar-header.tsx</path>
    
  
    <content>import { Breadcrumbs } from '@/components/breadcrumbs';
import { SidebarTrigger } from '@/components/ui/sidebar';
import { type BreadcrumbItem as BreadcrumbItemType } from '@/types';

export function AppSidebarHeader({ breadcrumbs = [] }: { breadcrumbs?: BreadcrumbItemType[] }) {
    return (
        &lt;header className="flex h-16 shrink-0 items-center gap-2 border-b border-sidebar-border/50 px-6 transition-[width,height] ease-linear group-has-data-[collapsible=icon]/sidebar-wrapper:h-12 md:px-4"&gt;
            &lt;div className="flex items-center gap-2"&gt;
                &lt;SidebarTrigger className="-ml-1" /&gt;
                &lt;Breadcrumbs breadcrumbs={breadcrumbs} /&gt;
            &lt;/div&gt;
        &lt;/header&gt;
    );
}</content>
    

  </file>
  <file>
    
  
    <path>resources/js/components/app-sidebar.tsx</path>
    
  
    <content>import { NavFooter } from '@/components/nav-footer';
import { NavMain } from '@/components/nav-main';
import { NavUser } from '@/components/nav-user';
import { Sidebar, SidebarContent, SidebarFooter, SidebarHeader, SidebarMenu, SidebarMenuButton, SidebarMenuItem } from '@/components/ui/sidebar';
import { dashboard } from '@/routes';
import { type NavItem } from '@/types';
import { Link } from '@inertiajs/react';
import { BookOpen, Folder, LayoutGrid } from 'lucide-react';
import AppLogo from './app-logo';

const mainNavItems: NavItem[] = [
    {
        title: 'Dashboard',
        href: dashboard(),
        icon: LayoutGrid,
    },
];

const footerNavItems: NavItem[] = [
    {
        title: 'Repository',
        href: 'https://github.com/laravel/react-starter-kit',
        icon: Folder,
    },
    {
        title: 'Documentation',
        href: 'https://laravel.com/docs/starter-kits#react',
        icon: BookOpen,
    },
];

export function AppSidebar() {
    return (
        &lt;Sidebar collapsible="icon" variant="inset"&gt;
            &lt;SidebarHeader&gt;
                &lt;SidebarMenu&gt;
                    &lt;SidebarMenuItem&gt;
                        &lt;SidebarMenuButton size="lg" asChild&gt;
                            &lt;Link href={dashboard()} prefetch&gt;
                                &lt;AppLogo /&gt;
                            &lt;/Link&gt;
                        &lt;/SidebarMenuButton&gt;
                    &lt;/SidebarMenuItem&gt;
                &lt;/SidebarMenu&gt;
            &lt;/SidebarHeader&gt;

            &lt;SidebarContent&gt;
                &lt;NavMain items={mainNavItems} /&gt;
            &lt;/SidebarContent&gt;

            &lt;SidebarFooter&gt;
                &lt;NavFooter items={footerNavItems} className="mt-auto" /&gt;
                &lt;NavUser /&gt;
            &lt;/SidebarFooter&gt;
        &lt;/Sidebar&gt;
    );
}</content>
    

  </file>
  <file>
    
  
    <path>resources/js/components/appearance-dropdown.tsx</path>
    
  
    <content>import { Button } from '@/components/ui/button';
import { DropdownMenu, DropdownMenuContent, DropdownMenuItem, DropdownMenuTrigger } from '@/components/ui/dropdown-menu';
import { useAppearance } from '@/hooks/use-appearance';
import { Monitor, Moon, Sun } from 'lucide-react';
import { HTMLAttributes } from 'react';

export default function AppearanceToggleDropdown({ className = '', ...props }: HTMLAttributes&lt;HTMLDivElement&gt;) {
    const { appearance, updateAppearance } = useAppearance();

    const getCurrentIcon = () =&gt; {
        switch (appearance) {
            case 'dark':
                return &lt;Moon className="h-5 w-5" /&gt;;
            case 'light':
                return &lt;Sun className="h-5 w-5" /&gt;;
            default:
                return &lt;Monitor className="h-5 w-5" /&gt;;
        }
    };

    return (
        &lt;div className={className} {...props}&gt;
            &lt;DropdownMenu&gt;
                &lt;DropdownMenuTrigger asChild&gt;
                    &lt;Button variant="ghost" size="icon" className="h-9 w-9 rounded-md"&gt;
                        {getCurrentIcon()}
                        &lt;span className="sr-only"&gt;Toggle theme&lt;/span&gt;
                    &lt;/Button&gt;
                &lt;/DropdownMenuTrigger&gt;
                &lt;DropdownMenuContent align="end"&gt;
                    &lt;DropdownMenuItem onClick={() =&gt; updateAppearance('light')}&gt;
                        &lt;span className="flex items-center gap-2"&gt;
                            &lt;Sun className="h-5 w-5" /&gt;
                            Light
                        &lt;/span&gt;
                    &lt;/DropdownMenuItem&gt;
                    &lt;DropdownMenuItem onClick={() =&gt; updateAppearance('dark')}&gt;
                        &lt;span className="flex items-center gap-2"&gt;
                            &lt;Moon className="h-5 w-5" /&gt;
                            Dark
                        &lt;/span&gt;
                    &lt;/DropdownMenuItem&gt;
                    &lt;DropdownMenuItem onClick={() =&gt; updateAppearance('system')}&gt;
                        &lt;span className="flex items-center gap-2"&gt;
                            &lt;Monitor className="h-5 w-5" /&gt;
                            System
                        &lt;/span&gt;
                    &lt;/DropdownMenuItem&gt;
                &lt;/DropdownMenuContent&gt;
            &lt;/DropdownMenu&gt;
        &lt;/div&gt;
    );
}</content>
    

  </file>
  <file>
    
  
    <path>resources/js/components/appearance-tabs.tsx</path>
    
  
    <content>import { Appearance, useAppearance } from '@/hooks/use-appearance';
import { cn } from '@/lib/utils';
import { LucideIcon, Monitor, Moon, Sun } from 'lucide-react';
import { HTMLAttributes } from 'react';

export default function AppearanceToggleTab({ className = '', ...props }: HTMLAttributes&lt;HTMLDivElement&gt;) {
    const { appearance, updateAppearance } = useAppearance();

    const tabs: { value: Appearance; icon: LucideIcon; label: string }[] = [
        { value: 'light', icon: Sun, label: 'Light' },
        { value: 'dark', icon: Moon, label: 'Dark' },
        { value: 'system', icon: Monitor, label: 'System' },
    ];

    return (
        &lt;div className={cn('inline-flex gap-1 rounded-lg bg-neutral-100 p-1 dark:bg-neutral-800', className)} {...props}&gt;
            {tabs.map(({ value, icon: Icon, label }) =&gt; (
                &lt;button
                    key={value}
                    onClick={() =&gt; updateAppearance(value)}
                    className={cn(
                        'flex items-center rounded-md px-3.5 py-1.5 transition-colors',
                        appearance === value
                            ? 'bg-white shadow-xs dark:bg-neutral-700 dark:text-neutral-100'
                            : 'text-neutral-500 hover:bg-neutral-200/60 hover:text-black dark:text-neutral-400 dark:hover:bg-neutral-700/60',
                    )}
                &gt;
                    &lt;Icon className="-ml-1 h-4 w-4" /&gt;
                    &lt;span className="ml-1.5 text-sm"&gt;{label}&lt;/span&gt;
                &lt;/button&gt;
            ))}
        &lt;/div&gt;
    );
}</content>
    

  </file>
  <file>
    
  
    <path>resources/js/components/breadcrumbs.tsx</path>
    
  
    <content>import { Breadcrumb, BreadcrumbItem, BreadcrumbLink, BreadcrumbList, BreadcrumbPage, BreadcrumbSeparator } from '@/components/ui/breadcrumb';
import { type BreadcrumbItem as BreadcrumbItemType } from '@/types';
import { Link } from '@inertiajs/react';
import { Fragment } from 'react';

export function Breadcrumbs({ breadcrumbs }: { breadcrumbs: BreadcrumbItemType[] }) {
    return (
        &lt;&gt;
            {breadcrumbs.length &gt; 0 &amp;&amp; (
                &lt;Breadcrumb&gt;
                    &lt;BreadcrumbList&gt;
                        {breadcrumbs.map((item, index) =&gt; {
                            const isLast = index === breadcrumbs.length - 1;
                            return (
                                &lt;Fragment key={index}&gt;
                                    &lt;BreadcrumbItem&gt;
                                        {isLast ? (
                                            &lt;BreadcrumbPage&gt;{item.title}&lt;/BreadcrumbPage&gt;
                                        ) : (
                                            &lt;BreadcrumbLink asChild&gt;
                                                &lt;Link href={item.href}&gt;{item.title}&lt;/Link&gt;
                                            &lt;/BreadcrumbLink&gt;
                                        )}
                                    &lt;/BreadcrumbItem&gt;
                                    {!isLast &amp;&amp; &lt;BreadcrumbSeparator /&gt;}
                                &lt;/Fragment&gt;
                            );
                        })}
                    &lt;/BreadcrumbList&gt;
                &lt;/Breadcrumb&gt;
            )}
        &lt;/&gt;
    );
}</content>
    

  </file>
  <file>
    
  
    <path>resources/js/components/heading-small.tsx</path>
    
  
    <content>export default function HeadingSmall({ title, description }: { title: string; description?: string }) {
    return (
        &lt;header&gt;
            &lt;h3 className="mb-0.5 text-base font-medium"&gt;{title}&lt;/h3&gt;
            {description &amp;&amp; &lt;p className="text-sm text-muted-foreground"&gt;{description}&lt;/p&gt;}
        &lt;/header&gt;
    );
}</content>
    

  </file>
  <file>
    
  
    <path>resources/js/components/heading.tsx</path>
    
  
    <content>export default function Heading({ title, description }: { title: string; description?: string }) {
    return (
        &lt;div className="mb-8 space-y-0.5"&gt;
            &lt;h2 className="text-xl font-semibold tracking-tight"&gt;{title}&lt;/h2&gt;
            {description &amp;&amp; &lt;p className="text-sm text-muted-foreground"&gt;{description}&lt;/p&gt;}
        &lt;/div&gt;
    );
}</content>
    

  </file>
  <file>
    
  
    <path>resources/js/components/icon.tsx</path>
    
  
    <content>import { cn } from '@/lib/utils';
import { type LucideProps } from 'lucide-react';
import { type ComponentType } from 'react';

interface IconProps extends Omit&lt;LucideProps, 'ref'&gt; {
    iconNode: ComponentType&lt;LucideProps&gt;;
}

export function Icon({ iconNode: IconComponent, className, ...props }: IconProps) {
    return &lt;IconComponent className={cn('h-4 w-4', className)} {...props} /&gt;;
}</content>
    

  </file>
  <file>
    
  
    <path>resources/js/components/input-error.tsx</path>
    
  
    <content>import { cn } from '@/lib/utils';
import { type HTMLAttributes } from 'react';

export default function InputError({ message, className = '', ...props }: HTMLAttributes&lt;HTMLParagraphElement&gt; &amp; { message?: string }) {
    return message ? (
        &lt;p {...props} className={cn('text-sm text-red-600 dark:text-red-400', className)}&gt;
            {message}
        &lt;/p&gt;
    ) : null;
}</content>
    

  </file>
  <file>
    
  
    <path>resources/js/components/nav-footer.tsx</path>
    
  
    <content>import { Icon } from '@/components/icon';
import { SidebarGroup, SidebarGroupContent, SidebarMenu, SidebarMenuButton, SidebarMenuItem } from '@/components/ui/sidebar';
import { type NavItem } from '@/types';
import { type ComponentPropsWithoutRef } from 'react';

export function NavFooter({
    items,
    className,
    ...props
}: ComponentPropsWithoutRef&lt;typeof SidebarGroup&gt; &amp; {
    items: NavItem[];
}) {
    return (
        &lt;SidebarGroup {...props} className={`group-data-[collapsible=icon]:p-0 ${className || ''}`}&gt;
            &lt;SidebarGroupContent&gt;
                &lt;SidebarMenu&gt;
                    {items.map((item) =&gt; (
                        &lt;SidebarMenuItem key={item.title}&gt;
                            &lt;SidebarMenuButton
                                asChild
                                className="text-neutral-600 hover:text-neutral-800 dark:text-neutral-300 dark:hover:text-neutral-100"
                            &gt;
                                &lt;a href={typeof item.href === 'string' ? item.href : item.href.url} target="_blank" rel="noopener noreferrer"&gt;
                                    {item.icon &amp;&amp; &lt;Icon iconNode={item.icon} className="h-5 w-5" /&gt;}
                                    &lt;span&gt;{item.title}&lt;/span&gt;
                                &lt;/a&gt;
                            &lt;/SidebarMenuButton&gt;
                        &lt;/SidebarMenuItem&gt;
                    ))}
                &lt;/SidebarMenu&gt;
            &lt;/SidebarGroupContent&gt;
        &lt;/SidebarGroup&gt;
    );
}</content>
    

  </file>
  <file>
    
  
    <path>resources/js/components/nav-main.tsx</path>
    
  
    <content>import { SidebarGroup, SidebarGroupLabel, SidebarMenu, SidebarMenuButton, SidebarMenuItem } from '@/components/ui/sidebar';
import { type NavItem } from '@/types';
import { Link, usePage } from '@inertiajs/react';

export function NavMain({ items = [] }: { items: NavItem[] }) {
    const page = usePage();
    return (
        &lt;SidebarGroup className="px-2 py-0"&gt;
            &lt;SidebarGroupLabel&gt;Platform&lt;/SidebarGroupLabel&gt;
            &lt;SidebarMenu&gt;
                {items.map((item) =&gt; (
                    &lt;SidebarMenuItem key={item.title}&gt;
                        &lt;SidebarMenuButton
                            asChild
                            isActive={page.url.startsWith(typeof item.href === 'string' ? item.href : item.href.url)}
                            tooltip={{ children: item.title }}
                        &gt;
                            &lt;Link href={item.href} prefetch&gt;
                                {item.icon &amp;&amp; &lt;item.icon /&gt;}
                                &lt;span&gt;{item.title}&lt;/span&gt;
                            &lt;/Link&gt;
                        &lt;/SidebarMenuButton&gt;
                    &lt;/SidebarMenuItem&gt;
                ))}
            &lt;/SidebarMenu&gt;
        &lt;/SidebarGroup&gt;
    );
}</content>
    

  </file>
  <file>
    
  
    <path>resources/js/components/nav-user.tsx</path>
    
  
    <content>import { DropdownMenu, DropdownMenuContent, DropdownMenuTrigger } from '@/components/ui/dropdown-menu';
import { SidebarMenu, SidebarMenuButton, SidebarMenuItem, useSidebar } from '@/components/ui/sidebar';
import { UserInfo } from '@/components/user-info';
import { UserMenuContent } from '@/components/user-menu-content';
import { useIsMobile } from '@/hooks/use-mobile';
import { type SharedData } from '@/types';
import { usePage } from '@inertiajs/react';
import { ChevronsUpDown } from 'lucide-react';

export function NavUser() {
    const { auth } = usePage&lt;SharedData&gt;().props;
    const { state } = useSidebar();
    const isMobile = useIsMobile();

    return (
        &lt;SidebarMenu&gt;
            &lt;SidebarMenuItem&gt;
                &lt;DropdownMenu&gt;
                    &lt;DropdownMenuTrigger asChild&gt;
                        &lt;SidebarMenuButton size="lg" className="group text-sidebar-accent-foreground data-[state=open]:bg-sidebar-accent"&gt;
                            &lt;UserInfo user={auth.user} /&gt;
                            &lt;ChevronsUpDown className="ml-auto size-4" /&gt;
                        &lt;/SidebarMenuButton&gt;
                    &lt;/DropdownMenuTrigger&gt;
                    &lt;DropdownMenuContent
                        className="w-(--radix-dropdown-menu-trigger-width) min-w-56 rounded-lg"
                        align="end"
                        side={isMobile ? 'bottom' : state === 'collapsed' ? 'left' : 'bottom'}
                    &gt;
                        &lt;UserMenuContent user={auth.user} /&gt;
                    &lt;/DropdownMenuContent&gt;
                &lt;/DropdownMenu&gt;
            &lt;/SidebarMenuItem&gt;
        &lt;/SidebarMenu&gt;
    );
}</content>
    

  </file>
  <file>
    
  
    <path>resources/js/components/text-link.tsx</path>
    
  
    <content>import { cn } from '@/lib/utils';
import { Link } from '@inertiajs/react';
import { ComponentProps } from 'react';

type LinkProps = ComponentProps&lt;typeof Link&gt;;

export default function TextLink({ className = '', children, ...props }: LinkProps) {
    return (
        &lt;Link
            className={cn(
                'text-foreground underline decoration-neutral-300 underline-offset-4 transition-colors duration-300 ease-out hover:decoration-current! dark:decoration-neutral-500',
                className,
            )}
            {...props}
        &gt;
            {children}
        &lt;/Link&gt;
    );
}</content>
    

  </file>
  <file>
    
  
    <path>resources/js/components/ui/alert.tsx</path>
    
  
    <content>import * as React from "react"
import { cva, type VariantProps } from "class-variance-authority"

import { cn } from "@/lib/utils"

const alertVariants = cva(
  "relative w-full rounded-lg border px-4 py-3 text-sm grid has-[&gt;svg]:grid-cols-[calc(var(--spacing)*4)_1fr] grid-cols-[0_1fr] has-[&gt;svg]:gap-x-3 gap-y-0.5 items-start [&amp;&gt;svg]:size-4 [&amp;&gt;svg]:translate-y-0.5 [&amp;&gt;svg]:text-current",
  {
    variants: {
      variant: {
        default: "bg-background text-foreground",
        destructive:
          "text-destructive-foreground [&amp;&gt;svg]:text-current *:data-[slot=alert-description]:text-destructive-foreground/80",
      },
    },
    defaultVariants: {
      variant: "default",
    },
  }
)

function Alert({
  className,
  variant,
  ...props
}: React.ComponentProps&lt;"div"&gt; &amp; VariantProps&lt;typeof alertVariants&gt;) {
  return (
    &lt;div
      data-slot="alert"
      role="alert"
      className={cn(alertVariants({ variant }), className)}
      {...props}
    /&gt;
  )
}

function AlertTitle({ className, ...props }: React.ComponentProps&lt;"div"&gt;) {
  return (
    &lt;div
      data-slot="alert-title"
      className={cn(
        "col-start-2 line-clamp-1 min-h-4 font-medium tracking-tight",
        className
      )}
      {...props}
    /&gt;
  )
}

function AlertDescription({
  className,
  ...props
}: React.ComponentProps&lt;"div"&gt;) {
  return (
    &lt;div
      data-slot="alert-description"
      className={cn(
        "text-muted-foreground col-start-2 grid justify-items-start gap-1 text-sm [&amp;_p]:leading-relaxed",
        className
      )}
      {...props}
    /&gt;
  )
}

export { Alert, AlertTitle, AlertDescription }</content>
    

  </file>
  <file>
    
  
    <path>resources/js/components/ui/avatar.tsx</path>
    
  
    <content>import * as React from "react"
import * as AvatarPrimitive from "@radix-ui/react-avatar"

import { cn } from "@/lib/utils"

function Avatar({
  className,
  ...props
}: React.ComponentProps&lt;typeof AvatarPrimitive.Root&gt;) {
  return (
    &lt;AvatarPrimitive.Root
      data-slot="avatar"
      className={cn(
        "relative flex size-8 shrink-0 overflow-hidden rounded-full",
        className
      )}
      {...props}
    /&gt;
  )
}

function AvatarImage({
  className,
  ...props
}: React.ComponentProps&lt;typeof AvatarPrimitive.Image&gt;) {
  return (
    &lt;AvatarPrimitive.Image
      data-slot="avatar-image"
      className={cn("aspect-square size-full", className)}
      {...props}
    /&gt;
  )
}

function AvatarFallback({
  className,
  ...props
}: React.ComponentProps&lt;typeof AvatarPrimitive.Fallback&gt;) {
  return (
    &lt;AvatarPrimitive.Fallback
      data-slot="avatar-fallback"
      className={cn(
        "bg-muted flex size-full items-center justify-center rounded-full",
        className
      )}
      {...props}
    /&gt;
  )
}

export { Avatar, AvatarImage, AvatarFallback }</content>
    

  </file>
  <file>
    
  
    <path>resources/js/components/ui/badge.tsx</path>
    
  
    <content>import * as React from "react"
import { Slot } from "@radix-ui/react-slot"
import { cva, type VariantProps } from "class-variance-authority"

import { cn } from "@/lib/utils"

const badgeVariants = cva(
  "inline-flex items-center justify-center rounded-md border px-2 py-0.5 text-xs font-medium w-fit whitespace-nowrap shrink-0 [&amp;&gt;svg]:size-3 gap-1 [&amp;&gt;svg]:pointer-events-none focus-visible:border-ring focus-visible:ring-ring/50 focus-visible:ring-[3px] aria-invalid:ring-destructive/20 dark:aria-invalid:ring-destructive/40 aria-invalid:border-destructive transition-[color,box-shadow] overflow-auto",
  {
    variants: {
      variant: {
        default:
          "border-transparent bg-primary text-primary-foreground [a&amp;]:hover:bg-primary/90",
        secondary:
          "border-transparent bg-secondary text-secondary-foreground [a&amp;]:hover:bg-secondary/90",
        destructive:
          "border-transparent bg-destructive text-white [a&amp;]:hover:bg-destructive/90 focus-visible:ring-destructive/20 dark:focus-visible:ring-destructive/40",
        outline:
          "text-foreground [a&amp;]:hover:bg-accent [a&amp;]:hover:text-accent-foreground",
      },
    },
    defaultVariants: {
      variant: "default",
    },
  }
)

function Badge({
  className,
  variant,
  asChild = false,
  ...props
}: React.ComponentProps&lt;"span"&gt; &amp;
  VariantProps&lt;typeof badgeVariants&gt; &amp; { asChild?: boolean }) {
  const Comp = asChild ? Slot : "span"

  return (
    &lt;Comp
      data-slot="badge"
      className={cn(badgeVariants({ variant }), className)}
      {...props}
    /&gt;
  )
}

export { Badge, badgeVariants }</content>
    

  </file>
  <file>
    
  
    <path>resources/js/components/ui/breadcrumb.tsx</path>
    
  
    <content>import * as React from "react"
import { Slot } from "@radix-ui/react-slot"
import { ChevronRight, MoreHorizontal } from "lucide-react"

import { cn } from "@/lib/utils"

function Breadcrumb({ ...props }: React.ComponentProps&lt;"nav"&gt;) {
  return &lt;nav aria-label="breadcrumb" data-slot="breadcrumb" {...props} /&gt;
}

function BreadcrumbList({ className, ...props }: React.ComponentProps&lt;"ol"&gt;) {
  return (
    &lt;ol
      data-slot="breadcrumb-list"
      className={cn(
        "text-muted-foreground flex flex-wrap items-center gap-1.5 text-sm break-words sm:gap-2.5",
        className
      )}
      {...props}
    /&gt;
  )
}

function BreadcrumbItem({ className, ...props }: React.ComponentProps&lt;"li"&gt;) {
  return (
    &lt;li
      data-slot="breadcrumb-item"
      className={cn("inline-flex items-center gap-1.5", className)}
      {...props}
    /&gt;
  )
}

function BreadcrumbLink({
  asChild,
  className,
  ...props
}: React.ComponentProps&lt;"a"&gt; &amp; {
  asChild?: boolean
}) {
  const Comp = asChild ? Slot : "a"

  return (
    &lt;Comp
      data-slot="breadcrumb-link"
      className={cn("hover:text-foreground transition-colors", className)}
      {...props}
    /&gt;
  )
}

function BreadcrumbPage({ className, ...props }: React.ComponentProps&lt;"span"&gt;) {
  return (
    &lt;span
      data-slot="breadcrumb-page"
      role="link"
      aria-disabled="true"
      aria-current="page"
      className={cn("text-foreground font-normal", className)}
      {...props}
    /&gt;
  )
}

function BreadcrumbSeparator({
  children,
  className,
  ...props
}: React.ComponentProps&lt;"li"&gt;) {
  return (
    &lt;li
      data-slot="breadcrumb-separator"
      role="presentation"
      aria-hidden="true"
      className={cn("[&amp;&gt;svg]:size-3.5", className)}
      {...props}
    &gt;
      {children ?? &lt;ChevronRight /&gt;}
    &lt;/li&gt;
  )
}

function BreadcrumbEllipsis({
  className,
  ...props
}: React.ComponentProps&lt;"span"&gt;) {
  return (
    &lt;span
      data-slot="breadcrumb-ellipsis"
      role="presentation"
      aria-hidden="true"
      className={cn("flex size-9 items-center justify-center", className)}
      {...props}
    &gt;
      &lt;MoreHorizontal className="size-4" /&gt;
      &lt;span className="sr-only"&gt;More&lt;/span&gt;
    &lt;/span&gt;
  )
}

export {
  Breadcrumb,
  BreadcrumbList,
  BreadcrumbItem,
  BreadcrumbLink,
  BreadcrumbPage,
  BreadcrumbSeparator,
  BreadcrumbEllipsis,
}</content>
    

  </file>
  <file>
    
  
    <path>resources/js/components/ui/button.tsx</path>
    
  
    <content>import * as React from "react"
import { Slot } from "@radix-ui/react-slot"
import { cva, type VariantProps } from "class-variance-authority"

import { cn } from "@/lib/utils"

const buttonVariants = cva(
  "inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-md text-sm font-medium transition-[color,box-shadow] disabled:pointer-events-none disabled:opacity-50 [&amp;_svg]:pointer-events-none [&amp;_svg:not([class*='size-'])]:size-4 [&amp;_svg]:shrink-0 outline-none focus-visible:border-ring focus-visible:ring-ring/50 focus-visible:ring-[3px] aria-invalid:ring-destructive/20 dark:aria-invalid:ring-destructive/40 aria-invalid:border-destructive",
  {
    variants: {
      variant: {
        default:
          "bg-primary text-primary-foreground shadow-xs hover:bg-primary/90",
        destructive:
          "bg-destructive text-white shadow-xs hover:bg-destructive/90 focus-visible:ring-destructive/20 dark:focus-visible:ring-destructive/40",
        outline:
          "border border-input bg-background shadow-xs hover:bg-accent hover:text-accent-foreground",
        secondary:
          "bg-secondary text-secondary-foreground shadow-xs hover:bg-secondary/80",
        ghost: "hover:bg-accent hover:text-accent-foreground",
        link: "text-primary underline-offset-4 hover:underline",
      },
      size: {
        default: "h-9 px-4 py-2 has-[&gt;svg]:px-3",
        sm: "h-8 rounded-md px-3 has-[&gt;svg]:px-2.5",
        lg: "h-10 rounded-md px-6 has-[&gt;svg]:px-4",
        icon: "size-9",
      },
    },
    defaultVariants: {
      variant: "default",
      size: "default",
    },
  }
)

function Button({
  className,
  variant,
  size,
  asChild = false,
  ...props
}: React.ComponentProps&lt;"button"&gt; &amp;
  VariantProps&lt;typeof buttonVariants&gt; &amp; {
    asChild?: boolean
  }) {
  const Comp = asChild ? Slot : "button"

  return (
    &lt;Comp
      data-slot="button"
      className={cn(buttonVariants({ variant, size, className }))}
      {...props}
    /&gt;
  )
}

export { Button, buttonVariants }</content>
    

  </file>
  <file>
    
  
    <path>resources/js/components/ui/card.tsx</path>
    
  
    <content>import * as React from "react"

import { cn } from "@/lib/utils"

function Card({ className, ...props }: React.ComponentProps&lt;"div"&gt;) {
  return (
    &lt;div
      data-slot="card"
      className={cn(
        "bg-card text-card-foreground flex flex-col gap-6 rounded-xl border py-6 shadow-sm",
        className
      )}
      {...props}
    /&gt;
  )
}

function CardHeader({ className, ...props }: React.ComponentProps&lt;"div"&gt;) {
  return (
    &lt;div
      data-slot="card-header"
      className={cn("flex flex-col gap-1.5 px-6", className)}
      {...props}
    /&gt;
  )
}

function CardTitle({ className, ...props }: React.ComponentProps&lt;"div"&gt;) {
  return (
    &lt;div
      data-slot="card-title"
      className={cn("leading-none font-semibold", className)}
      {...props}
    /&gt;
  )
}

function CardDescription({ className, ...props }: React.ComponentProps&lt;"div"&gt;) {
  return (
    &lt;div
      data-slot="card-description"
      className={cn("text-muted-foreground text-sm", className)}
      {...props}
    /&gt;
  )
}

function CardContent({ className, ...props }: React.ComponentProps&lt;"div"&gt;) {
  return (
    &lt;div
      data-slot="card-content"
      className={cn("px-6", className)}
      {...props}
    /&gt;
  )
}

function CardFooter({ className, ...props }: React.ComponentProps&lt;"div"&gt;) {
  return (
    &lt;div
      data-slot="card-footer"
      className={cn("flex items-center px-6", className)}
      {...props}
    /&gt;
  )
}

export { Card, CardHeader, CardFooter, CardTitle, CardDescription, CardContent }</content>
    

  </file>
  <file>
    
  
    <path>resources/js/components/ui/checkbox.tsx</path>
    
  
    <content>import * as React from "react"
import * as CheckboxPrimitive from "@radix-ui/react-checkbox"
import { CheckIcon } from "lucide-react"

import { cn } from "@/lib/utils"

function Checkbox({
  className,
  ...props
}: React.ComponentProps&lt;typeof CheckboxPrimitive.Root&gt;) {
  return (
    &lt;CheckboxPrimitive.Root
      data-slot="checkbox"
      className={cn(
        "peer border-input data-[state=checked]:bg-primary data-[state=checked]:text-primary-foreground data-[state=checked]:border-primary focus-visible:border-ring focus-visible:ring-ring/50 aria-invalid:ring-destructive/20 dark:aria-invalid:ring-destructive/40 aria-invalid:border-destructive size-4 shrink-0 rounded-[4px] border shadow-xs transition-shadow outline-none focus-visible:ring-[3px] disabled:cursor-not-allowed disabled:opacity-50",
        className
      )}
      {...props}
    &gt;
      &lt;CheckboxPrimitive.Indicator
        data-slot="checkbox-indicator"
        className="flex items-center justify-center text-current transition-none"
      &gt;
        &lt;CheckIcon className="size-3.5" /&gt;
      &lt;/CheckboxPrimitive.Indicator&gt;
    &lt;/CheckboxPrimitive.Root&gt;
  )
}

export { Checkbox }</content>
    

  </file>
  <file>
    
  
    <path>resources/js/components/ui/collapsible.tsx</path>
    
  
    <content>import * as CollapsiblePrimitive from "@radix-ui/react-collapsible"

function Collapsible({
  ...props
}: React.ComponentProps&lt;typeof CollapsiblePrimitive.Root&gt;) {
  return &lt;CollapsiblePrimitive.Root data-slot="collapsible" {...props} /&gt;
}

function CollapsibleTrigger({
  ...props
}: React.ComponentProps&lt;typeof CollapsiblePrimitive.CollapsibleTrigger&gt;) {
  return (
    &lt;CollapsiblePrimitive.CollapsibleTrigger
      data-slot="collapsible-trigger"
      {...props}
    /&gt;
  )
}

function CollapsibleContent({
  ...props
}: React.ComponentProps&lt;typeof CollapsiblePrimitive.CollapsibleContent&gt;) {
  return (
    &lt;CollapsiblePrimitive.CollapsibleContent
      data-slot="collapsible-content"
      {...props}
    /&gt;
  )
}

export { Collapsible, CollapsibleTrigger, CollapsibleContent }</content>
    

  </file>
  <file>
    
  
    <path>resources/js/components/ui/dialog.tsx</path>
    
  
    <content>import * as React from "react"
import * as DialogPrimitive from "@radix-ui/react-dialog"
import { XIcon } from "lucide-react"

import { cn } from "@/lib/utils"

function Dialog({
  ...props
}: React.ComponentProps&lt;typeof DialogPrimitive.Root&gt;) {
  return &lt;DialogPrimitive.Root data-slot="dialog" {...props} /&gt;
}

function DialogTrigger({
  ...props
}: React.ComponentProps&lt;typeof DialogPrimitive.Trigger&gt;) {
  return &lt;DialogPrimitive.Trigger data-slot="dialog-trigger" {...props} /&gt;
}

function DialogPortal({
  ...props
}: React.ComponentProps&lt;typeof DialogPrimitive.Portal&gt;) {
  return &lt;DialogPrimitive.Portal data-slot="dialog-portal" {...props} /&gt;
}

function DialogClose({
  ...props
}: React.ComponentProps&lt;typeof DialogPrimitive.Close&gt;) {
  return &lt;DialogPrimitive.Close data-slot="dialog-close" {...props} /&gt;
}

function DialogOverlay({
  className,
  ...props
}: React.ComponentProps&lt;typeof DialogPrimitive.Overlay&gt;) {
  return (
    &lt;DialogPrimitive.Overlay
      data-slot="dialog-overlay"
      className={cn(
        "data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 fixed inset-0 z-50 bg-black/80",
        className
      )}
      {...props}
    /&gt;
  )
}

function DialogContent({
  className,
  children,
  ...props
}: React.ComponentProps&lt;typeof DialogPrimitive.Content&gt;) {
  return (
    &lt;DialogPortal data-slot="dialog-portal"&gt;
      &lt;DialogOverlay /&gt;
      &lt;DialogPrimitive.Content
        data-slot="dialog-content"
        className={cn(
          "bg-background data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 fixed top-[50%] left-[50%] z-50 grid w-full max-w-[calc(100%-2rem)] translate-x-[-50%] translate-y-[-50%] gap-4 rounded-lg border p-6 shadow-lg duration-200 sm:max-w-lg",
          className
        )}
        {...props}
      &gt;
        {children}
        &lt;DialogPrimitive.Close className="ring-offset-background focus:ring-ring data-[state=open]:bg-accent data-[state=open]:text-muted-foreground absolute top-4 right-4 rounded-xs opacity-70 transition-opacity hover:opacity-100 focus:ring-2 focus:ring-offset-2 focus:outline-hidden disabled:pointer-events-none [&amp;_svg]:pointer-events-none [&amp;_svg]:shrink-0 [&amp;_svg:not([class*='size-'])]:size-4"&gt;
          &lt;XIcon /&gt;
          &lt;span className="sr-only"&gt;Close&lt;/span&gt;
        &lt;/DialogPrimitive.Close&gt;
      &lt;/DialogPrimitive.Content&gt;
    &lt;/DialogPortal&gt;
  )
}

function DialogHeader({ className, ...props }: React.ComponentProps&lt;"div"&gt;) {
  return (
    &lt;div
      data-slot="dialog-header"
      className={cn("flex flex-col gap-2 text-center sm:text-left", className)}
      {...props}
    /&gt;
  )
}

function DialogFooter({ className, ...props }: React.ComponentProps&lt;"div"&gt;) {
  return (
    &lt;div
      data-slot="dialog-footer"
      className={cn(
        "flex flex-col-reverse gap-2 sm:flex-row sm:justify-end",
        className
      )}
      {...props}
    /&gt;
  )
}

function DialogTitle({
  className,
  ...props
}: React.ComponentProps&lt;typeof DialogPrimitive.Title&gt;) {
  return (
    &lt;DialogPrimitive.Title
      data-slot="dialog-title"
      className={cn("text-lg leading-none font-semibold", className)}
      {...props}
    /&gt;
  )
}

function DialogDescription({
  className,
  ...props
}: React.ComponentProps&lt;typeof DialogPrimitive.Description&gt;) {
  return (
    &lt;DialogPrimitive.Description
      data-slot="dialog-description"
      className={cn("text-muted-foreground text-sm", className)}
      {...props}
    /&gt;
  )
}

export {
  Dialog,
  DialogClose,
  DialogContent,
  DialogDescription,
  DialogFooter,
  DialogHeader,
  DialogOverlay,
  DialogPortal,
  DialogTitle,
  DialogTrigger,
}</content>
    

  </file>
  <file>
    
  
    <path>resources/js/components/ui/dropdown-menu.tsx</path>
    
  
    <content>import * as React from "react"
import * as DropdownMenuPrimitive from "@radix-ui/react-dropdown-menu"
import { CheckIcon, ChevronRightIcon, CircleIcon } from "lucide-react"

import { cn } from "@/lib/utils"

function DropdownMenu({
  ...props
}: React.ComponentProps&lt;typeof DropdownMenuPrimitive.Root&gt;) {
  return &lt;DropdownMenuPrimitive.Root data-slot="dropdown-menu" {...props} /&gt;
}

function DropdownMenuPortal({
  ...props
}: React.ComponentProps&lt;typeof DropdownMenuPrimitive.Portal&gt;) {
  return (
    &lt;DropdownMenuPrimitive.Portal data-slot="dropdown-menu-portal" {...props} /&gt;
  )
}

function DropdownMenuTrigger({
  ...props
}: React.ComponentProps&lt;typeof DropdownMenuPrimitive.Trigger&gt;) {
  return (
    &lt;DropdownMenuPrimitive.Trigger
      data-slot="dropdown-menu-trigger"
      {...props}
    /&gt;
  )
}

function DropdownMenuContent({
  className,
  sideOffset = 4,
  ...props
}: React.ComponentProps&lt;typeof DropdownMenuPrimitive.Content&gt;) {
  return (
    &lt;DropdownMenuPrimitive.Portal&gt;
      &lt;DropdownMenuPrimitive.Content
        data-slot="dropdown-menu-content"
        sideOffset={sideOffset}
        className={cn(
          "bg-popover text-popover-foreground data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 z-50 min-w-[8rem] overflow-hidden rounded-md border p-1 shadow-md",
          className
        )}
        {...props}
      /&gt;
    &lt;/DropdownMenuPrimitive.Portal&gt;
  )
}

function DropdownMenuGroup({
  ...props
}: React.ComponentProps&lt;typeof DropdownMenuPrimitive.Group&gt;) {
  return (
    &lt;DropdownMenuPrimitive.Group data-slot="dropdown-menu-group" {...props} /&gt;
  )
}

function DropdownMenuItem({
  className,
  inset,
  variant = "default",
  ...props
}: React.ComponentProps&lt;typeof DropdownMenuPrimitive.Item&gt; &amp; {
  inset?: boolean
  variant?: "default" | "destructive"
}) {
  return (
    &lt;DropdownMenuPrimitive.Item
      data-slot="dropdown-menu-item"
      data-inset={inset}
      data-variant={variant}
      className={cn(
        "focus:bg-accent focus:text-accent-foreground data-[variant=destructive]:text-destructive-foreground data-[variant=destructive]:focus:bg-destructive/10 dark:data-[variant=destructive]:focus:bg-destructive/40 data-[variant=destructive]:focus:text-destructive-foreground data-[variant=destructive]:*:[svg]:!text-destructive-foreground [&amp;_svg:not([class*='text-'])]:text-muted-foreground relative flex cursor-default items-center gap-2 rounded-sm px-2 py-1.5 text-sm outline-hidden select-none data-[disabled]:pointer-events-none data-[disabled]:opacity-50 data-[inset]:pl-8 [&amp;_svg]:pointer-events-none [&amp;_svg]:shrink-0 [&amp;_svg:not([class*='size-'])]:size-4",
        className
      )}
      {...props}
    /&gt;
  )
}

function DropdownMenuCheckboxItem({
  className,
  children,
  checked,
  ...props
}: React.ComponentProps&lt;typeof DropdownMenuPrimitive.CheckboxItem&gt;) {
  return (
    &lt;DropdownMenuPrimitive.CheckboxItem
      data-slot="dropdown-menu-checkbox-item"
      className={cn(
        "focus:bg-accent focus:text-accent-foreground relative flex cursor-default items-center gap-2 rounded-sm py-1.5 pr-2 pl-8 text-sm outline-hidden select-none data-[disabled]:pointer-events-none data-[disabled]:opacity-50 [&amp;_svg]:pointer-events-none [&amp;_svg]:shrink-0 [&amp;_svg:not([class*='size-'])]:size-4",
        className
      )}
      checked={checked}
      {...props}
    &gt;
      &lt;span className="pointer-events-none absolute left-2 flex size-3.5 items-center justify-center"&gt;
        &lt;DropdownMenuPrimitive.ItemIndicator&gt;
          &lt;CheckIcon className="size-4" /&gt;
        &lt;/DropdownMenuPrimitive.ItemIndicator&gt;
      &lt;/span&gt;
      {children}
    &lt;/DropdownMenuPrimitive.CheckboxItem&gt;
  )
}

function DropdownMenuRadioGroup({
  ...props
}: React.ComponentProps&lt;typeof DropdownMenuPrimitive.RadioGroup&gt;) {
  return (
    &lt;DropdownMenuPrimitive.RadioGroup
      data-slot="dropdown-menu-radio-group"
      {...props}
    /&gt;
  )
}

function DropdownMenuRadioItem({
  className,
  children,
  ...props
}: React.ComponentProps&lt;typeof DropdownMenuPrimitive.RadioItem&gt;) {
  return (
    &lt;DropdownMenuPrimitive.RadioItem
      data-slot="dropdown-menu-radio-item"
      className={cn(
        "focus:bg-accent focus:text-accent-foreground relative flex cursor-default items-center gap-2 rounded-sm py-1.5 pr-2 pl-8 text-sm outline-hidden select-none data-[disabled]:pointer-events-none data-[disabled]:opacity-50 [&amp;_svg]:pointer-events-none [&amp;_svg]:shrink-0 [&amp;_svg:not([class*='size-'])]:size-4",
        className
      )}
      {...props}
    &gt;
      &lt;span className="pointer-events-none absolute left-2 flex size-3.5 items-center justify-center"&gt;
        &lt;DropdownMenuPrimitive.ItemIndicator&gt;
          &lt;CircleIcon className="size-2 fill-current" /&gt;
        &lt;/DropdownMenuPrimitive.ItemIndicator&gt;
      &lt;/span&gt;
      {children}
    &lt;/DropdownMenuPrimitive.RadioItem&gt;
  )
}

function DropdownMenuLabel({
  className,
  inset,
  ...props
}: React.ComponentProps&lt;typeof DropdownMenuPrimitive.Label&gt; &amp; {
  inset?: boolean
}) {
  return (
    &lt;DropdownMenuPrimitive.Label
      data-slot="dropdown-menu-label"
      data-inset={inset}
      className={cn(
        "px-2 py-1.5 text-sm font-medium data-[inset]:pl-8",
        className
      )}
      {...props}
    /&gt;
  )
}

function DropdownMenuSeparator({
  className,
  ...props
}: React.ComponentProps&lt;typeof DropdownMenuPrimitive.Separator&gt;) {
  return (
    &lt;DropdownMenuPrimitive.Separator
      data-slot="dropdown-menu-separator"
      className={cn("bg-border -mx-1 my-1 h-px", className)}
      {...props}
    /&gt;
  )
}

function DropdownMenuShortcut({
  className,
  ...props
}: React.ComponentProps&lt;"span"&gt;) {
  return (
    &lt;span
      data-slot="dropdown-menu-shortcut"
      className={cn(
        "text-muted-foreground ml-auto text-xs tracking-widest",
        className
      )}
      {...props}
    /&gt;
  )
}

function DropdownMenuSub({
  ...props
}: React.ComponentProps&lt;typeof DropdownMenuPrimitive.Sub&gt;) {
  return &lt;DropdownMenuPrimitive.Sub data-slot="dropdown-menu-sub" {...props} /&gt;
}

function DropdownMenuSubTrigger({
  className,
  inset,
  children,
  ...props
}: React.ComponentProps&lt;typeof DropdownMenuPrimitive.SubTrigger&gt; &amp; {
  inset?: boolean
}) {
  return (
    &lt;DropdownMenuPrimitive.SubTrigger
      data-slot="dropdown-menu-sub-trigger"
      data-inset={inset}
      className={cn(
        "focus:bg-accent focus:text-accent-foreground data-[state=open]:bg-accent data-[state=open]:text-accent-foreground flex cursor-default items-center rounded-sm px-2 py-1.5 text-sm outline-hidden select-none data-[inset]:pl-8",
        className
      )}
      {...props}
    &gt;
      {children}
      &lt;ChevronRightIcon className="ml-auto size-4" /&gt;
    &lt;/DropdownMenuPrimitive.SubTrigger&gt;
  )
}

function DropdownMenuSubContent({
  className,
  ...props
}: React.ComponentProps&lt;typeof DropdownMenuPrimitive.SubContent&gt;) {
  return (
    &lt;DropdownMenuPrimitive.SubContent
      data-slot="dropdown-menu-sub-content"
      className={cn(
        "bg-popover text-popover-foreground data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 z-50 min-w-[8rem] overflow-hidden rounded-md border p-1 shadow-lg",
        className
      )}
      {...props}
    /&gt;
  )
}

export {
  DropdownMenu,
  DropdownMenuPortal,
  DropdownMenuTrigger,
  DropdownMenuContent,
  DropdownMenuGroup,
  DropdownMenuLabel,
  DropdownMenuItem,
  DropdownMenuCheckboxItem,
  DropdownMenuRadioGroup,
  DropdownMenuRadioItem,
  DropdownMenuSeparator,
  DropdownMenuShortcut,
  DropdownMenuSub,
  DropdownMenuSubTrigger,
  DropdownMenuSubContent,
}</content>
    

  </file>
  <file>
    
  
    <path>resources/js/components/ui/icon.tsx</path>
    
  
    <content>import { LucideIcon } from 'lucide-react';

interface IconProps {
    iconNode?: LucideIcon | null;
    className?: string;
}

export function Icon({ iconNode: IconComponent, className }: IconProps) {
    if (!IconComponent) {
        return null;
    }

    return &lt;IconComponent className={className} /&gt;;
}</content>
    

  </file>
  <file>
    
  
    <path>resources/js/components/ui/input.tsx</path>
    
  
    <content>import * as React from "react"

import { cn } from "@/lib/utils"

function Input({ className, type, ...props }: React.ComponentProps&lt;"input"&gt;) {
  return (
    &lt;input
      type={type}
      data-slot="input"
      className={cn(
        "border-input file:text-foreground placeholder:text-muted-foreground selection:bg-primary selection:text-primary-foreground flex h-9 w-full min-w-0 rounded-md border bg-transparent px-3 py-1 text-base shadow-xs transition-[color,box-shadow] outline-none file:inline-flex file:h-7 file:border-0 file:bg-transparent file:text-sm file:font-medium disabled:pointer-events-none disabled:cursor-not-allowed disabled:opacity-50 md:text-sm",
        "focus-visible:border-ring focus-visible:ring-ring/50 focus-visible:ring-[3px]",
        "aria-invalid:ring-destructive/20 dark:aria-invalid:ring-destructive/40 aria-invalid:border-destructive",
        className
      )}
      {...props}
    /&gt;
  )
}

export { Input }</content>
    

  </file>
  <file>
    
  
    <path>resources/js/components/ui/label.tsx</path>
    
  
    <content>import * as React from "react"
import * as LabelPrimitive from "@radix-ui/react-label"

import { cn } from "@/lib/utils"

function Label({
  className,
  ...props
}: React.ComponentProps&lt;typeof LabelPrimitive.Root&gt;) {
  return (
    &lt;LabelPrimitive.Root
      data-slot="label"
      className={cn(
        "text-sm leading-none font-medium select-none group-data-[disabled=true]:pointer-events-none group-data-[disabled=true]:opacity-50 peer-disabled:cursor-not-allowed peer-disabled:opacity-50",
        className
      )}
      {...props}
    /&gt;
  )
}

export { Label }</content>
    

  </file>
  <file>
    
  
    <path>resources/js/components/ui/navigation-menu.tsx</path>
    
  
    <content>import * as React from "react"
import * as NavigationMenuPrimitive from "@radix-ui/react-navigation-menu"
import { cva } from "class-variance-authority"
import { ChevronDownIcon } from "lucide-react"

import { cn } from "@/lib/utils"

function NavigationMenu({
  className,
  children,
  viewport = true,
  ...props
}: React.ComponentProps&lt;typeof NavigationMenuPrimitive.Root&gt; &amp; {
  viewport?: boolean
}) {
  return (
    &lt;NavigationMenuPrimitive.Root
      data-slot="navigation-menu"
      data-viewport={viewport}
      className={cn(
        "group/navigation-menu relative flex max-w-max flex-1 items-center justify-center",
        className
      )}
      {...props}
    &gt;
      {children}
      {viewport &amp;&amp; &lt;NavigationMenuViewport /&gt;}
    &lt;/NavigationMenuPrimitive.Root&gt;
  )
}

function NavigationMenuList({
  className,
  ...props
}: React.ComponentProps&lt;typeof NavigationMenuPrimitive.List&gt;) {
  return (
    &lt;NavigationMenuPrimitive.List
      data-slot="navigation-menu-list"
      className={cn(
        "group flex flex-1 list-none items-center justify-center gap-1",
        className
      )}
      {...props}
    /&gt;
  )
}

function NavigationMenuItem({
  className,
  ...props
}: React.ComponentProps&lt;typeof NavigationMenuPrimitive.Item&gt;) {
  return (
    &lt;NavigationMenuPrimitive.Item
      data-slot="navigation-menu-item"
      className={cn("relative", className)}
      {...props}
    /&gt;
  )
}

const navigationMenuTriggerStyle = cva(
  "group inline-flex h-9 w-max items-center justify-center rounded-md bg-background px-4 py-2 text-sm font-medium hover:bg-accent hover:text-accent-foreground focus:bg-accent focus:text-accent-foreground disabled:pointer-events-none disabled:opacity-50 data-[active=true]:bg-accent/50 data-[state=open]:bg-accent/50 data-[active=true]:text-accent-foreground ring-ring/10 dark:ring-ring/20 dark:outline-ring/40 outline-ring/50 transition-[color,box-shadow] focus-visible:ring-4 focus-visible:outline-1"
)

function NavigationMenuTrigger({
  className,
  children,
  ...props
}: React.ComponentProps&lt;typeof NavigationMenuPrimitive.Trigger&gt;) {
  return (
    &lt;NavigationMenuPrimitive.Trigger
      data-slot="navigation-menu-trigger"
      className={cn(navigationMenuTriggerStyle(), "group", className)}
      {...props}
    &gt;
      {children}{" "}
      &lt;ChevronDownIcon
        className="relative top-[1px] ml-1 size-3 transition duration-300 group-data-[state=open]:rotate-180"
        aria-hidden="true"
      /&gt;
    &lt;/NavigationMenuPrimitive.Trigger&gt;
  )
}

function NavigationMenuContent({
  className,
  ...props
}: React.ComponentProps&lt;typeof NavigationMenuPrimitive.Content&gt;) {
  return (
    &lt;NavigationMenuPrimitive.Content
      data-slot="navigation-menu-content"
      className={cn(
        "data-[motion^=from-]:animate-in data-[motion^=to-]:animate-out data-[motion^=from-]:fade-in data-[motion^=to-]:fade-out data-[motion=from-end]:slide-in-from-right-52 data-[motion=from-start]:slide-in-from-left-52 data-[motion=to-end]:slide-out-to-right-52 data-[motion=to-start]:slide-out-to-left-52 top-0 left-0 w-full p-2 pr-2.5 md:absolute md:w-auto",
        "group-data-[viewport=false]/navigation-menu:bg-popover group-data-[viewport=false]/navigation-menu:text-popover-foreground group-data-[viewport=false]/navigation-menu:data-[state=open]:animate-in group-data-[viewport=false]/navigation-menu:data-[state=closed]:animate-out group-data-[viewport=false]/navigation-menu:data-[state=closed]:zoom-out-95 group-data-[viewport=false]/navigation-menu:data-[state=open]:zoom-in-95 group-data-[viewport=false]/navigation-menu:data-[state=open]:fade-in-0 group-data-[viewport=false]/navigation-menu:data-[state=closed]:fade-out-0 group-data-[viewport=false]/navigation-menu:top-full group-data-[viewport=false]/navigation-menu:mt-1.5 group-data-[viewport=false]/navigation-menu:overflow-hidden group-data-[viewport=false]/navigation-menu:rounded-md group-data-[viewport=false]/navigation-menu:border group-data-[viewport=false]/navigation-menu:shadow group-data-[viewport=false]/navigation-menu:duration-200 **:data-[slot=navigation-menu-link]:focus:ring-0 **:data-[slot=navigation-menu-link]:focus:outline-none",
        className
      )}
      {...props}
    /&gt;
  )
}

function NavigationMenuViewport({
  className,
  ...props
}: React.ComponentProps&lt;typeof NavigationMenuPrimitive.Viewport&gt;) {
  return (
    &lt;div
      className={cn(
        "absolute top-full left-0 isolate z-50 flex justify-center"
      )}
    &gt;
      &lt;NavigationMenuPrimitive.Viewport
        data-slot="navigation-menu-viewport"
        className={cn(
          "origin-top-center bg-popover text-popover-foreground data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-90 relative mt-1.5 h-[var(--radix-navigation-menu-viewport-height)] w-full overflow-hidden rounded-md border shadow md:w-[var(--radix-navigation-menu-viewport-width)]",
          className
        )}
        {...props}
      /&gt;
    &lt;/div&gt;
  )
}

function NavigationMenuLink({
  className,
  ...props
}: React.ComponentProps&lt;typeof NavigationMenuPrimitive.Link&gt;) {
  return (
    &lt;NavigationMenuPrimitive.Link
      data-slot="navigation-menu-link"
      className={cn(
        "hover:bg-accent hover:text-accent-foreground focus:bg-accent focus:text-accent-foreground data-[active=true]:bg-accent/50 data-[active=true]:text-accent-foreground ring-ring/10 dark:ring-ring/20 dark:outline-ring/40 outline-ring/50 [&amp;_svg:not([class*='text-'])]:text-muted-foreground flex flex-col gap-1 rounded-sm p-2 text-sm transition-[color,box-shadow] focus-visible:ring-4 focus-visible:outline-1 [&amp;_svg:not([class*='size-'])]:size-4",
        className
      )}
      {...props}
    /&gt;
  )
}

function NavigationMenuIndicator({
  className,
  ...props
}: React.ComponentProps&lt;typeof NavigationMenuPrimitive.Indicator&gt;) {
  return (
    &lt;NavigationMenuPrimitive.Indicator
      data-slot="navigation-menu-indicator"
      className={cn(
        "data-[state=visible]:animate-in data-[state=hidden]:animate-out data-[state=hidden]:fade-out data-[state=visible]:fade-in top-full z-[1] flex h-1.5 items-end justify-center overflow-hidden",
        className
      )}
      {...props}
    &gt;
      &lt;div className="bg-border relative top-[60%] h-2 w-2 rotate-45 rounded-tl-sm shadow-md" /&gt;
    &lt;/NavigationMenuPrimitive.Indicator&gt;
  )
}

export {
  NavigationMenu,
  NavigationMenuList,
  NavigationMenuItem,
  NavigationMenuContent,
  NavigationMenuTrigger,
  NavigationMenuLink,
  NavigationMenuIndicator,
  NavigationMenuViewport,
  navigationMenuTriggerStyle,
}</content>
    

  </file>
  <file>
    
  
    <path>resources/js/components/ui/placeholder-pattern.tsx</path>
    
  
    <content>import { useId } from 'react';

interface PlaceholderPatternProps {
    className?: string;
}

export function PlaceholderPattern({ className }: PlaceholderPatternProps) {
    const patternId = useId();

    return (
        &lt;svg className={className} fill="none"&gt;
            &lt;defs&gt;
                &lt;pattern id={patternId} x="0" y="0" width="10" height="10" patternUnits="userSpaceOnUse"&gt;
                    &lt;path d="M-3 13 15-5M-5 5l18-18M-1 21 17 3"&gt;&lt;/path&gt;
                &lt;/pattern&gt;
            &lt;/defs&gt;
            &lt;rect stroke="none" fill={`url(#${patternId})`} width="100%" height="100%"&gt;&lt;/rect&gt;
        &lt;/svg&gt;
    );
}</content>
    

  </file>
  <file>
    
  
    <path>resources/js/components/ui/select.tsx</path>
    
  
    <content>import * as React from "react"
import * as SelectPrimitive from "@radix-ui/react-select"
import { CheckIcon, ChevronDownIcon, ChevronUpIcon } from "lucide-react"

import { cn } from "@/lib/utils"

function Select({
  ...props
}: React.ComponentProps&lt;typeof SelectPrimitive.Root&gt;) {
  return &lt;SelectPrimitive.Root data-slot="select" {...props} /&gt;
}

function SelectGroup({
  ...props
}: React.ComponentProps&lt;typeof SelectPrimitive.Group&gt;) {
  return &lt;SelectPrimitive.Group data-slot="select-group" {...props} /&gt;
}

function SelectValue({
  ...props
}: React.ComponentProps&lt;typeof SelectPrimitive.Value&gt;) {
  return &lt;SelectPrimitive.Value data-slot="select-value" {...props} /&gt;
}

function SelectTrigger({
  className,
  children,
  ...props
}: React.ComponentProps&lt;typeof SelectPrimitive.Trigger&gt;) {
  return (
    &lt;SelectPrimitive.Trigger
      data-slot="select-trigger"
      className={cn(
        "border-input data-[placeholder]:text-muted-foreground [&amp;_svg:not([class*='text-'])]:text-muted-foreground focus-visible:border-ring focus-visible:ring-ring/50 aria-invalid:ring-destructive/20 dark:aria-invalid:ring-destructive/40 aria-invalid:border-destructive flex h-9 w-full items-center justify-between rounded-md border bg-transparent px-3 py-2 text-sm shadow-xs transition-[color,box-shadow] outline-none focus-visible:ring-[3px] disabled:cursor-not-allowed disabled:opacity-50 *:data-[slot=select-value]:flex *:data-[slot=select-value]:items-center *:data-[slot=select-value]:gap-2 [&amp;_svg]:pointer-events-none [&amp;_svg]:shrink-0 [&amp;_svg:not([class*='size-'])]:size-4 [&amp;&gt;span]:line-clamp-1",
        className
      )}
      {...props}
    &gt;
      {children}
      &lt;SelectPrimitive.Icon asChild&gt;
        &lt;ChevronDownIcon className="size-4 opacity-50" /&gt;
      &lt;/SelectPrimitive.Icon&gt;
    &lt;/SelectPrimitive.Trigger&gt;
  )
}

function SelectContent({
  className,
  children,
  position = "popper",
  ...props
}: React.ComponentProps&lt;typeof SelectPrimitive.Content&gt;) {
  return (
    &lt;SelectPrimitive.Portal&gt;
      &lt;SelectPrimitive.Content
        data-slot="select-content"
        className={cn(
          "bg-popover text-popover-foreground data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 relative z-50 max-h-96 min-w-[8rem] overflow-hidden rounded-md border shadow-md",
          position === "popper" &amp;&amp;
            "data-[side=bottom]:translate-y-1 data-[side=left]:-translate-x-1 data-[side=right]:translate-x-1 data-[side=top]:-translate-y-1",
          className
        )}
        position={position}
        {...props}
      &gt;
        &lt;SelectScrollUpButton /&gt;
        &lt;SelectPrimitive.Viewport
          className={cn(
            "p-1",
            position === "popper" &amp;&amp;
              "h-[var(--radix-select-trigger-height)] w-full min-w-[var(--radix-select-trigger-width)] scroll-my-1"
          )}
        &gt;
          {children}
        &lt;/SelectPrimitive.Viewport&gt;
        &lt;SelectScrollDownButton /&gt;
      &lt;/SelectPrimitive.Content&gt;
    &lt;/SelectPrimitive.Portal&gt;
  )
}

function SelectLabel({
  className,
  ...props
}: React.ComponentProps&lt;typeof SelectPrimitive.Label&gt;) {
  return (
    &lt;SelectPrimitive.Label
      data-slot="select-label"
      className={cn("px-2 py-1.5 text-sm font-medium", className)}
      {...props}
    /&gt;
  )
}

function SelectItem({
  className,
  children,
  ...props
}: React.ComponentProps&lt;typeof SelectPrimitive.Item&gt;) {
  return (
    &lt;SelectPrimitive.Item
      data-slot="select-item"
      className={cn(
        "focus:bg-accent focus:text-accent-foreground [&amp;_svg:not([class*='text-'])]:text-muted-foreground relative flex w-full cursor-default items-center gap-2 rounded-sm py-1.5 pr-8 pl-2 text-sm outline-hidden select-none data-[disabled]:pointer-events-none data-[disabled]:opacity-50 [&amp;_svg]:pointer-events-none [&amp;_svg]:shrink-0 [&amp;_svg:not([class*='size-'])]:size-4 *:[span]:last:flex *:[span]:last:items-center *:[span]:last:gap-2",
        className
      )}
      {...props}
    &gt;
      &lt;span className="absolute right-2 flex size-3.5 items-center justify-center"&gt;
        &lt;SelectPrimitive.ItemIndicator&gt;
          &lt;CheckIcon className="size-4" /&gt;
        &lt;/SelectPrimitive.ItemIndicator&gt;
      &lt;/span&gt;
      &lt;SelectPrimitive.ItemText&gt;{children}&lt;/SelectPrimitive.ItemText&gt;
    &lt;/SelectPrimitive.Item&gt;
  )
}

function SelectSeparator({
  className,
  ...props
}: React.ComponentProps&lt;typeof SelectPrimitive.Separator&gt;) {
  return (
    &lt;SelectPrimitive.Separator
      data-slot="select-separator"
      className={cn("bg-border pointer-events-none -mx-1 my-1 h-px", className)}
      {...props}
    /&gt;
  )
}

function SelectScrollUpButton({
  className,
  ...props
}: React.ComponentProps&lt;typeof SelectPrimitive.ScrollUpButton&gt;) {
  return (
    &lt;SelectPrimitive.ScrollUpButton
      data-slot="select-scroll-up-button"
      className={cn(
        "flex cursor-default items-center justify-center py-1",
        className
      )}
      {...props}
    &gt;
      &lt;ChevronUpIcon className="size-4" /&gt;
    &lt;/SelectPrimitive.ScrollUpButton&gt;
  )
}

function SelectScrollDownButton({
  className,
  ...props
}: React.ComponentProps&lt;typeof SelectPrimitive.ScrollDownButton&gt;) {
  return (
    &lt;SelectPrimitive.ScrollDownButton
      data-slot="select-scroll-down-button"
      className={cn(
        "flex cursor-default items-center justify-center py-1",
        className
      )}
      {...props}
    &gt;
      &lt;ChevronDownIcon className="size-4" /&gt;
    &lt;/SelectPrimitive.ScrollDownButton&gt;
  )
}

export {
  Select,
  SelectContent,
  SelectGroup,
  SelectItem,
  SelectLabel,
  SelectScrollDownButton,
  SelectScrollUpButton,
  SelectSeparator,
  SelectTrigger,
  SelectValue,
}</content>
    

  </file>
  <file>
    
  
    <path>resources/js/components/ui/separator.tsx</path>
    
  
    <content>import * as React from "react"
import * as SeparatorPrimitive from "@radix-ui/react-separator"

import { cn } from "@/lib/utils"

function Separator({
  className,
  orientation = "horizontal",
  decorative = true,
  ...props
}: React.ComponentProps&lt;typeof SeparatorPrimitive.Root&gt;) {
  return (
    &lt;SeparatorPrimitive.Root
      data-slot="separator-root"
      decorative={decorative}
      orientation={orientation}
      className={cn(
        "bg-border shrink-0 data-[orientation=horizontal]:h-px data-[orientation=horizontal]:w-full data-[orientation=vertical]:h-full data-[orientation=vertical]:w-px",
        className
      )}
      {...props}
    /&gt;
  )
}

export { Separator }</content>
    

  </file>
  <file>
    
  
    <path>resources/js/components/ui/sheet.tsx</path>
    
  
    <content>import * as React from "react"
import * as SheetPrimitive from "@radix-ui/react-dialog"
import { XIcon } from "lucide-react"

import { cn } from "@/lib/utils"

function Sheet({ ...props }: React.ComponentProps&lt;typeof SheetPrimitive.Root&gt;) {
  return &lt;SheetPrimitive.Root data-slot="sheet" {...props} /&gt;
}

function SheetTrigger({
  ...props
}: React.ComponentProps&lt;typeof SheetPrimitive.Trigger&gt;) {
  return &lt;SheetPrimitive.Trigger data-slot="sheet-trigger" {...props} /&gt;
}

function SheetClose({
  ...props
}: React.ComponentProps&lt;typeof SheetPrimitive.Close&gt;) {
  return &lt;SheetPrimitive.Close data-slot="sheet-close" {...props} /&gt;
}

function SheetPortal({
  ...props
}: React.ComponentProps&lt;typeof SheetPrimitive.Portal&gt;) {
  return &lt;SheetPrimitive.Portal data-slot="sheet-portal" {...props} /&gt;
}

function SheetOverlay({
  className,
  ...props
}: React.ComponentProps&lt;typeof SheetPrimitive.Overlay&gt;) {
  return (
    &lt;SheetPrimitive.Overlay
      data-slot="sheet-overlay"
      className={cn(
        "data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 fixed inset-0 z-50 bg-black/80",
        className
      )}
      {...props}
    /&gt;
  )
}

function SheetContent({
  className,
  children,
  side = "right",
  ...props
}: React.ComponentProps&lt;typeof SheetPrimitive.Content&gt; &amp; {
  side?: "top" | "right" | "bottom" | "left"
}) {
  return (
    &lt;SheetPortal&gt;
      &lt;SheetOverlay /&gt;
      &lt;SheetPrimitive.Content
        data-slot="sheet-content"
        className={cn(
          "bg-background data-[state=open]:animate-in data-[state=closed]:animate-out fixed z-50 flex flex-col gap-4 shadow-lg transition ease-in-out data-[state=closed]:duration-300 data-[state=open]:duration-500",
          side === "right" &amp;&amp;
            "data-[state=closed]:slide-out-to-right data-[state=open]:slide-in-from-right inset-y-0 right-0 h-full w-3/4 border-l sm:max-w-sm",
          side === "left" &amp;&amp;
            "data-[state=closed]:slide-out-to-left data-[state=open]:slide-in-from-left inset-y-0 left-0 h-full w-3/4 border-r sm:max-w-sm",
          side === "top" &amp;&amp;
            "data-[state=closed]:slide-out-to-top data-[state=open]:slide-in-from-top inset-x-0 top-0 h-auto border-b",
          side === "bottom" &amp;&amp;
            "data-[state=closed]:slide-out-to-bottom data-[state=open]:slide-in-from-bottom inset-x-0 bottom-0 h-auto border-t",
          className
        )}
        {...props}
      &gt;
        {children}
        &lt;SheetPrimitive.Close className="ring-offset-background focus:ring-ring data-[state=open]:bg-secondary absolute top-4 right-4 rounded-xs opacity-70 transition-opacity hover:opacity-100 focus:ring-2 focus:ring-offset-2 focus:outline-hidden disabled:pointer-events-none"&gt;
          &lt;XIcon className="size-4" /&gt;
          &lt;span className="sr-only"&gt;Close&lt;/span&gt;
        &lt;/SheetPrimitive.Close&gt;
      &lt;/SheetPrimitive.Content&gt;
    &lt;/SheetPortal&gt;
  )
}

function SheetHeader({ className, ...props }: React.ComponentProps&lt;"div"&gt;) {
  return (
    &lt;div
      data-slot="sheet-header"
      className={cn("flex flex-col gap-1.5 p-4", className)}
      {...props}
    /&gt;
  )
}

function SheetFooter({ className, ...props }: React.ComponentProps&lt;"div"&gt;) {
  return (
    &lt;div
      data-slot="sheet-footer"
      className={cn("mt-auto flex flex-col gap-2 p-4", className)}
      {...props}
    /&gt;
  )
}

function SheetTitle({
  className,
  ...props
}: React.ComponentProps&lt;typeof SheetPrimitive.Title&gt;) {
  return (
    &lt;SheetPrimitive.Title
      data-slot="sheet-title"
      className={cn("text-foreground font-semibold", className)}
      {...props}
    /&gt;
  )
}

function SheetDescription({
  className,
  ...props
}: React.ComponentProps&lt;typeof SheetPrimitive.Description&gt;) {
  return (
    &lt;SheetPrimitive.Description
      data-slot="sheet-description"
      className={cn("text-muted-foreground text-sm", className)}
      {...props}
    /&gt;
  )
}

export {
  Sheet,
  SheetTrigger,
  SheetClose,
  SheetContent,
  SheetHeader,
  SheetFooter,
  SheetTitle,
  SheetDescription,
}</content>
    

  </file>
  <file>
    
  
    <path>resources/js/components/ui/sidebar.tsx</path>
    
  
    <content>import * as React from "react"
import { Slot } from "@radix-ui/react-slot"
import { VariantProps, cva } from "class-variance-authority"
import { PanelLeftIcon } from "lucide-react"

import { useIsMobile } from "@/hooks/use-mobile"
import { cn } from "@/lib/utils"
import { Button } from "@/components/ui/button"
import { Input } from "@/components/ui/input"
import { Separator } from "@/components/ui/separator"
import {
  Sheet,
  SheetContent,
  SheetDescription,
  SheetHeader,
  SheetTitle,
} from "@/components/ui/sheet"
import { Skeleton } from "@/components/ui/skeleton"
import {
  Tooltip,
  TooltipContent,
  TooltipProvider,
  TooltipTrigger,
} from "@/components/ui/tooltip"

const SIDEBAR_COOKIE_NAME = "sidebar_state"
const SIDEBAR_COOKIE_MAX_AGE = 60 * 60 * 24 * 7
const SIDEBAR_WIDTH = "16rem"
const SIDEBAR_WIDTH_MOBILE = "18rem"
const SIDEBAR_WIDTH_ICON = "3rem"
const SIDEBAR_KEYBOARD_SHORTCUT = "b"

type SidebarContext = {
  state: "expanded" | "collapsed"
  open: boolean
  setOpen: (open: boolean) =&gt; void
  openMobile: boolean
  setOpenMobile: (open: boolean) =&gt; void
  isMobile: boolean
  toggleSidebar: () =&gt; void
}

const SidebarContext = React.createContext&lt;SidebarContext | null&gt;(null)

function useSidebar() {
  const context = React.useContext(SidebarContext)
  if (!context) {
    throw new Error("useSidebar must be used within a SidebarProvider.")
  }

  return context
}

function SidebarProvider({
  defaultOpen = true,
  open: openProp,
  onOpenChange: setOpenProp,
  className,
  style,
  children,
  ...props
}: React.ComponentProps&lt;"div"&gt; &amp; {
  defaultOpen?: boolean
  open?: boolean
  onOpenChange?: (open: boolean) =&gt; void
}) {
  const isMobile = useIsMobile()
  const [openMobile, setOpenMobile] = React.useState(false)

  // This is the internal state of the sidebar.
  // We use openProp and setOpenProp for control from outside the component.
  const [_open, _setOpen] = React.useState(defaultOpen)
  const open = openProp ?? _open
  const setOpen = React.useCallback(
    (value: boolean | ((value: boolean) =&gt; boolean)) =&gt; {
      const openState = typeof value === "function" ? value(open) : value
      if (setOpenProp) {
        setOpenProp(openState)
      } else {
        _setOpen(openState)
      }

      // This sets the cookie to keep the sidebar state.
      document.cookie = `${SIDEBAR_COOKIE_NAME}=${openState}; path=/; max-age=${SIDEBAR_COOKIE_MAX_AGE}`
    },
    [setOpenProp, open]
  )

  // Helper to toggle the sidebar.
  const toggleSidebar = React.useCallback(() =&gt; {
    return isMobile ? setOpenMobile((open) =&gt; !open) : setOpen((open) =&gt; !open)
  }, [isMobile, setOpen, setOpenMobile])

  // Adds a keyboard shortcut to toggle the sidebar.
  React.useEffect(() =&gt; {
    const handleKeyDown = (event: KeyboardEvent) =&gt; {
      if (
        event.key === SIDEBAR_KEYBOARD_SHORTCUT &amp;&amp;
        (event.metaKey || event.ctrlKey)
      ) {
        event.preventDefault()
        toggleSidebar()
      }
    }

    window.addEventListener("keydown", handleKeyDown)
    return () =&gt; window.removeEventListener("keydown", handleKeyDown)
  }, [toggleSidebar])

  // We add a state so that we can do data-state="expanded" or "collapsed".
  // This makes it easier to style the sidebar with Tailwind classes.
  const state = open ? "expanded" : "collapsed"

  const contextValue = React.useMemo&lt;SidebarContext&gt;(
    () =&gt; ({
      state,
      open,
      setOpen,
      isMobile,
      openMobile,
      setOpenMobile,
      toggleSidebar,
    }),
    [state, open, setOpen, isMobile, openMobile, setOpenMobile, toggleSidebar]
  )

  return (
    &lt;SidebarContext.Provider value={contextValue}&gt;
      &lt;TooltipProvider delayDuration={0}&gt;
        &lt;div
          data-slot="sidebar-wrapper"
          style={
            {
              "--sidebar-width": SIDEBAR_WIDTH,
              "--sidebar-width-icon": SIDEBAR_WIDTH_ICON,
              ...style,
            } as React.CSSProperties
          }
          className={cn(
            "group/sidebar-wrapper has-data-[variant=inset]:bg-sidebar flex min-h-svh w-full",
            className
          )}
          {...props}
        &gt;
          {children}
        &lt;/div&gt;
      &lt;/TooltipProvider&gt;
    &lt;/SidebarContext.Provider&gt;
  )
}

function Sidebar({
  side = "left",
  variant = "sidebar",
  collapsible = "offcanvas",
  className,
  children,
  ...props
}: React.ComponentProps&lt;"div"&gt; &amp; {
  side?: "left" | "right"
  variant?: "sidebar" | "floating" | "inset"
  collapsible?: "offcanvas" | "icon" | "none"
}) {
  const { isMobile, state, openMobile, setOpenMobile } = useSidebar()

  if (collapsible === "none") {
    return (
      &lt;div
        data-slot="sidebar"
        className={cn(
          "bg-sidebar text-sidebar-foreground flex h-full w-(--sidebar-width) flex-col",
          className
        )}
        {...props}
      &gt;
        {children}
      &lt;/div&gt;
    )
  }

  if (isMobile) {
    return (
      &lt;Sheet open={openMobile} onOpenChange={setOpenMobile} {...props}&gt;
        &lt;SheetHeader className="sr-only"&gt;
          &lt;SheetTitle&gt;Sidebar&lt;/SheetTitle&gt;
          &lt;SheetDescription&gt;Displays the mobile sidebar.&lt;/SheetDescription&gt;
        &lt;/SheetHeader&gt;
        &lt;SheetContent
          data-sidebar="sidebar"
          data-slot="sidebar"
          data-mobile="true"
          className="bg-sidebar text-sidebar-foreground w-(--sidebar-width) p-0 [&amp;&gt;button]:hidden"
          style={
            {
              "--sidebar-width": SIDEBAR_WIDTH_MOBILE,
            } as React.CSSProperties
          }
          side={side}
        &gt;
          &lt;div className="flex h-full w-full flex-col"&gt;{children}&lt;/div&gt;
        &lt;/SheetContent&gt;
      &lt;/Sheet&gt;
    )
  }

  return (
    &lt;div
      className="group peer text-sidebar-foreground hidden md:block"
      data-state={state}
      data-collapsible={state === "collapsed" ? collapsible : ""}
      data-variant={variant}
      data-side={side}
      data-slot="sidebar"
    &gt;
      {/* This is what handles the sidebar gap on desktop */}
      &lt;div
        className={cn(
          "relative h-svh w-(--sidebar-width) bg-transparent transition-[width] duration-200 ease-linear",
          "group-data-[collapsible=offcanvas]:w-0",
          "group-data-[side=right]:rotate-180",
          variant === "floating" || variant === "inset"
            ? "group-data-[collapsible=icon]:w-[calc(var(--sidebar-width-icon)+(--spacing(4)))]"
            : "group-data-[collapsible=icon]:w-(--sidebar-width-icon)"
        )}
      /&gt;
      &lt;div
        className={cn(
          "fixed inset-y-0 z-10 hidden h-svh w-(--sidebar-width) transition-[left,right,width] duration-200 ease-linear md:flex",
          side === "left"
            ? "left-0 group-data-[collapsible=offcanvas]:left-[calc(var(--sidebar-width)*-1)]"
            : "right-0 group-data-[collapsible=offcanvas]:right-[calc(var(--sidebar-width)*-1)]",
          // Adjust the padding for floating and inset variants.
          variant === "floating" || variant === "inset"
            ? "p-2 group-data-[collapsible=icon]:w-[calc(var(--sidebar-width-icon)+(--spacing(4))+2px)]"
            : "group-data-[collapsible=icon]:w-(--sidebar-width-icon) group-data-[side=left]:border-r group-data-[side=right]:border-l",
          className
        )}
        {...props}
      &gt;
        &lt;div
          data-sidebar="sidebar"
          className="bg-sidebar group-data-[variant=floating]:border-sidebar-border flex h-full w-full flex-col group-data-[variant=floating]:rounded-lg group-data-[variant=floating]:border group-data-[variant=floating]:shadow-sm"
        &gt;
          {children}
        &lt;/div&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  )
}

function SidebarTrigger({
  className,
  onClick,
  ...props
}: React.ComponentProps&lt;typeof Button&gt;) {
  const { toggleSidebar } = useSidebar()

  return (
    &lt;Button
      data-sidebar="trigger"
      data-slot="sidebar-trigger"
      variant="ghost"
      size="icon"
      className={cn("h-7 w-7", className)}
      onClick={(event) =&gt; {
        onClick?.(event)
        toggleSidebar()
      }}
      {...props}
    &gt;
      &lt;PanelLeftIcon /&gt;
      &lt;span className="sr-only"&gt;Toggle Sidebar&lt;/span&gt;
    &lt;/Button&gt;
  )
}

function SidebarRail({ className, ...props }: React.ComponentProps&lt;"button"&gt;) {
  const { toggleSidebar } = useSidebar()

  return (
    &lt;button
      data-sidebar="rail"
      data-slot="sidebar-rail"
      aria-label="Toggle Sidebar"
      tabIndex={-1}
      onClick={toggleSidebar}
      title="Toggle Sidebar"
      className={cn(
        "hover:after:bg-sidebar-border absolute inset-y-0 z-20 hidden w-4 -translate-x-1/2 transition-all ease-linear group-data-[side=left]:-right-4 group-data-[side=right]:left-0 after:absolute after:inset-y-0 after:left-1/2 after:w-[2px] sm:flex",
        "in-data-[side=left]:cursor-w-resize in-data-[side=right]:cursor-e-resize",
        "[[data-side=left][data-state=collapsed]_&amp;]:cursor-e-resize [[data-side=right][data-state=collapsed]_&amp;]:cursor-w-resize",
        "hover:group-data-[collapsible=offcanvas]:bg-sidebar group-data-[collapsible=offcanvas]:translate-x-0 group-data-[collapsible=offcanvas]:after:left-full",
        "[[data-side=left][data-collapsible=offcanvas]_&amp;]:-right-2",
        "[[data-side=right][data-collapsible=offcanvas]_&amp;]:-left-2",
        className
      )}
      {...props}
    /&gt;
  )
}

function SidebarInset({ className, ...props }: React.ComponentProps&lt;"main"&gt;) {
  return (
    &lt;main
      data-slot="sidebar-inset"
      className={cn(
        "bg-background relative flex max-w-full min-h-svh flex-1 flex-col",
        "peer-data-[variant=inset]:min-h-[calc(100svh-(--spacing(4)))] md:peer-data-[variant=inset]:m-2 md:peer-data-[variant=inset]:ml-0 md:peer-data-[variant=inset]:rounded-xl md:peer-data-[variant=inset]:shadow-sm md:peer-data-[variant=inset]:peer-data-[state=collapsed]:ml-0",
        className
      )}
      {...props}
    /&gt;
  )
}

function SidebarInput({
  className,
  ...props
}: React.ComponentProps&lt;typeof Input&gt;) {
  return (
    &lt;Input
      data-slot="sidebar-input"
      data-sidebar="input"
      className={cn("bg-background h-8 w-full shadow-none", className)}
      {...props}
    /&gt;
  )
}

function SidebarHeader({ className, ...props }: React.ComponentProps&lt;"div"&gt;) {
  return (
    &lt;div
      data-slot="sidebar-header"
      data-sidebar="header"
      className={cn("flex flex-col gap-2 p-2", className)}
      {...props}
    /&gt;
  )
}

function SidebarFooter({ className, ...props }: React.ComponentProps&lt;"div"&gt;) {
  return (
    &lt;div
      data-slot="sidebar-footer"
      data-sidebar="footer"
      className={cn("flex flex-col gap-2 p-2", className)}
      {...props}
    /&gt;
  )
}

function SidebarSeparator({
  className,
  ...props
}: React.ComponentProps&lt;typeof Separator&gt;) {
  return (
    &lt;Separator
      data-slot="sidebar-separator"
      data-sidebar="separator"
      className={cn("bg-sidebar-border mx-2 w-auto", className)}
      {...props}
    /&gt;
  )
}

function SidebarContent({ className, ...props }: React.ComponentProps&lt;"div"&gt;) {
  return (
    &lt;div
      data-slot="sidebar-content"
      data-sidebar="content"
      className={cn(
        "flex min-h-0 flex-1 flex-col gap-2 overflow-auto group-data-[collapsible=icon]:overflow-hidden",
        className
      )}
      {...props}
    /&gt;
  )
}

function SidebarGroup({ className, ...props }: React.ComponentProps&lt;"div"&gt;) {
  return (
    &lt;div
      data-slot="sidebar-group"
      data-sidebar="group"
      className={cn("relative flex w-full min-w-0 flex-col p-2", className)}
      {...props}
    /&gt;
  )
}

function SidebarGroupLabel({
  className,
  asChild = false,
  ...props
}: React.ComponentProps&lt;"div"&gt; &amp; { asChild?: boolean }) {
  const Comp = asChild ? Slot : "div"

  return (
    &lt;Comp
      data-slot="sidebar-group-label"
      data-sidebar="group-label"
      className={cn(
        "text-sidebar-foreground/70 ring-sidebar-ring flex h-8 shrink-0 items-center rounded-md px-2 text-xs font-medium outline-hidden transition-[margin,opacity] duration-200 ease-linear focus-visible:ring-2 [&amp;&gt;svg]:size-4 [&amp;&gt;svg]:shrink-0",
        "group-data-[collapsible=icon]:-mt-8 group-data-[collapsible=icon]:opacity-0 group-data-[collapsible=icon]:select-none group-data-[collapsible=icon]:pointer-events-none",
        className
      )}
      {...props}
    /&gt;
  )
}

function SidebarGroupAction({
  className,
  asChild = false,
  ...props
}: React.ComponentProps&lt;"button"&gt; &amp; { asChild?: boolean }) {
  const Comp = asChild ? Slot : "button"

  return (
    &lt;Comp
      data-slot="sidebar-group-action"
      data-sidebar="group-action"
      className={cn(
        "text-sidebar-foreground ring-sidebar-ring hover:bg-sidebar-accent hover:text-sidebar-accent-foreground absolute top-3.5 right-3 flex aspect-square w-5 items-center justify-center rounded-md p-0 outline-hidden transition-transform focus-visible:ring-2 [&amp;&gt;svg]:size-4 [&amp;&gt;svg]:shrink-0",
        // Increases the hit area of the button on mobile.
        "after:absolute after:-inset-2 md:after:hidden",
        "group-data-[collapsible=icon]:hidden",
        className
      )}
      {...props}
    /&gt;
  )
}

function SidebarGroupContent({
  className,
  ...props
}: React.ComponentProps&lt;"div"&gt;) {
  return (
    &lt;div
      data-slot="sidebar-group-content"
      data-sidebar="group-content"
      className={cn("w-full text-sm", className)}
      {...props}
    /&gt;
  )
}

function SidebarMenu({ className, ...props }: React.ComponentProps&lt;"ul"&gt;) {
  return (
    &lt;ul
      data-slot="sidebar-menu"
      data-sidebar="menu"
      className={cn("flex w-full min-w-0 flex-col gap-1", className)}
      {...props}
    /&gt;
  )
}

function SidebarMenuItem({ className, ...props }: React.ComponentProps&lt;"li"&gt;) {
  return (
    &lt;li
      data-slot="sidebar-menu-item"
      data-sidebar="menu-item"
      className={cn("group/menu-item relative", className)}
      {...props}
    /&gt;
  )
}

const sidebarMenuButtonVariants = cva(
  "peer/menu-button flex w-full items-center gap-2 overflow-hidden rounded-md p-2 text-left text-sm outline-hidden ring-sidebar-ring transition-[width,height,padding] hover:bg-sidebar-accent hover:text-sidebar-accent-foreground focus-visible:ring-2 active:bg-sidebar-accent active:text-sidebar-accent-foreground disabled:pointer-events-none disabled:opacity-50 group-has-data-[sidebar=menu-action]/menu-item:pr-8 aria-disabled:pointer-events-none aria-disabled:opacity-50 data-[active=true]:bg-sidebar-accent data-[active=true]:font-medium data-[active=true]:text-sidebar-accent-foreground data-[state=open]:hover:bg-sidebar-accent data-[state=open]:hover:text-sidebar-accent-foreground group-data-[collapsible=icon]:size-8! group-data-[collapsible=icon]:p-2! [&amp;&gt;span:last-child]:truncate [&amp;&gt;svg]:size-4 [&amp;&gt;svg]:shrink-0",
  {
    variants: {
      variant: {
        default: "hover:bg-sidebar-accent hover:text-sidebar-accent-foreground",
        outline:
          "bg-background shadow-[0_0_0_1px_hsl(var(--sidebar-border))] hover:bg-sidebar-accent hover:text-sidebar-accent-foreground hover:shadow-[0_0_0_1px_hsl(var(--sidebar-accent))]",
      },
      size: {
        default: "h-8 text-sm",
        sm: "h-7 text-xs",
        lg: "h-12 text-sm group-data-[collapsible=icon]:p-0!",
      },
    },
    defaultVariants: {
      variant: "default",
      size: "default",
    },
  }
)

function SidebarMenuButton({
  asChild = false,
  isActive = false,
  variant = "default",
  size = "default",
  tooltip,
  className,
  ...props
}: React.ComponentProps&lt;"button"&gt; &amp; {
  asChild?: boolean
  isActive?: boolean
  tooltip?: string | React.ComponentProps&lt;typeof TooltipContent&gt;
} &amp; VariantProps&lt;typeof sidebarMenuButtonVariants&gt;) {
  const Comp = asChild ? Slot : "button"
  const { isMobile, state } = useSidebar()

  const button = (
    &lt;Comp
      data-slot="sidebar-menu-button"
      data-sidebar="menu-button"
      data-size={size}
      data-active={isActive}
      className={cn(sidebarMenuButtonVariants({ variant, size }), className)}
      {...props}
    /&gt;
  )

  if (!tooltip) {
    return button
  }

  if (typeof tooltip === "string") {
    tooltip = {
      children: tooltip,
    }
  }

  return (
    &lt;Tooltip&gt;
      &lt;TooltipTrigger asChild&gt;{button}&lt;/TooltipTrigger&gt;
      &lt;TooltipContent
        side="right"
        align="center"
        hidden={state !== "collapsed" || isMobile}
        {...tooltip}
      /&gt;
    &lt;/Tooltip&gt;
  )
}

function SidebarMenuAction({
  className,
  asChild = false,
  showOnHover = false,
  ...props
}: React.ComponentProps&lt;"button"&gt; &amp; {
  asChild?: boolean
  showOnHover?: boolean
}) {
  const Comp = asChild ? Slot : "button"

  return (
    &lt;Comp
      data-slot="sidebar-menu-action"
      data-sidebar="menu-action"
      className={cn(
        "text-sidebar-foreground ring-sidebar-ring hover:bg-sidebar-accent hover:text-sidebar-accent-foreground peer-hover/menu-button:text-sidebar-accent-foreground absolute top-1.5 right-1 flex aspect-square w-5 items-center justify-center rounded-md p-0 outline-hidden transition-transform focus-visible:ring-2 [&amp;&gt;svg]:size-4 [&amp;&gt;svg]:shrink-0",
        // Increases the hit area of the button on mobile.
        "after:absolute after:-inset-2 md:after:hidden",
        "peer-data-[size=sm]/menu-button:top-1",
        "peer-data-[size=default]/menu-button:top-1.5",
        "peer-data-[size=lg]/menu-button:top-2.5",
        "group-data-[collapsible=icon]:hidden",
        showOnHover &amp;&amp;
          "peer-data-[active=true]/menu-button:text-sidebar-accent-foreground group-focus-within/menu-item:opacity-100 group-hover/menu-item:opacity-100 data-[state=open]:opacity-100 md:opacity-0",
        className
      )}
      {...props}
    /&gt;
  )
}

function SidebarMenuBadge({
  className,
  ...props
}: React.ComponentProps&lt;"div"&gt;) {
  return (
    &lt;div
      data-slot="sidebar-menu-badge"
      data-sidebar="menu-badge"
      className={cn(
        "text-sidebar-foreground pointer-events-none absolute right-1 flex h-5 min-w-5 items-center justify-center rounded-md px-1 text-xs font-medium tabular-nums select-none",
        "peer-hover/menu-button:text-sidebar-accent-foreground peer-data-[active=true]/menu-button:text-sidebar-accent-foreground",
        "peer-data-[size=sm]/menu-button:top-1",
        "peer-data-[size=default]/menu-button:top-1.5",
        "peer-data-[size=lg]/menu-button:top-2.5",
        "group-data-[collapsible=icon]:hidden",
        className
      )}
      {...props}
    /&gt;
  )
}

function SidebarMenuSkeleton({
  className,
  showIcon = false,
  ...props
}: React.ComponentProps&lt;"div"&gt; &amp; {
  showIcon?: boolean
}) {
  // Random width between 50 to 90%.
  const width = React.useMemo(() =&gt; {
    return `${Math.floor(Math.random() * 40) + 50}%`
  }, [])

  return (
    &lt;div
      data-slot="sidebar-menu-skeleton"
      data-sidebar="menu-skeleton"
      className={cn("flex h-8 items-center gap-2 rounded-md px-2", className)}
      {...props}
    &gt;
      {showIcon &amp;&amp; (
        &lt;Skeleton
          className="size-4 rounded-md"
          data-sidebar="menu-skeleton-icon"
        /&gt;
      )}
      &lt;Skeleton
        className="h-4 max-w-(--skeleton-width) flex-1"
        data-sidebar="menu-skeleton-text"
        style={
          {
            "--skeleton-width": width,
          } as React.CSSProperties
        }
      /&gt;
    &lt;/div&gt;
  )
}

function SidebarMenuSub({ className, ...props }: React.ComponentProps&lt;"ul"&gt;) {
  return (
    &lt;ul
      data-slot="sidebar-menu-sub"
      data-sidebar="menu-sub"
      className={cn(
        "border-sidebar-border mx-3.5 flex min-w-0 translate-x-px flex-col gap-1 border-l px-2.5 py-0.5",
        "group-data-[collapsible=icon]:hidden",
        className
      )}
      {...props}
    /&gt;
  )
}

function SidebarMenuSubItem({
  className,
  ...props
}: React.ComponentProps&lt;"li"&gt;) {
  return (
    &lt;li
      data-slot="sidebar-menu-sub-item"
      data-sidebar="menu-sub-item"
      className={cn("group/menu-sub-item relative", className)}
      {...props}
    /&gt;
  )
}

function SidebarMenuSubButton({
  asChild = false,
  size = "md",
  isActive = false,
  className,
  ...props
}: React.ComponentProps&lt;"a"&gt; &amp; {
  asChild?: boolean
  size?: "sm" | "md"
  isActive?: boolean
}) {
  const Comp = asChild ? Slot : "a"

  return (
    &lt;Comp
      data-slot="sidebar-menu-sub-button"
      data-sidebar="menu-sub-button"
      data-size={size}
      data-active={isActive}
      className={cn(
        "text-sidebar-foreground ring-sidebar-ring hover:bg-sidebar-accent hover:text-sidebar-accent-foreground active:bg-sidebar-accent active:text-sidebar-accent-foreground [&amp;&gt;svg]:text-sidebar-accent-foreground flex h-7 min-w-0 -translate-x-px items-center gap-2 overflow-hidden rounded-md px-2 outline-hidden focus-visible:ring-2 disabled:pointer-events-none disabled:opacity-50 aria-disabled:pointer-events-none aria-disabled:opacity-50 [&amp;&gt;span:last-child]:truncate [&amp;&gt;svg]:size-4 [&amp;&gt;svg]:shrink-0",
        "data-[active=true]:bg-sidebar-accent data-[active=true]:text-sidebar-accent-foreground",
        size === "sm" &amp;&amp; "text-xs",
        size === "md" &amp;&amp; "text-sm",
        "group-data-[collapsible=icon]:hidden",
        className
      )}
      {...props}
    /&gt;
  )
}

export {
  Sidebar,
  SidebarContent,
  SidebarFooter,
  SidebarGroup,
  SidebarGroupAction,
  SidebarGroupContent,
  SidebarGroupLabel,
  SidebarHeader,
  SidebarInput,
  SidebarInset,
  SidebarMenu,
  SidebarMenuAction,
  SidebarMenuBadge,
  SidebarMenuButton,
  SidebarMenuItem,
  SidebarMenuSkeleton,
  SidebarMenuSub,
  SidebarMenuSubButton,
  SidebarMenuSubItem,
  SidebarProvider,
  SidebarRail,
  SidebarSeparator,
  SidebarTrigger,
  useSidebar,
}</content>
    

  </file>
  <file>
    
  
    <path>resources/js/components/ui/skeleton.tsx</path>
    
  
    <content>import { cn } from "@/lib/utils"

function Skeleton({ className, ...props }: React.ComponentProps&lt;"div"&gt;) {
  return (
    &lt;div
      data-slot="skeleton"
      className={cn("bg-primary/10 animate-pulse rounded-md", className)}
      {...props}
    /&gt;
  )
}

export { Skeleton }</content>
    

  </file>
  <file>
    
  
    <path>resources/js/components/ui/toggle-group.tsx</path>
    
  
    <content>import * as React from "react"
import * as ToggleGroupPrimitive from "@radix-ui/react-toggle-group"
import { type VariantProps } from "class-variance-authority"

import { cn } from "@/lib/utils"
import { toggleVariants } from "@/components/ui/toggle"

const ToggleGroupContext = React.createContext&lt;
  VariantProps&lt;typeof toggleVariants&gt;
&gt;({
  size: "default",
  variant: "default",
})

function ToggleGroup({
  className,
  variant,
  size,
  children,
  ...props
}: React.ComponentProps&lt;typeof ToggleGroupPrimitive.Root&gt; &amp;
  VariantProps&lt;typeof toggleVariants&gt;) {
  return (
    &lt;ToggleGroupPrimitive.Root
      data-slot="toggle-group"
      data-variant={variant}
      data-size={size}
      className={cn(
        "group/toggle-group flex items-center rounded-md data-[variant=outline]:shadow-xs",
        className
      )}
      {...props}
    &gt;
      &lt;ToggleGroupContext.Provider value={{ variant, size }}&gt;
        {children}
      &lt;/ToggleGroupContext.Provider&gt;
    &lt;/ToggleGroupPrimitive.Root&gt;
  )
}

function ToggleGroupItem({
  className,
  children,
  variant,
  size,
  ...props
}: React.ComponentProps&lt;typeof ToggleGroupPrimitive.Item&gt; &amp;
  VariantProps&lt;typeof toggleVariants&gt;) {
  const context = React.useContext(ToggleGroupContext)

  return (
    &lt;ToggleGroupPrimitive.Item
      data-slot="toggle-group-item"
      data-variant={context.variant || variant}
      data-size={context.size || size}
      className={cn(
        toggleVariants({
          variant: context.variant || variant,
          size: context.size || size,
        }),
        "min-w-0 shrink-0 rounded-none shadow-none first:rounded-l-md last:rounded-r-md focus:z-10 focus-visible:z-10 data-[variant=outline]:border-l-0 data-[variant=outline]:first:border-l",
        className
      )}
      {...props}
    &gt;
      {children}
    &lt;/ToggleGroupPrimitive.Item&gt;
  )
}

export { ToggleGroup, ToggleGroupItem }</content>
    

  </file>
  <file>
    
  
    <path>resources/js/components/ui/toggle.tsx</path>
    
  
    <content>import * as React from "react"
import * as TogglePrimitive from "@radix-ui/react-toggle"
import { cva, type VariantProps } from "class-variance-authority"

import { cn } from "@/lib/utils"

const toggleVariants = cva(
  "inline-flex items-center justify-center gap-2 rounded-md text-sm font-medium hover:bg-muted hover:text-muted-foreground disabled:pointer-events-none disabled:opacity-50 data-[state=on]:bg-accent data-[state=on]:text-accent-foreground [&amp;_svg]:pointer-events-none [&amp;_svg:not([class*='size-'])]:size-4 [&amp;_svg]:shrink-0 focus-visible:border-ring focus-visible:ring-ring/50 focus-visible:ring-[3px] outline-none transition-[color,box-shadow] aria-invalid:ring-destructive/20 dark:aria-invalid:ring-destructive/40 aria-invalid:border-destructive",
  {
    variants: {
      variant: {
        default: "bg-transparent",
        outline:
          "border border-input bg-transparent shadow-xs hover:bg-accent hover:text-accent-foreground",
      },
      size: {
        default: "h-9 px-2 min-w-9",
        sm: "h-8 px-1.5 min-w-8",
        lg: "h-10 px-2.5 min-w-10",
      },
    },
    defaultVariants: {
      variant: "default",
      size: "default",
    },
  }
)

function Toggle({
  className,
  variant,
  size,
  ...props
}: React.ComponentProps&lt;typeof TogglePrimitive.Root&gt; &amp;
  VariantProps&lt;typeof toggleVariants&gt;) {
  return (
    &lt;TogglePrimitive.Root
      data-slot="toggle"
      className={cn(toggleVariants({ variant, size, className }))}
      {...props}
    /&gt;
  )
}

export { Toggle, toggleVariants }</content>
    

  </file>
  <file>
    
  
    <path>resources/js/components/ui/tooltip.tsx</path>
    
  
    <content>import * as React from "react"
import * as TooltipPrimitive from "@radix-ui/react-tooltip"

import { cn } from "@/lib/utils"

function TooltipProvider({
  delayDuration = 0,
  ...props
}: React.ComponentProps&lt;typeof TooltipPrimitive.Provider&gt;) {
  return (
    &lt;TooltipPrimitive.Provider
      data-slot="tooltip-provider"
      delayDuration={delayDuration}
      {...props}
    /&gt;
  )
}

function Tooltip({
  ...props
}: React.ComponentProps&lt;typeof TooltipPrimitive.Root&gt;) {
  return (
    &lt;TooltipProvider&gt;
      &lt;TooltipPrimitive.Root data-slot="tooltip" {...props} /&gt;
    &lt;/TooltipProvider&gt;
  )
}

function TooltipTrigger({
  ...props
}: React.ComponentProps&lt;typeof TooltipPrimitive.Trigger&gt;) {
  return &lt;TooltipPrimitive.Trigger data-slot="tooltip-trigger" {...props} /&gt;
}

function TooltipContent({
  className,
  sideOffset = 4,
  children,
  ...props
}: React.ComponentProps&lt;typeof TooltipPrimitive.Content&gt;) {
  return (
    &lt;TooltipPrimitive.Portal&gt;
      &lt;TooltipPrimitive.Content
        data-slot="tooltip-content"
        sideOffset={sideOffset}
        className={cn(
          "bg-primary text-primary-foreground animate-in fade-in-0 zoom-in-95 data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=closed]:zoom-out-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 z-50 max-w-sm rounded-md px-3 py-1.5 text-xs",
          className
        )}
        {...props}
      &gt;
        {children}
        &lt;TooltipPrimitive.Arrow className="bg-primary fill-primary z-50 size-2.5 translate-y-[calc(-50%_-_2px)] rotate-45 rounded-[2px]" /&gt;
      &lt;/TooltipPrimitive.Content&gt;
    &lt;/TooltipPrimitive.Portal&gt;
  )
}

export { Tooltip, TooltipTrigger, TooltipContent, TooltipProvider }</content>
    

  </file>
  <file>
    
  
    <path>resources/js/components/user-info.tsx</path>
    
  
    <content>import { Avatar, AvatarFallback, AvatarImage } from '@/components/ui/avatar';
import { useInitials } from '@/hooks/use-initials';
import { type User } from '@/types';

export function UserInfo({ user, showEmail = false }: { user: User; showEmail?: boolean }) {
    const getInitials = useInitials();

    return (
        &lt;&gt;
            &lt;Avatar className="h-8 w-8 overflow-hidden rounded-full"&gt;
                &lt;AvatarImage src={user.avatar} alt={user.name} /&gt;
                &lt;AvatarFallback className="rounded-lg bg-neutral-200 text-black dark:bg-neutral-700 dark:text-white"&gt;
                    {getInitials(user.name)}
                &lt;/AvatarFallback&gt;
            &lt;/Avatar&gt;
            &lt;div className="grid flex-1 text-left text-sm leading-tight"&gt;
                &lt;span className="truncate font-medium"&gt;{user.name}&lt;/span&gt;
                {showEmail &amp;&amp; &lt;span className="truncate text-xs text-muted-foreground"&gt;{user.email}&lt;/span&gt;}
            &lt;/div&gt;
        &lt;/&gt;
    );
}</content>
    

  </file>
  <file>
    
  
    <path>resources/js/components/user-menu-content.tsx</path>
    
  
    <content>import { DropdownMenuGroup, DropdownMenuItem, DropdownMenuLabel, DropdownMenuSeparator } from '@/components/ui/dropdown-menu';
import { UserInfo } from '@/components/user-info';
import { useMobileNavigation } from '@/hooks/use-mobile-navigation';
import { logout } from '@/routes';
import { edit } from '@/routes/profile';
import { type User } from '@/types';
import { Link, router } from '@inertiajs/react';
import { LogOut, Settings } from 'lucide-react';

interface UserMenuContentProps {
    user: User;
}

export function UserMenuContent({ user }: UserMenuContentProps) {
    const cleanup = useMobileNavigation();

    const handleLogout = () =&gt; {
        cleanup();
        router.flushAll();
    };

    return (
        &lt;&gt;
            &lt;DropdownMenuLabel className="p-0 font-normal"&gt;
                &lt;div className="flex items-center gap-2 px-1 py-1.5 text-left text-sm"&gt;
                    &lt;UserInfo user={user} showEmail={true} /&gt;
                &lt;/div&gt;
            &lt;/DropdownMenuLabel&gt;
            &lt;DropdownMenuSeparator /&gt;
            &lt;DropdownMenuGroup&gt;
                &lt;DropdownMenuItem asChild&gt;
                    &lt;Link className="block w-full" href={edit()} as="button" prefetch onClick={cleanup}&gt;
                        &lt;Settings className="mr-2" /&gt;
                        Settings
                    &lt;/Link&gt;
                &lt;/DropdownMenuItem&gt;
            &lt;/DropdownMenuGroup&gt;
            &lt;DropdownMenuSeparator /&gt;
            &lt;DropdownMenuItem asChild&gt;
                &lt;Link className="block w-full" href={logout()} as="button" onClick={handleLogout}&gt;
                    &lt;LogOut className="mr-2" /&gt;
                    Log out
                &lt;/Link&gt;
            &lt;/DropdownMenuItem&gt;
        &lt;/&gt;
    );
}</content>
    

  </file>
  <file>
    
  
    <path>resources/js/hooks/use-appearance.tsx</path>
    
  
    <content>import { useCallback, useEffect, useState } from 'react';

export type Appearance = 'light' | 'dark' | 'system';

const prefersDark = () =&gt; {
    if (typeof window === 'undefined') {
        return false;
    }

    return window.matchMedia('(prefers-color-scheme: dark)').matches;
};

const setCookie = (name: string, value: string, days = 365) =&gt; {
    if (typeof document === 'undefined') {
        return;
    }

    const maxAge = days * 24 * 60 * 60;
    document.cookie = `${name}=${value};path=/;max-age=${maxAge};SameSite=Lax`;
};

const applyTheme = (appearance: Appearance) =&gt; {
    const isDark = appearance === 'dark' || (appearance === 'system' &amp;&amp; prefersDark());

    document.documentElement.classList.toggle('dark', isDark);
    document.documentElement.style.colorScheme = isDark ? 'dark' : 'light';
};

const mediaQuery = () =&gt; {
    if (typeof window === 'undefined') {
        return null;
    }

    return window.matchMedia('(prefers-color-scheme: dark)');
};

const handleSystemThemeChange = () =&gt; {
    const currentAppearance = localStorage.getItem('appearance') as Appearance;
    applyTheme(currentAppearance || 'system');
};

export function initializeTheme() {
    const savedAppearance = (localStorage.getItem('appearance') as Appearance) || 'system';

    applyTheme(savedAppearance);

    // Add the event listener for system theme changes...
    mediaQuery()?.addEventListener('change', handleSystemThemeChange);
}

export function useAppearance() {
    const [appearance, setAppearance] = useState&lt;Appearance&gt;('system');

    const updateAppearance = useCallback((mode: Appearance) =&gt; {
        setAppearance(mode);

        // Store in localStorage for client-side persistence...
        localStorage.setItem('appearance', mode);

        // Store in cookie for SSR...
        setCookie('appearance', mode);

        applyTheme(mode);
    }, []);

    useEffect(() =&gt; {
        const savedAppearance = localStorage.getItem('appearance') as Appearance | null;
        updateAppearance(savedAppearance || 'system');

        return () =&gt; mediaQuery()?.removeEventListener('change', handleSystemThemeChange);
    }, [updateAppearance]);

    return { appearance, updateAppearance } as const;
}</content>
    

  </file>
  <file>
    
  
    <path>resources/js/hooks/use-initials.tsx</path>
    
  
    <content>import { useCallback } from 'react';

export function useInitials() {
    return useCallback((fullName: string): string =&gt; {
        const names = fullName.trim().split(' ');

        if (names.length === 0) return '';
        if (names.length === 1) return names[0].charAt(0).toUpperCase();

        const firstInitial = names[0].charAt(0);
        const lastInitial = names[names.length - 1].charAt(0);

        return `${firstInitial}${lastInitial}`.toUpperCase();
    }, []);
}</content>
    

  </file>
  <file>
    
  
    <path>resources/js/hooks/use-mobile-navigation.ts</path>
    
  
    <content>import { useCallback } from 'react';

export function useMobileNavigation() {
    return useCallback(() =&gt; {
        // Remove pointer-events style from body...
        document.body.style.removeProperty('pointer-events');
    }, []);
}</content>
    

  </file>
  <file>
    
  
    <path>resources/js/hooks/use-mobile.tsx</path>
    
  
    <content>import { useEffect, useState } from 'react';

const MOBILE_BREAKPOINT = 768;

export function useIsMobile() {
    const [isMobile, setIsMobile] = useState&lt;boolean&gt;();

    useEffect(() =&gt; {
        const mql = window.matchMedia(`(max-width: ${MOBILE_BREAKPOINT - 1}px)`);

        const onChange = () =&gt; {
            setIsMobile(window.innerWidth &lt; MOBILE_BREAKPOINT);
        };

        mql.addEventListener('change', onChange);
        setIsMobile(window.innerWidth &lt; MOBILE_BREAKPOINT);

        return () =&gt; mql.removeEventListener('change', onChange);
    }, []);

    return !!isMobile;
}</content>
    

  </file>
  <file>
    
  
    <path>resources/js/layouts/app/app-header-layout.tsx</path>
    
  
    <content>import { AppContent } from '@/components/app-content';
import { AppHeader } from '@/components/app-header';
import { AppShell } from '@/components/app-shell';
import { type BreadcrumbItem } from '@/types';
import type { PropsWithChildren } from 'react';

export default function AppHeaderLayout({ children, breadcrumbs }: PropsWithChildren&lt;{ breadcrumbs?: BreadcrumbItem[] }&gt;) {
    return (
        &lt;AppShell&gt;
            &lt;AppHeader breadcrumbs={breadcrumbs} /&gt;
            &lt;AppContent&gt;{children}&lt;/AppContent&gt;
        &lt;/AppShell&gt;
    );
}</content>
    

  </file>
  <file>
    
  
    <path>resources/js/layouts/app/app-sidebar-layout.tsx</path>
    
  
    <content>import { AppContent } from '@/components/app-content';
import { AppShell } from '@/components/app-shell';
import { AppSidebar } from '@/components/app-sidebar';
import { AppSidebarHeader } from '@/components/app-sidebar-header';
import { type BreadcrumbItem } from '@/types';
import { type PropsWithChildren } from 'react';

export default function AppSidebarLayout({ children, breadcrumbs = [] }: PropsWithChildren&lt;{ breadcrumbs?: BreadcrumbItem[] }&gt;) {
    return (
        &lt;AppShell variant="sidebar"&gt;
            &lt;AppSidebar /&gt;
            &lt;AppContent variant="sidebar" className="overflow-x-hidden"&gt;
                &lt;AppSidebarHeader breadcrumbs={breadcrumbs} /&gt;
                {children}
            &lt;/AppContent&gt;
        &lt;/AppShell&gt;
    );
}</content>
    

  </file>
  <file>
    
  
    <path>resources/js/layouts/app-layout.tsx</path>
    
  
    <content>import AppLayoutTemplate from '@/layouts/app/app-sidebar-layout';
import { type BreadcrumbItem } from '@/types';
import { type ReactNode } from 'react';

interface AppLayoutProps {
    children: ReactNode;
    breadcrumbs?: BreadcrumbItem[];
}

export default ({ children, breadcrumbs, ...props }: AppLayoutProps) =&gt; (
    &lt;AppLayoutTemplate breadcrumbs={breadcrumbs} {...props}&gt;
        {children}
    &lt;/AppLayoutTemplate&gt;
);</content>
    

  </file>
  <file>
    
  
    <path>resources/js/layouts/auth/auth-card-layout.tsx</path>
    
  
    <content>import AppLogoIcon from '@/components/app-logo-icon';
import { Card, CardContent, CardDescription, CardHeader, CardTitle } from '@/components/ui/card';
import { home } from '@/routes';
import { Link } from '@inertiajs/react';
import { type PropsWithChildren } from 'react';

export default function AuthCardLayout({
    children,
    title,
    description,
}: PropsWithChildren&lt;{
    name?: string;
    title?: string;
    description?: string;
}&gt;) {
    return (
        &lt;div className="flex min-h-svh flex-col items-center justify-center gap-6 bg-muted p-6 md:p-10"&gt;
            &lt;div className="flex w-full max-w-md flex-col gap-6"&gt;
                &lt;Link href={home()} className="flex items-center gap-2 self-center font-medium"&gt;
                    &lt;div className="flex h-9 w-9 items-center justify-center"&gt;
                        &lt;AppLogoIcon className="size-9 fill-current text-black dark:text-white" /&gt;
                    &lt;/div&gt;
                &lt;/Link&gt;

                &lt;div className="flex flex-col gap-6"&gt;
                    &lt;Card className="rounded-xl"&gt;
                        &lt;CardHeader className="px-10 pt-8 pb-0 text-center"&gt;
                            &lt;CardTitle className="text-xl"&gt;{title}&lt;/CardTitle&gt;
                            &lt;CardDescription&gt;{description}&lt;/CardDescription&gt;
                        &lt;/CardHeader&gt;
                        &lt;CardContent className="px-10 py-8"&gt;{children}&lt;/CardContent&gt;
                    &lt;/Card&gt;
                &lt;/div&gt;
            &lt;/div&gt;
        &lt;/div&gt;
    );
}</content>
    

  </file>
  <file>
    
  
    <path>resources/js/layouts/auth/auth-simple-layout.tsx</path>
    
  
    <content>import AppLogoIcon from '@/components/app-logo-icon';
import { home } from '@/routes';
import { Link } from '@inertiajs/react';
import { type PropsWithChildren } from 'react';

interface AuthLayoutProps {
    name?: string;
    title?: string;
    description?: string;
}

export default function AuthSimpleLayout({ children, title, description }: PropsWithChildren&lt;AuthLayoutProps&gt;) {
    return (
        &lt;div className="flex min-h-svh flex-col items-center justify-center gap-6 bg-background p-6 md:p-10"&gt;
            &lt;div className="w-full max-w-sm"&gt;
                &lt;div className="flex flex-col gap-8"&gt;
                    &lt;div className="flex flex-col items-center gap-4"&gt;
                        &lt;Link href={home()} className="flex flex-col items-center gap-2 font-medium"&gt;
                            &lt;div className="mb-1 flex h-9 w-9 items-center justify-center rounded-md"&gt;
                                &lt;AppLogoIcon className="size-9 fill-current text-[var(--foreground)] dark:text-white" /&gt;
                            &lt;/div&gt;
                            &lt;span className="sr-only"&gt;{title}&lt;/span&gt;
                        &lt;/Link&gt;

                        &lt;div className="space-y-2 text-center"&gt;
                            &lt;h1 className="text-xl font-medium"&gt;{title}&lt;/h1&gt;
                            &lt;p className="text-center text-sm text-muted-foreground"&gt;{description}&lt;/p&gt;
                        &lt;/div&gt;
                    &lt;/div&gt;
                    {children}
                &lt;/div&gt;
            &lt;/div&gt;
        &lt;/div&gt;
    );
}</content>
    

  </file>
  <file>
    
  
    <path>resources/js/layouts/auth/auth-split-layout.tsx</path>
    
  
    <content>import AppLogoIcon from '@/components/app-logo-icon';
import { home } from '@/routes';
import { type SharedData } from '@/types';
import { Link, usePage } from '@inertiajs/react';
import { type PropsWithChildren } from 'react';

interface AuthLayoutProps {
    title?: string;
    description?: string;
}

export default function AuthSplitLayout({ children, title, description }: PropsWithChildren&lt;AuthLayoutProps&gt;) {
    const { name, quote } = usePage&lt;SharedData&gt;().props;

    return (
        &lt;div className="relative grid h-dvh flex-col items-center justify-center px-8 sm:px-0 lg:max-w-none lg:grid-cols-2 lg:px-0"&gt;
            &lt;div className="relative hidden h-full flex-col bg-muted p-10 text-white lg:flex dark:border-r"&gt;
                &lt;div className="absolute inset-0 bg-zinc-900" /&gt;
                &lt;Link href={home()} className="relative z-20 flex items-center text-lg font-medium"&gt;
                    &lt;AppLogoIcon className="mr-2 size-8 fill-current text-white" /&gt;
                    {name}
                &lt;/Link&gt;
                {quote &amp;&amp; (
                    &lt;div className="relative z-20 mt-auto"&gt;
                        &lt;blockquote className="space-y-2"&gt;
                            &lt;p className="text-lg"&gt;&amp;ldquo;{quote.message}&amp;rdquo;&lt;/p&gt;
                            &lt;footer className="text-sm text-neutral-300"&gt;{quote.author}&lt;/footer&gt;
                        &lt;/blockquote&gt;
                    &lt;/div&gt;
                )}
            &lt;/div&gt;
            &lt;div className="w-full lg:p-8"&gt;
                &lt;div className="mx-auto flex w-full flex-col justify-center space-y-6 sm:w-[350px]"&gt;
                    &lt;Link href={home()} className="relative z-20 flex items-center justify-center lg:hidden"&gt;
                        &lt;AppLogoIcon className="h-10 fill-current text-black sm:h-12" /&gt;
                    &lt;/Link&gt;
                    &lt;div className="flex flex-col items-start gap-2 text-left sm:items-center sm:text-center"&gt;
                        &lt;h1 className="text-xl font-medium"&gt;{title}&lt;/h1&gt;
                        &lt;p className="text-sm text-balance text-muted-foreground"&gt;{description}&lt;/p&gt;
                    &lt;/div&gt;
                    {children}
                &lt;/div&gt;
            &lt;/div&gt;
        &lt;/div&gt;
    );
}</content>
    

  </file>
  <file>
    
  
    <path>resources/js/layouts/auth-layout.tsx</path>
    
  
    <content>import AuthLayoutTemplate from '@/layouts/auth/auth-simple-layout';

export default function AuthLayout({ children, title, description, ...props }: { children: React.ReactNode; title: string; description: string }) {
    return (
        &lt;AuthLayoutTemplate title={title} description={description} {...props}&gt;
            {children}
        &lt;/AuthLayoutTemplate&gt;
    );
}</content>
    

  </file>
  <file>
    
  
    <path>resources/js/pages/auth/login.tsx</path>
    
  
    <content>import AuthenticatedSessionController from '@/actions/App/Http/Controllers/Auth/AuthenticatedSessionController';
import InputError from '@/components/input-error';
import TextLink from '@/components/text-link';
import { Button } from '@/components/ui/button';
import { Checkbox } from '@/components/ui/checkbox';
import { Input } from '@/components/ui/input';
import { Label } from '@/components/ui/label';
import AuthLayout from '@/layouts/auth-layout';
import { register } from '@/routes';
import { request } from '@/routes/password';
import { Form, Head } from '@inertiajs/react';
import { LoaderCircle } from 'lucide-react';

interface LoginProps {
    status?: string;
    canResetPassword: boolean;
}

export default function Login({ status, canResetPassword }: LoginProps) {
    return (
        &lt;AuthLayout title="Log in to your account" description="Enter your email and password below to log in"&gt;
            &lt;Head title="Log in" /&gt;

            &lt;Form {...AuthenticatedSessionController.store.form()} resetOnSuccess={['password']} className="flex flex-col gap-6"&gt;
                {({ processing, errors }) =&gt; (
                    &lt;&gt;
                        &lt;div className="grid gap-6"&gt;
                            &lt;div className="grid gap-2"&gt;
                                &lt;Label htmlFor="email"&gt;Email address&lt;/Label&gt;
                                &lt;Input
                                    id="email"
                                    type="email"
                                    name="email"
                                    required
                                    autoFocus
                                    tabIndex={1}
                                    autoComplete="email"
                                    placeholder="email@example.com"
                                /&gt;
                                &lt;InputError message={errors.email} /&gt;
                            &lt;/div&gt;

                            &lt;div className="grid gap-2"&gt;
                                &lt;div className="flex items-center"&gt;
                                    &lt;Label htmlFor="password"&gt;Password&lt;/Label&gt;
                                    {canResetPassword &amp;&amp; (
                                        &lt;TextLink href={request()} className="ml-auto text-sm" tabIndex={5}&gt;
                                            Forgot password?
                                        &lt;/TextLink&gt;
                                    )}
                                &lt;/div&gt;
                                &lt;Input
                                    id="password"
                                    type="password"
                                    name="password"
                                    required
                                    tabIndex={2}
                                    autoComplete="current-password"
                                    placeholder="Password"
                                /&gt;
                                &lt;InputError message={errors.password} /&gt;
                            &lt;/div&gt;

                            &lt;div className="flex items-center space-x-3"&gt;
                                &lt;Checkbox id="remember" name="remember" tabIndex={3} /&gt;
                                &lt;Label htmlFor="remember"&gt;Remember me&lt;/Label&gt;
                            &lt;/div&gt;

                            &lt;Button type="submit" className="mt-4 w-full" tabIndex={4} disabled={processing}&gt;
                                {processing &amp;&amp; &lt;LoaderCircle className="h-4 w-4 animate-spin" /&gt;}
                                Log in
                            &lt;/Button&gt;
                        &lt;/div&gt;

                        &lt;div className="text-center text-sm text-muted-foreground"&gt;
                            Don't have an account?{' '}
                            &lt;TextLink href={register()} tabIndex={5}&gt;
                                Sign up
                            &lt;/TextLink&gt;
                        &lt;/div&gt;
                    &lt;/&gt;
                )}
            &lt;/Form&gt;

            {status &amp;&amp; &lt;div className="mb-4 text-center text-sm font-medium text-green-600"&gt;{status}&lt;/div&gt;}
        &lt;/AuthLayout&gt;
    );
}</content>
    

  </file>
  <file>
    
  
    <path>resources/js/pages/auth/verify-email.tsx</path>
    
  
    <content>// Components
import EmailVerificationNotificationController from '@/actions/App/Http/Controllers/Auth/EmailVerificationNotificationController';
import { logout } from '@/routes';
import { Form, Head } from '@inertiajs/react';
import { LoaderCircle } from 'lucide-react';

import TextLink from '@/components/text-link';
import { Button } from '@/components/ui/button';
import AuthLayout from '@/layouts/auth-layout';

export default function VerifyEmail({ status }: { status?: string }) {
    return (
        &lt;AuthLayout title="Verify email" description="Please verify your email address by clicking on the link we just emailed to you."&gt;
            &lt;Head title="Email verification" /&gt;

            {status === 'verification-link-sent' &amp;&amp; (
                &lt;div className="mb-4 text-center text-sm font-medium text-green-600"&gt;
                    A new verification link has been sent to the email address you provided during registration.
                &lt;/div&gt;
            )}

            &lt;Form {...EmailVerificationNotificationController.store.form()} className="space-y-6 text-center"&gt;
                {({ processing }) =&gt; (
                    &lt;&gt;
                        &lt;Button disabled={processing} variant="secondary"&gt;
                            {processing &amp;&amp; &lt;LoaderCircle className="h-4 w-4 animate-spin" /&gt;}
                            Resend verification email
                        &lt;/Button&gt;

                        &lt;TextLink href={logout()} className="mx-auto block text-sm"&gt;
                            Log out
                        &lt;/TextLink&gt;
                    &lt;/&gt;
                )}
            &lt;/Form&gt;
        &lt;/AuthLayout&gt;
    );
}</content>
    

  </file>
  <file>
    
  
    <path>resources/js/pages/dashboard.tsx</path>
    
  
    <content>import { PlaceholderPattern } from '@/components/ui/placeholder-pattern';
import AppLayout from '@/layouts/app-layout';
import { dashboard } from '@/routes';
import { type BreadcrumbItem } from '@/types';
import { Head } from '@inertiajs/react';

const breadcrumbs: BreadcrumbItem[] = [
    {
        title: 'Dashboard',
        href: dashboard().url,
    },
];

export default function Dashboard() {
    return (
        &lt;AppLayout breadcrumbs={breadcrumbs}&gt;
            &lt;Head title="Dashboard" /&gt;
            &lt;div className="flex h-full flex-1 flex-col gap-4 overflow-x-auto rounded-xl p-4"&gt;
                &lt;div className="grid auto-rows-min gap-4 md:grid-cols-3"&gt;
                    &lt;div className="relative aspect-video overflow-hidden rounded-xl border border-sidebar-border/70 dark:border-sidebar-border"&gt;
                        &lt;PlaceholderPattern className="absolute inset-0 size-full stroke-neutral-900/20 dark:stroke-neutral-100/20" /&gt;
                    &lt;/div&gt;
                    &lt;div className="relative aspect-video overflow-hidden rounded-xl border border-sidebar-border/70 dark:border-sidebar-border"&gt;
                        &lt;PlaceholderPattern className="absolute inset-0 size-full stroke-neutral-900/20 dark:stroke-neutral-100/20" /&gt;
                    &lt;/div&gt;
                    &lt;div className="relative aspect-video overflow-hidden rounded-xl border border-sidebar-border/70 dark:border-sidebar-border"&gt;
                        &lt;PlaceholderPattern className="absolute inset-0 size-full stroke-neutral-900/20 dark:stroke-neutral-100/20" /&gt;
                    &lt;/div&gt;
                &lt;/div&gt;
                &lt;div className="relative min-h-[100vh] flex-1 overflow-hidden rounded-xl border border-sidebar-border/70 md:min-h-min dark:border-sidebar-border"&gt;
                    &lt;PlaceholderPattern className="absolute inset-0 size-full stroke-neutral-900/20 dark:stroke-neutral-100/20" /&gt;
                &lt;/div&gt;
            &lt;/div&gt;
        &lt;/AppLayout&gt;
    );
}</content>
    

  </file>
  <file>
    
  
    <path>resources/js/pages/settings/appearance.tsx</path>
    
  
    <content>import { Head } from '@inertiajs/react';

import AppearanceTabs from '@/components/appearance-tabs';
import HeadingSmall from '@/components/heading-small';
import { type BreadcrumbItem } from '@/types';

import AppLayout from '@/layouts/app-layout';
import SettingsLayout from '@/layouts/settings/layout';
import { appearance } from '@/routes';

const breadcrumbs: BreadcrumbItem[] = [
    {
        title: 'Appearance settings',
        href: appearance().url,
    },
];

export default function Appearance() {
    return (
        &lt;AppLayout breadcrumbs={breadcrumbs}&gt;
            &lt;Head title="Appearance settings" /&gt;

            &lt;SettingsLayout&gt;
                &lt;div className="space-y-6"&gt;
                    &lt;HeadingSmall title="Appearance settings" description="Update your account's appearance settings" /&gt;
                    &lt;AppearanceTabs /&gt;
                &lt;/div&gt;
            &lt;/SettingsLayout&gt;
        &lt;/AppLayout&gt;
    );
}</content>
    

  </file>
  <file>
    
  
    <path>resources/js/pages/settings/profile.tsx</path>
    
  
    <content>import ProfileController from '@/actions/App/Http/Controllers/Settings/ProfileController';
import { send } from '@/routes/verification';
import { type BreadcrumbItem, type SharedData } from '@/types';
import { Transition } from '@headlessui/react';
import { Form, Head, Link, usePage } from '@inertiajs/react';

import DeleteUser from '@/components/delete-user';
import HeadingSmall from '@/components/heading-small';
import InputError from '@/components/input-error';
import { Button } from '@/components/ui/button';
import { Input } from '@/components/ui/input';
import { Label } from '@/components/ui/label';
import AppLayout from '@/layouts/app-layout';
import SettingsLayout from '@/layouts/settings/layout';
import { edit } from '@/routes/profile';

const breadcrumbs: BreadcrumbItem[] = [
    {
        title: 'Profile settings',
        href: edit().url,
    },
];

export default function Profile({ mustVerifyEmail, status }: { mustVerifyEmail: boolean; status?: string }) {
    const { auth } = usePage&lt;SharedData&gt;().props;

    return (
        &lt;AppLayout breadcrumbs={breadcrumbs}&gt;
            &lt;Head title="Profile settings" /&gt;

            &lt;SettingsLayout&gt;
                &lt;div className="space-y-6"&gt;
                    &lt;HeadingSmall title="Profile information" description="Update your name and email address" /&gt;

                    &lt;Form
                        {...ProfileController.update.form()}
                        options={{
                            preserveScroll: true,
                        }}
                        className="space-y-6"
                    &gt;
                        {({ processing, recentlySuccessful, errors }) =&gt; (
                            &lt;&gt;
                                &lt;div className="grid gap-2"&gt;
                                    &lt;Label htmlFor="name"&gt;Name&lt;/Label&gt;

                                    &lt;Input
                                        id="name"
                                        className="mt-1 block w-full"
                                        defaultValue={auth.user.name}
                                        name="name"
                                        required
                                        autoComplete="name"
                                        placeholder="Full name"
                                    /&gt;

                                    &lt;InputError className="mt-2" message={errors.name} /&gt;
                                &lt;/div&gt;

                                &lt;div className="grid gap-2"&gt;
                                    &lt;Label htmlFor="email"&gt;Email address&lt;/Label&gt;

                                    &lt;Input
                                        id="email"
                                        type="email"
                                        className="mt-1 block w-full"
                                        defaultValue={auth.user.email}
                                        name="email"
                                        required
                                        autoComplete="username"
                                        placeholder="Email address"
                                    /&gt;

                                    &lt;InputError className="mt-2" message={errors.email} /&gt;
                                &lt;/div&gt;

                                {mustVerifyEmail &amp;&amp; auth.user.email_verified_at === null &amp;&amp; (
                                    &lt;div&gt;
                                        &lt;p className="-mt-4 text-sm text-muted-foreground"&gt;
                                            Your email address is unverified.{' '}
                                            &lt;Link
                                                href={send()}
                                                as="button"
                                                className="text-foreground underline decoration-neutral-300 underline-offset-4 transition-colors duration-300 ease-out hover:decoration-current! dark:decoration-neutral-500"
                                            &gt;
                                                Click here to resend the verification email.
                                            &lt;/Link&gt;
                                        &lt;/p&gt;

                                        {status === 'verification-link-sent' &amp;&amp; (
                                            &lt;div className="mt-2 text-sm font-medium text-green-600"&gt;
                                                A new verification link has been sent to your email address.
                                            &lt;/div&gt;
                                        )}
                                    &lt;/div&gt;
                                )}

                                &lt;div className="flex items-center gap-4"&gt;
                                    &lt;Button disabled={processing}&gt;Save&lt;/Button&gt;

                                    &lt;Transition
                                        show={recentlySuccessful}
                                        enter="transition ease-in-out"
                                        enterFrom="opacity-0"
                                        leave="transition ease-in-out"
                                        leaveTo="opacity-0"
                                    &gt;
                                        &lt;p className="text-sm text-neutral-600"&gt;Saved&lt;/p&gt;
                                    &lt;/Transition&gt;
                                &lt;/div&gt;
                            &lt;/&gt;
                        )}
                    &lt;/Form&gt;
                &lt;/div&gt;

                &lt;DeleteUser /&gt;
            &lt;/SettingsLayout&gt;
        &lt;/AppLayout&gt;
    );
}</content>
    

  </file>
  <file>
    
  
    <path>resources/js/pages/welcome.tsx</path>
    
  
    <content>import { dashboard, login, register } from '@/routes';
import { type SharedData } from '@/types';
import { Head, Link, usePage } from '@inertiajs/react';

export default function Welcome() {
    const { auth } = usePage&lt;SharedData&gt;().props;

    return (
        &lt;&gt;
            &lt;Head title="Welcome"&gt;
                &lt;link rel="preconnect" href="https://fonts.bunny.net" /&gt;
                &lt;link href="https://fonts.bunny.net/css?family=instrument-sans:400,500,600" rel="stylesheet" /&gt;
            &lt;/Head&gt;
            &lt;div className="flex min-h-screen flex-col items-center bg-[#FDFDFC] p-6 text-[#1b1b18] lg:justify-center lg:p-8 dark:bg-[#0a0a0a]"&gt;
                &lt;header className="mb-6 w-full max-w-[335px] text-sm not-has-[nav]:hidden lg:max-w-4xl"&gt;
                    &lt;nav className="flex items-center justify-end gap-4"&gt;
                        {auth.user ? (
                            &lt;Link
                                href={dashboard()}
                                className="inline-block rounded-sm border border-[#19140035] px-5 py-1.5 text-sm leading-normal text-[#1b1b18] hover:border-[#1915014a] dark:border-[#3E3E3A] dark:text-[#EDEDEC] dark:hover:border-[#62605b]"
                            &gt;
                                Dashboard
                            &lt;/Link&gt;
                        ) : (
                            &lt;&gt;
                                &lt;Link
                                    href={login()}
                                    className="inline-block rounded-sm border border-transparent px-5 py-1.5 text-sm leading-normal text-[#1b1b18] hover:border-[#19140035] dark:text-[#EDEDEC] dark:hover:border-[#3E3E3A]"
                                &gt;
                                    Log in
                                &lt;/Link&gt;
                                &lt;Link
                                    href={register()}
                                    className="inline-block rounded-sm border border-[#19140035] px-5 py-1.5 text-sm leading-normal text-[#1b1b18] hover:border-[#1915014a] dark:border-[#3E3E3A] dark:text-[#EDEDEC] dark:hover:border-[#62605b]"
                                &gt;
                                    Register
                                &lt;/Link&gt;
                            &lt;/&gt;
                        )}
                    &lt;/nav&gt;
                &lt;/header&gt;
                &lt;div className="flex w-full items-center justify-center opacity-100 transition-opacity duration-750 lg:grow starting:opacity-0"&gt;
                    &lt;main className="flex w-full max-w-[335px] flex-col-reverse lg:max-w-4xl lg:flex-row"&gt;
                        &lt;div className="flex-1 rounded-br-lg rounded-bl-lg bg-white p-6 pb-12 text-[13px] leading-[20px] shadow-[inset_0px_0px_0px_1px_rgba(26,26,0,0.16)] lg:rounded-tl-lg lg:rounded-br-none lg:p-20 dark:bg-[#161615] dark:text-[#EDEDEC] dark:shadow-[inset_0px_0px_0px_1px_#fffaed2d]"&gt;
                            &lt;h1 className="mb-1 font-medium"&gt;Let's get started&lt;/h1&gt;
                            &lt;p className="mb-2 text-[#706f6c] dark:text-[#A1A09A]"&gt;
                                Laravel has an incredibly rich ecosystem.
                                &lt;br /&gt;
                                We suggest starting with the following.
                            &lt;/p&gt;
                            &lt;ul className="mb-4 flex flex-col lg:mb-6"&gt;
                                &lt;li className="relative flex items-center gap-4 py-2 before:absolute before:top-1/2 before:bottom-0 before:left-[0.4rem] before:border-l before:border-[#e3e3e0] dark:before:border-[#3E3E3A]"&gt;
                                    &lt;span className="relative bg-white py-1 dark:bg-[#161615]"&gt;
                                        &lt;span className="flex h-3.5 w-3.5 items-center justify-center rounded-full border border-[#e3e3e0] bg-[#FDFDFC] shadow-[0px_0px_1px_0px_rgba(0,0,0,0.03),0px_1px_2px_0px_rgba(0,0,0,0.06)] dark:border-[#3E3E3A] dark:bg-[#161615]"&gt;
                                            &lt;span className="h-1.5 w-1.5 rounded-full bg-[#dbdbd7] dark:bg-[#3E3E3A]" /&gt;
                                        &lt;/span&gt;
                                    &lt;/span&gt;
                                    &lt;span&gt;
                                        Read the
                                        &lt;a
                                            href="https://laravel.com/docs"
                                            target="_blank"
                                            className="ml-1 inline-flex items-center space-x-1 font-medium text-[#f53003] underline underline-offset-4 dark:text-[#FF4433]"
                                        &gt;
                                            &lt;span&gt;Documentation&lt;/span&gt;
                                            &lt;svg
                                                width={10}
                                                height={11}
                                                viewBox="0 0 10 11"
                                                fill="none"
                                                xmlns="http://www.w3.org/2000/svg"
                                                className="h-2.5 w-2.5"
                                            &gt;
                                                &lt;path
                                                    d="M7.70833 6.95834V2.79167H3.54167M2.5 8L7.5 3.00001"
                                                    stroke="currentColor"
                                                    strokeLinecap="square"
                                                /&gt;
                                            &lt;/svg&gt;
                                        &lt;/a&gt;
                                    &lt;/span&gt;
                                &lt;/li&gt;
                                &lt;li className="relative flex items-center gap-4 py-2 before:absolute before:top-0 before:bottom-1/2 before:left-[0.4rem] before:border-l before:border-[#e3e3e0] dark:before:border-[#3E3E3A]"&gt;
                                    &lt;span className="relative bg-white py-1 dark:bg-[#161615]"&gt;
                                        &lt;span className="flex h-3.5 w-3.5 items-center justify-center rounded-full border border-[#e3e3e0] bg-[#FDFDFC] shadow-[0px_0px_1px_0px_rgba(0,0,0,0.03),0px_1px_2px_0px_rgba(0,0,0,0.06)] dark:border-[#3E3E3A] dark:bg-[#161615]"&gt;
                                            &lt;span className="h-1.5 w-1.5 rounded-full bg-[#dbdbd7] dark:bg-[#3E3E3A]" /&gt;
                                        &lt;/span&gt;
                                    &lt;/span&gt;
                                    &lt;span&gt;
                                        Watch video tutorials at
                                        &lt;a
                                            href="https://laracasts.com"
                                            target="_blank"
                                            className="ml-1 inline-flex items-center space-x-1 font-medium text-[#f53003] underline underline-offset-4 dark:text-[#FF4433]"
                                        &gt;
                                            &lt;span&gt;Laracasts&lt;/span&gt;
                                            &lt;svg
                                                width={10}
                                                height={11}
                                                viewBox="0 0 10 11"
                                                fill="none"
                                                xmlns="http://www.w3.org/2000/svg"
                                                className="h-2.5 w-2.5"
                                            &gt;
                                                &lt;path
                                                    d="M7.70833 6.95834V2.79167H3.54167M2.5 8L7.5 3.00001"
                                                    stroke="currentColor"
                                                    strokeLinecap="square"
                                                /&gt;
                                            &lt;/svg&gt;
                                        &lt;/a&gt;
                                    &lt;/span&gt;
                                &lt;/li&gt;
                            &lt;/ul&gt;
                            &lt;ul className="flex gap-3 text-sm leading-normal"&gt;
                                &lt;li&gt;
                                    &lt;a
                                        href="https://cloud.laravel.com"
                                        target="_blank"
                                        className="inline-block rounded-sm border border-black bg-[#1b1b18] px-5 py-1.5 text-sm leading-normal text-white hover:border-black hover:bg-black dark:border-[#eeeeec] dark:bg-[#eeeeec] dark:text-[#1C1C1A] dark:hover:border-white dark:hover:bg-white"
                                    &gt;
                                        Deploy now
                                    &lt;/a&gt;
                                &lt;/li&gt;
                            &lt;/ul&gt;
                        &lt;/div&gt;
                        &lt;div className="relative -mb-px aspect-[335/376] w-full shrink-0 overflow-hidden rounded-t-lg bg-[#fff2f2] lg:mb-0 lg:-ml-px lg:aspect-auto lg:w-[438px] lg:rounded-t-none lg:rounded-r-lg dark:bg-[#1D0002]"&gt;
                            &lt;svg
                                className="w-full max-w-none translate-y-0 text-[#F53003] opacity-100 transition-all duration-750 dark:text-[#F61500] starting:translate-y-6 starting:opacity-0"
                                viewBox="0 0 438 104"
                                fill="none"
                                xmlns="http://www.w3.org/2000/svg"
                            &gt;
                                &lt;path d="M17.2036 -3H0V102.197H49.5189V86.7187H17.2036V-3Z" fill="currentColor" /&gt;
                                &lt;path
                                    d="M110.256 41.6337C108.061 38.1275 104.945 35.3731 100.905 33.3681C96.8667 31.3647 92.8016 30.3618 88.7131 30.3618C83.4247 30.3618 78.5885 31.3389 74.201 33.2923C69.8111 35.2456 66.0474 37.928 62.9059 41.3333C59.7643 44.7401 57.3198 48.6726 55.5754 53.1293C53.8287 57.589 52.9572 62.274 52.9572 67.1813C52.9572 72.1925 53.8287 76.8995 55.5754 81.3069C57.3191 85.7173 59.7636 89.6241 62.9059 93.0293C66.0474 96.4361 69.8119 99.1155 74.201 101.069C78.5885 103.022 83.4247 103.999 88.7131 103.999C92.8016 103.999 96.8667 102.997 100.905 100.994C104.945 98.9911 108.061 96.2359 110.256 92.7282V102.195H126.563V32.1642H110.256V41.6337ZM108.76 75.7472C107.762 78.4531 106.366 80.8078 104.572 82.8112C102.776 84.8161 100.606 86.4183 98.0637 87.6206C95.5202 88.823 92.7004 89.4238 89.6103 89.4238C86.5178 89.4238 83.7252 88.823 81.2324 87.6206C78.7388 86.4183 76.5949 84.8161 74.7998 82.8112C73.004 80.8078 71.6319 78.4531 70.6856 75.7472C69.7356 73.0421 69.2644 70.1868 69.2644 67.1821C69.2644 64.1758 69.7356 61.3205 70.6856 58.6154C71.6319 55.9102 73.004 53.5571 74.7998 51.5522C76.5949 49.5495 78.738 47.9451 81.2324 46.7427C83.7252 45.5404 86.5178 44.9396 89.6103 44.9396C92.7012 44.9396 95.5202 45.5404 98.0637 46.7427C100.606 47.9451 102.776 49.5487 104.572 51.5522C106.367 53.5571 107.762 55.9102 108.76 58.6154C109.756 61.3205 110.256 64.1758 110.256 67.1821C110.256 70.1868 109.756 73.0421 108.76 75.7472Z"
                                    fill="currentColor"
                                /&gt;
                                &lt;path
                                    d="M242.805 41.6337C240.611 38.1275 237.494 35.3731 233.455 33.3681C229.416 31.3647 225.351 30.3618 221.262 30.3618C215.974 30.3618 211.138 31.3389 206.75 33.2923C202.36 35.2456 198.597 37.928 195.455 41.3333C192.314 44.7401 189.869 48.6726 188.125 53.1293C186.378 57.589 185.507 62.274 185.507 67.1813C185.507 72.1925 186.378 76.8995 188.125 81.3069C189.868 85.7173 192.313 89.6241 195.455 93.0293C198.597 96.4361 202.361 99.1155 206.75 101.069C211.138 103.022 215.974 103.999 221.262 103.999C225.351 103.999 229.416 102.997 233.455 100.994C237.494 98.9911 240.611 96.2359 242.805 92.7282V102.195H259.112V32.1642H242.805V41.6337ZM241.31 75.7472C240.312 78.4531 238.916 80.8078 237.122 82.8112C235.326 84.8161 233.156 86.4183 230.614 87.6206C228.07 88.823 225.251 89.4238 222.16 89.4238C219.068 89.4238 216.275 88.823 213.782 87.6206C211.289 86.4183 209.145 84.8161 207.35 82.8112C205.554 80.8078 204.182 78.4531 203.236 75.7472C202.286 73.0421 201.814 70.1868 201.814 67.1821C201.814 64.1758 202.286 61.3205 203.236 58.6154C204.182 55.9102 205.554 53.5571 207.35 51.5522C209.145 49.5495 211.288 47.9451 213.782 46.7427C216.275 45.5404 219.068 44.9396 222.16 44.9396C225.251 44.9396 228.07 45.5404 230.614 46.7427C233.156 47.9451 235.326 49.5487 237.122 51.5522C238.917 53.5571 240.312 55.9102 241.31 58.6154C242.306 61.3205 242.806 64.1758 242.806 67.1821C242.805 70.1868 242.305 73.0421 241.31 75.7472Z"
                                    fill="currentColor"
                                /&gt;
                                &lt;path d="M438 -3H421.694V102.197H438V-3Z" fill="currentColor" /&gt;
                                &lt;path d="M139.43 102.197H155.735V48.2834H183.712V32.1665H139.43V102.197Z" fill="currentColor" /&gt;
                                &lt;path
                                    d="M324.49 32.1665L303.995 85.794L283.498 32.1665H266.983L293.748 102.197H314.242L341.006 32.1665H324.49Z"
                                    fill="currentColor"
                                /&gt;
                                &lt;path
                                    d="M376.571 30.3656C356.603 30.3656 340.797 46.8497 340.797 67.1828C340.797 89.6597 356.094 104 378.661 104C391.29 104 399.354 99.1488 409.206 88.5848L398.189 80.0226C398.183 80.031 389.874 90.9895 377.468 90.9895C363.048 90.9895 356.977 79.3111 356.977 73.269H411.075C413.917 50.1328 398.775 30.3656 376.571 30.3656ZM357.02 61.0967C357.145 59.7487 359.023 43.3761 376.442 43.3761C393.861 43.3761 395.978 59.7464 396.099 61.0967H357.02Z"
                                    fill="currentColor"
                                /&gt;
                            &lt;/svg&gt;
                            &lt;svg
                                className="relative -mt-[4.9rem] -ml-8 w-[448px] max-w-none lg:-mt-[6.6rem] lg:ml-0 dark:hidden"
                                viewBox="0 0 440 376"
                                fill="none"
                                xmlns="http://www.w3.org/2000/svg"
                            &gt;
                                &lt;g className="translate-y-0 opacity-100 transition-all delay-300 duration-750 starting:translate-y-4 starting:opacity-0"&gt;
                                    &lt;path
                                        d="M188.263 355.73L188.595 355.73C195.441 348.845 205.766 339.761 219.569 328.477C232.93 317.193 242.978 308.205 249.714 301.511C256.34 294.626 260.867 287.358 263.296 279.708C265.725 272.058 264.565 264.121 259.816 255.896C254.516 246.716 247.062 239.352 237.454 233.805C227.957 228.067 217.908 225.198 207.307 225.198C196.927 225.197 190.136 227.97 186.934 233.516C183.621 238.872 184.726 246.331 190.247 255.894L125.647 255.891C116.371 239.825 112.395 225.481 113.72 212.858C115.265 200.235 121.559 190.481 132.602 183.596C143.754 176.52 158.607 172.982 177.159 172.983C196.594 172.984 215.863 176.523 234.968 183.6C253.961 190.486 271.299 200.241 286.98 212.864C302.661 225.488 315.14 239.833 324.416 255.899C333.03 270.817 336.841 283.918 335.847 295.203C335.075 306.487 331.376 316.336 324.75 324.751C318.346 333.167 308.408 343.494 294.936 355.734L377.094 355.737L405.917 405.656L217.087 405.649L188.263 355.73Z"
                                        fill="black"
                                    /&gt;
                                    &lt;path
                                        d="M9.11884 226.339L-13.7396 226.338L-42.7286 176.132L43.0733 176.135L175.595 405.649L112.651 405.647L9.11884 226.339Z"
                                        fill="black"
                                    /&gt;
                                    &lt;path
                                        d="M188.263 355.73L188.595 355.73C195.441 348.845 205.766 339.761 219.569 328.477C232.93 317.193 242.978 308.205 249.714 301.511C256.34 294.626 260.867 287.358 263.296 279.708C265.725 272.058 264.565 264.121 259.816 255.896C254.516 246.716 247.062 239.352 237.454 233.805C227.957 228.067 217.908 225.198 207.307 225.198C196.927 225.197 190.136 227.97 186.934 233.516C183.621 238.872 184.726 246.331 190.247 255.894L125.647 255.891C116.371 239.825 112.395 225.481 113.72 212.858C115.265 200.235 121.559 190.481 132.602 183.596C143.754 176.52 158.607 172.982 177.159 172.983C196.594 172.984 215.863 176.523 234.968 183.6C253.961 190.486 271.299 200.241 286.98 212.864C302.661 225.488 315.14 239.833 324.416 255.899C333.03 270.817 336.841 283.918 335.847 295.203C335.075 306.487 331.376 316.336 324.75 324.751C318.346 333.167 308.408 343.494 294.936 355.734L377.094 355.737L405.917 405.656L217.087 405.649L188.263 355.73Z"
                                        stroke="#1B1B18"
                                        strokeWidth={1}
                                    /&gt;
                                    &lt;path
                                        d="M9.11884 226.339L-13.7396 226.338L-42.7286 176.132L43.0733 176.135L175.595 405.649L112.651 405.647L9.11884 226.339Z"
                                        stroke="#1B1B18"
                                        strokeWidth={1}
                                    /&gt;
                                    &lt;path
                                        d="M204.592 327.449L204.923 327.449C211.769 320.564 222.094 311.479 235.897 300.196C249.258 288.912 259.306 279.923 266.042 273.23C272.668 266.345 277.195 259.077 279.624 251.427C282.053 243.777 280.893 235.839 276.145 227.615C270.844 218.435 263.39 211.071 253.782 205.524C244.285 199.786 234.236 196.917 223.635 196.916C213.255 196.916 206.464 199.689 203.262 205.235C199.949 210.59 201.054 218.049 206.575 227.612L141.975 227.61C132.699 211.544 128.723 197.2 130.048 184.577C131.593 171.954 137.887 162.2 148.93 155.315C160.083 148.239 174.935 144.701 193.487 144.702C212.922 144.703 232.192 148.242 251.296 155.319C270.289 162.205 287.627 171.96 303.308 184.583C318.989 197.207 331.468 211.552 340.745 227.618C349.358 242.536 353.169 255.637 352.175 266.921C351.403 278.205 347.704 288.055 341.078 296.47C334.674 304.885 324.736 315.213 311.264 327.453L393.422 327.456L422.246 377.375L233.415 377.368L204.592 327.449Z"
                                        fill="#F8B803"
                                    /&gt;
                                    &lt;path
                                        d="M25.447 198.058L2.58852 198.057L-26.4005 147.851L59.4015 147.854L191.923 377.368L128.979 377.365L25.447 198.058Z"
                                        fill="#F8B803"
                                    /&gt;
                                    &lt;path
                                        d="M204.592 327.449L204.923 327.449C211.769 320.564 222.094 311.479 235.897 300.196C249.258 288.912 259.306 279.923 266.042 273.23C272.668 266.345 277.195 259.077 279.624 251.427C282.053 243.777 280.893 235.839 276.145 227.615C270.844 218.435 263.39 211.071 253.782 205.524C244.285 199.786 234.236 196.917 223.635 196.916C213.255 196.916 206.464 199.689 203.262 205.235C199.949 210.59 201.054 218.049 206.575 227.612L141.975 227.61C132.699 211.544 128.723 197.2 130.048 184.577C131.593 171.954 137.887 162.2 148.93 155.315C160.083 148.239 174.935 144.701 193.487 144.702C212.922 144.703 232.192 148.242 251.296 155.319C270.289 162.205 287.627 171.96 303.308 184.583C318.989 197.207 331.468 211.552 340.745 227.618C349.358 242.536 353.169 255.637 352.175 266.921C351.403 278.205 347.704 288.055 341.078 296.47C334.674 304.885 324.736 315.213 311.264 327.453L393.422 327.456L422.246 377.375L233.415 377.368L204.592 327.449Z"
                                        stroke="#1B1B18"
                                        strokeWidth={1}
                                    /&gt;
                                    &lt;path
                                        d="M25.447 198.058L2.58852 198.057L-26.4005 147.851L59.4015 147.854L191.923 377.368L128.979 377.365L25.447 198.058Z"
                                        stroke="#1B1B18"
                                        strokeWidth={1}
                                    /&gt;
                                &lt;/g&gt;
                                &lt;g
                                    style={{ mixBlendMode: 'hard-light' }}
                                    className="translate-y-0 opacity-100 transition-all delay-300 duration-750 starting:translate-y-4 starting:opacity-0"
                                &gt;
                                    &lt;path
                                        d="M217.342 305.363L217.673 305.363C224.519 298.478 234.844 289.393 248.647 278.11C262.008 266.826 272.056 257.837 278.792 251.144C285.418 244.259 289.945 236.991 292.374 229.341C294.803 221.691 293.643 213.753 288.895 205.529C283.594 196.349 276.14 188.985 266.532 183.438C257.035 177.7 246.986 174.831 236.385 174.83C226.005 174.83 219.214 177.603 216.012 183.149C212.699 188.504 213.804 195.963 219.325 205.527L154.725 205.524C145.449 189.458 141.473 175.114 142.798 162.491C144.343 149.868 150.637 140.114 161.68 133.229C172.833 126.153 187.685 122.615 206.237 122.616C225.672 122.617 244.942 126.156 264.046 133.233C283.039 140.119 300.377 149.874 316.058 162.497C331.739 175.121 344.218 189.466 353.495 205.532C362.108 220.45 365.919 233.551 364.925 244.835C364.153 256.12 360.454 265.969 353.828 274.384C347.424 282.799 337.486 293.127 324.014 305.367L406.172 305.37L434.996 355.289L246.165 355.282L217.342 305.363Z"
                                        fill="#F0ACB8"
                                    /&gt;
                                    &lt;path
                                        d="M38.197 175.972L15.3385 175.971L-13.6505 125.765L72.1515 125.768L204.673 355.282L141.729 355.279L38.197 175.972Z"
                                        fill="#F0ACB8"
                                    /&gt;
                                    &lt;path
                                        d="M217.342 305.363L217.673 305.363C224.519 298.478 234.844 289.393 248.647 278.11C262.008 266.826 272.056 257.837 278.792 251.144C285.418 244.259 289.945 236.991 292.374 229.341C294.803 221.691 293.643 213.753 288.895 205.529C283.594 196.349 276.14 188.985 266.532 183.438C257.035 177.7 246.986 174.831 236.385 174.83C226.005 174.83 219.214 177.603 216.012 183.149C212.699 188.504 213.804 195.963 219.325 205.527L154.725 205.524C145.449 189.458 141.473 175.114 142.798 162.491C144.343 149.868 150.637 140.114 161.68 133.229C172.833 126.153 187.685 122.615 206.237 122.616C225.672 122.617 244.942 126.156 264.046 133.233C283.039 140.119 300.377 149.874 316.058 162.497C331.739 175.121 344.218 189.466 353.495 205.532C362.108 220.45 365.919 233.551 364.925 244.835C364.153 256.12 360.454 265.969 353.828 274.384C347.424 282.799 337.486 293.127 324.014 305.367L406.172 305.37L434.996 355.289L246.165 355.282L217.342 305.363Z"
                                        stroke="#1B1B18"
                                        strokeWidth={1}
                                    /&gt;
                                    &lt;path
                                        d="M38.197 175.972L15.3385 175.971L-13.6505 125.765L72.1515 125.768L204.673 355.282L141.729 355.279L38.197 175.972Z"
                                        stroke="#1B1B18"
                                        strokeWidth={1}
                                    /&gt;
                                &lt;/g&gt;
                                &lt;g
                                    /** @ts-expect-error 'plus-darker' doesn't seem to be defined in the 'csstype' module */
                                    style={{ mixBlendMode: 'plus-darker' }}
                                    className="translate-y-0 opacity-100 transition-all delay-300 duration-750 starting:translate-y-4 starting:opacity-0"
                                &gt;
                                    &lt;path
                                        d="M230.951 281.792L231.282 281.793C238.128 274.907 248.453 265.823 262.256 254.539C275.617 243.256 285.666 234.267 292.402 227.573C299.027 220.688 303.554 213.421 305.983 205.771C308.412 198.12 307.253 190.183 302.504 181.959C297.203 172.778 289.749 165.415 280.142 159.868C270.645 154.13 260.596 151.26 249.995 151.26C239.615 151.26 232.823 154.033 229.621 159.579C226.309 164.934 227.413 172.393 232.935 181.956L168.335 181.954C159.058 165.888 155.082 151.543 156.407 138.92C157.953 126.298 164.247 116.544 175.289 109.659C186.442 102.583 201.294 99.045 219.846 99.0457C239.281 99.0464 258.551 102.585 277.655 109.663C296.649 116.549 313.986 126.303 329.667 138.927C345.349 151.551 357.827 165.895 367.104 181.961C375.718 196.88 379.528 209.981 378.535 221.265C377.762 232.549 374.063 242.399 367.438 250.814C361.033 259.229 351.095 269.557 337.624 281.796L419.782 281.8L448.605 331.719L259.774 331.712L230.951 281.792Z"
                                        fill="#F3BEC7"
                                    /&gt;
                                    &lt;path
                                        d="M51.8063 152.402L28.9479 152.401L-0.0411453 102.195L85.7608 102.198L218.282 331.711L155.339 331.709L51.8063 152.402Z"
                                        fill="#F3BEC7"
                                    /&gt;
                                    &lt;path
                                        d="M230.951 281.792L231.282 281.793C238.128 274.907 248.453 265.823 262.256 254.539C275.617 243.256 285.666 234.267 292.402 227.573C299.027 220.688 303.554 213.421 305.983 205.771C308.412 198.12 307.253 190.183 302.504 181.959C297.203 172.778 289.749 165.415 280.142 159.868C270.645 154.13 260.596 151.26 249.995 151.26C239.615 151.26 232.823 154.033 229.621 159.579C226.309 164.934 227.413 172.393 232.935 181.956L168.335 181.954C159.058 165.888 155.082 151.543 156.407 138.92C157.953 126.298 164.247 116.544 175.289 109.659C186.442 102.583 201.294 99.045 219.846 99.0457C239.281 99.0464 258.551 102.585 277.655 109.663C296.649 116.549 313.986 126.303 329.667 138.927C345.349 151.551 357.827 165.895 367.104 181.961C375.718 196.88 379.528 209.981 378.535 221.265C377.762 232.549 374.063 242.399 367.438 250.814C361.033 259.229 351.095 269.557 337.624 281.796L419.782 281.8L448.605 331.719L259.774 331.712L230.951 281.792Z"
                                        stroke="#1B1B18"
                                        strokeWidth={1}
                                    /&gt;
                                    &lt;path
                                        d="M51.8063 152.402L28.9479 152.401L-0.0411453 102.195L85.7608 102.198L218.282 331.711L155.339 331.709L51.8063 152.402Z"
                                        stroke="#1B1B18"
                                        strokeWidth={1}
                                    /&gt;
                                &lt;/g&gt;
                                &lt;g className="translate-y-0 opacity-100 transition-all delay-300 duration-750 starting:translate-y-4 starting:opacity-0"&gt;
                                    &lt;path
                                        d="M188.467 355.363L188.798 355.363C195.644 348.478 205.969 339.393 219.772 328.11C233.133 316.826 243.181 307.837 249.917 301.144C253.696 297.217 256.792 293.166 259.205 288.991C261.024 285.845 262.455 282.628 263.499 279.341C265.928 271.691 264.768 263.753 260.02 255.529C254.719 246.349 247.265 238.985 237.657 233.438C228.16 227.7 218.111 224.831 207.51 224.83C197.13 224.83 190.339 227.603 187.137 233.149C183.824 238.504 184.929 245.963 190.45 255.527L125.851 255.524C116.574 239.458 112.598 225.114 113.923 212.491C114.615 206.836 116.261 201.756 118.859 197.253C122.061 191.704 126.709 187.03 132.805 183.229C143.958 176.153 158.81 172.615 177.362 172.616C196.797 172.617 216.067 176.156 235.171 183.233C254.164 190.119 271.502 199.874 287.183 212.497C302.864 225.121 315.343 239.466 324.62 255.532C333.233 270.45 337.044 283.551 336.05 294.835C335.46 303.459 333.16 311.245 329.151 318.194C327.915 320.337 326.515 322.4 324.953 324.384C318.549 332.799 308.611 343.127 295.139 355.367L377.297 355.37L406.121 405.289L217.29 405.282L188.467 355.363Z"
                                        stroke="#1B1B18"
                                        strokeWidth={1}
                                        strokeLinejoin="bevel"
                                    /&gt;
                                    &lt;path
                                        d="M9.32197 225.972L-13.5365 225.971L-42.5255 175.765L43.2765 175.768L175.798 405.282L112.854 405.279L9.32197 225.972Z"
                                        stroke="#1B1B18"
                                        strokeWidth={1}
                                        strokeLinejoin="bevel"
                                    /&gt;
                                    &lt;path
                                        d="M345.247 111.915C329.566 99.2919 312.229 89.5371 293.235 82.6512L235.167 183.228C254.161 190.114 271.498 199.869 287.179 212.492L345.247 111.915Z"
                                        stroke="#1B1B18"
                                        strokeWidth={1}
                                        strokeLinejoin="bevel"
                                    /&gt;
                                    &lt;path
                                        d="M382.686 154.964C373.41 138.898 360.931 124.553 345.25 111.93L287.182 212.506C302.863 225.13 315.342 239.475 324.618 255.541L382.686 154.964Z"
                                        stroke="#1B1B18"
                                        strokeWidth={1}
                                        strokeLinejoin="bevel"
                                    /&gt;
                                    &lt;path
                                        d="M293.243 82.6472C274.139 75.57 254.869 72.031 235.434 72.0303L177.366 172.607C196.801 172.608 216.071 176.147 235.175 183.224L293.243 82.6472Z"
                                        stroke="#1B1B18"
                                        strokeWidth={1}
                                        strokeLinejoin="bevel"
                                    /&gt;
                                    &lt;path
                                        d="M394.118 194.257C395.112 182.973 391.301 169.872 382.688 154.953L324.619 255.53C333.233 270.448 337.044 283.55 336.05 294.834L394.118 194.257Z"
                                        stroke="#1B1B18"
                                        strokeWidth={1}
                                        strokeLinejoin="bevel"
                                    /&gt;
                                    &lt;path
                                        d="M235.432 72.0311C216.88 72.0304 202.027 75.5681 190.875 82.6442L132.806 183.221C143.959 176.145 158.812 172.607 177.363 172.608L235.432 72.0311Z"
                                        stroke="#1B1B18"
                                        strokeWidth={1}
                                        strokeLinejoin="bevel"
                                    /&gt;
                                    &lt;path
                                        d="M265.59 124.25C276.191 124.251 286.24 127.12 295.737 132.858L237.669 233.435C228.172 227.697 218.123 224.828 207.522 224.827L265.59 124.25Z"
                                        stroke="#1B1B18"
                                        strokeWidth={1}
                                        strokeLinejoin="bevel"
                                    /&gt;
                                    &lt;path
                                        d="M295.719 132.859C305.326 138.406 312.78 145.77 318.081 154.95L260.013 255.527C254.712 246.347 247.258 238.983 237.651 233.436L295.719 132.859Z"
                                        stroke="#1B1B18"
                                        strokeWidth={1}
                                        strokeLinejoin="bevel"
                                    /&gt;
                                    &lt;path
                                        d="M387.218 217.608C391.227 210.66 393.527 202.874 394.117 194.25L336.049 294.827C335.459 303.451 333.159 311.237 329.15 318.185L387.218 217.608Z"
                                        stroke="#1B1B18"
                                        strokeWidth={1}
                                        strokeLinejoin="bevel"
                                    /&gt;
                                    &lt;path
                                        d="M245.211 132.577C248.413 127.03 255.204 124.257 265.584 124.258L207.516 224.835C197.136 224.834 190.345 227.607 187.143 233.154L245.211 132.577Z"
                                        stroke="#1B1B18"
                                        strokeWidth={1}
                                        strokeLinejoin="bevel"
                                    /&gt;
                                    &lt;path
                                        d="M318.094 154.945C322.842 163.17 324.002 171.107 321.573 178.757L263.505 279.334C265.934 271.684 264.774 263.746 260.026 255.522L318.094 154.945Z"
                                        stroke="#1B1B18"
                                        strokeWidth={1}
                                        strokeLinejoin="bevel"
                                    /&gt;
                                    &lt;path
                                        d="M176.925 96.6737C180.127 91.1249 184.776 86.4503 190.871 82.6499L132.803 183.227C126.708 187.027 122.059 191.702 118.857 197.25L176.925 96.6737Z"
                                        stroke="#1B1B18"
                                        strokeWidth={1}
                                        strokeLinejoin="bevel"
                                    /&gt;
                                    &lt;path
                                        d="M387.226 217.606C385.989 219.749 384.59 221.813 383.028 223.797L324.96 324.373C326.522 322.39 327.921 320.326 329.157 318.183L387.226 217.606Z"
                                        stroke="#1B1B18"
                                        strokeWidth={1}
                                        strokeLinejoin="bevel"
                                    /&gt;
                                    &lt;path
                                        d="M317.269 188.408C319.087 185.262 320.519 182.045 321.562 178.758L263.494 279.335C262.451 282.622 261.019 285.839 259.201 288.985L317.269 188.408Z"
                                        stroke="#1B1B18"
                                        strokeWidth={1}
                                        strokeLinejoin="bevel"
                                    /&gt;
                                    &lt;path
                                        d="M245.208 132.573C241.895 137.928 243 145.387 248.522 154.95L190.454 255.527C184.932 245.964 183.827 238.505 187.14 233.15L245.208 132.573Z"
                                        stroke="#1B1B18"
                                        strokeWidth={1}
                                        strokeLinejoin="bevel"
                                    /&gt;
                                    &lt;path
                                        d="M176.93 96.6719C174.331 101.175 172.686 106.255 171.993 111.91L113.925 212.487C114.618 206.831 116.263 201.752 118.862 197.249L176.93 96.6719Z"
                                        stroke="#1B1B18"
                                        strokeWidth={1}
                                        strokeLinejoin="bevel"
                                    /&gt;
                                    &lt;path
                                        d="M317.266 188.413C314.853 192.589 311.757 196.64 307.978 200.566L249.91 301.143C253.689 297.216 256.785 293.166 259.198 288.99L317.266 188.413Z"
                                        stroke="#1B1B18"
                                        strokeWidth={1}
                                        strokeLinejoin="bevel"
                                    /&gt;
                                    &lt;path
                                        d="M464.198 304.708L435.375 254.789L377.307 355.366L406.13 405.285L464.198 304.708Z"
                                        stroke="#1B1B18"
                                        strokeWidth={1}
                                        strokeLinejoin="bevel"
                                    /&gt;
                                    &lt;path
                                        d="M353.209 254.787C366.68 242.548 376.618 232.22 383.023 223.805L324.955 324.382C318.55 332.797 308.612 343.124 295.141 355.364L353.209 254.787Z"
                                        stroke="#1B1B18"
                                        strokeWidth={1}
                                        strokeLinejoin="bevel"
                                    /&gt;
                                    &lt;path
                                        d="M435.37 254.787L353.212 254.784L295.144 355.361L377.302 355.364L435.37 254.787Z"
                                        stroke="#1B1B18"
                                        strokeWidth={1}
                                        strokeLinejoin="bevel"
                                    /&gt;
                                    &lt;path
                                        d="M183.921 154.947L248.521 154.95L190.453 255.527L125.853 255.524L183.921 154.947Z"
                                        stroke="#1B1B18"
                                        strokeWidth={1}
                                        strokeLinejoin="bevel"
                                    /&gt;
                                    &lt;path
                                        d="M171.992 111.914C170.668 124.537 174.643 138.881 183.92 154.947L125.852 255.524C116.575 239.458 112.599 225.114 113.924 212.491L171.992 111.914Z"
                                        stroke="#1B1B18"
                                        strokeWidth={1}
                                        strokeLinejoin="bevel"
                                    /&gt;
                                    &lt;path
                                        d="M307.987 200.562C301.251 207.256 291.203 216.244 277.842 227.528L219.774 328.105C233.135 316.821 243.183 307.832 249.919 301.139L307.987 200.562Z"
                                        stroke="#1B1B18"
                                        strokeWidth={1}
                                        strokeLinejoin="bevel"
                                    /&gt;
                                    &lt;path
                                        d="M15.5469 75.1797L44.5359 125.386L-13.5321 225.963L-42.5212 175.756L15.5469 75.1797Z"
                                        stroke="#1B1B18"
                                        strokeWidth={1}
                                        strokeLinejoin="bevel"
                                    /&gt;
                                    &lt;path
                                        d="M277.836 227.536C264.033 238.82 253.708 247.904 246.862 254.789L188.794 355.366C195.64 348.481 205.965 339.397 219.768 328.113L277.836 227.536Z"
                                        stroke="#1B1B18"
                                        strokeWidth={1}
                                        strokeLinejoin="bevel"
                                    /&gt;
                                    &lt;path
                                        d="M275.358 304.706L464.189 304.713L406.12 405.29L217.29 405.283L275.358 304.706Z"
                                        stroke="#1B1B18"
                                        strokeWidth={1}
                                        strokeLinejoin="bevel"
                                    /&gt;
                                    &lt;path
                                        d="M44.5279 125.39L67.3864 125.39L9.31834 225.967L-13.5401 225.966L44.5279 125.39Z"
                                        stroke="#1B1B18"
                                        strokeWidth={1}
                                        strokeLinejoin="bevel"
                                    /&gt;
                                    &lt;path
                                        d="M101.341 75.1911L233.863 304.705L175.795 405.282L43.2733 175.768L101.341 75.1911ZM15.5431 75.19L-42.525 175.767L43.277 175.77L101.345 75.1932L15.5431 75.19Z"
                                        stroke="#1B1B18"
                                        strokeWidth={1}
                                        strokeLinejoin="bevel"
                                    /&gt;
                                    &lt;path
                                        d="M246.866 254.784L246.534 254.784L188.466 355.361L188.798 355.361L246.866 254.784Z"
                                        stroke="#1B1B18"
                                        strokeWidth={1}
                                        strokeLinejoin="bevel"
                                    /&gt;
                                    &lt;path
                                        d="M246.539 254.781L275.362 304.701L217.294 405.277L188.471 355.358L246.539 254.781Z"
                                        stroke="#1B1B18"
                                        strokeWidth={1}
                                        strokeLinejoin="bevel"
                                    /&gt;
                                    &lt;path
                                        d="M67.3906 125.391L170.923 304.698L112.855 405.275L9.32257 225.967L67.3906 125.391Z"
                                        stroke="#1B1B18"
                                        strokeWidth={1}
                                        strokeLinejoin="bevel"
                                    /&gt;
                                    &lt;path
                                        d="M170.921 304.699L233.865 304.701L175.797 405.278L112.853 405.276L170.921 304.699Z"
                                        stroke="#1B1B18"
                                        strokeWidth={1}
                                        strokeLinejoin="bevel"
                                    /&gt;
                                &lt;/g&gt;
                                &lt;g
                                    style={{ mixBlendMode: 'hard-light' }}
                                    className="translate-y-0 opacity-100 transition-all delay-300 duration-750 starting:translate-y-4 starting:opacity-0"
                                &gt;
                                    &lt;path
                                        d="M246.544 254.79L246.875 254.79C253.722 247.905 264.046 238.82 277.849 227.537C291.21 216.253 301.259 207.264 307.995 200.57C314.62 193.685 319.147 186.418 321.577 178.768C324.006 171.117 322.846 163.18 318.097 154.956C312.796 145.775 305.342 138.412 295.735 132.865C286.238 127.127 276.189 124.258 265.588 124.257C255.208 124.257 248.416 127.03 245.214 132.576C241.902 137.931 243.006 145.39 248.528 154.953L183.928 154.951C174.652 138.885 170.676 124.541 172 111.918C173.546 99.2946 179.84 89.5408 190.882 82.6559C202.035 75.5798 216.887 72.0421 235.439 72.0428C254.874 72.0435 274.144 75.5825 293.248 82.6598C312.242 89.5457 329.579 99.3005 345.261 111.924C360.942 124.548 373.421 138.892 382.697 154.958C391.311 169.877 395.121 182.978 394.128 194.262C393.355 205.546 389.656 215.396 383.031 223.811C376.627 232.226 366.688 242.554 353.217 254.794L435.375 254.797L464.198 304.716L275.367 304.709L246.544 254.79Z"
                                        fill="#F0ACB8"
                                    /&gt;
                                    &lt;path
                                        d="M246.544 254.79L246.875 254.79C253.722 247.905 264.046 238.82 277.849 227.537C291.21 216.253 301.259 207.264 307.995 200.57C314.62 193.685 319.147 186.418 321.577 178.768C324.006 171.117 322.846 163.18 318.097 154.956C312.796 145.775 305.342 138.412 295.735 132.865C286.238 127.127 276.189 124.258 265.588 124.257C255.208 124.257 248.416 127.03 245.214 132.576C241.902 137.931 243.006 145.39 248.528 154.953L183.928 154.951C174.652 138.885 170.676 124.541 172 111.918C173.546 99.2946 179.84 89.5408 190.882 82.6559C202.035 75.5798 216.887 72.0421 235.439 72.0428C254.874 72.0435 274.144 75.5825 293.248 82.6598C312.242 89.5457 329.579 99.3005 345.261 111.924C360.942 124.548 373.421 138.892 382.697 154.958C391.311 169.877 395.121 182.978 394.128 194.262C393.355 205.546 389.656 215.396 383.031 223.811C376.627 232.226 366.688 242.554 353.217 254.794L435.375 254.797L464.198 304.716L275.367 304.709L246.544 254.79Z"
                                        stroke="#1B1B18"
                                        strokeWidth={1}
                                        strokeLinejoin="round"
                                    /&gt;
                                &lt;/g&gt;
                                &lt;g
                                    style={{ mixBlendMode: 'hard-light' }}
                                    className="translate-y-0 opacity-100 transition-all delay-300 duration-750 starting:translate-y-4 starting:opacity-0"
                                &gt;
                                    &lt;path
                                        d="M67.41 125.402L44.5515 125.401L15.5625 75.1953L101.364 75.1985L233.886 304.712L170.942 304.71L67.41 125.402Z"
                                        fill="#F0ACB8"
                                    /&gt;
                                    &lt;path
                                        d="M67.41 125.402L44.5515 125.401L15.5625 75.1953L101.364 75.1985L233.886 304.712L170.942 304.71L67.41 125.402Z"
                                        stroke="#1B1B18"
                                        strokeWidth={1}
                                    /&gt;
                                &lt;/g&gt;
                            &lt;/svg&gt;
                            &lt;svg
                                className="relative -mt-[4.9rem] -ml-8 hidden w-[448px] max-w-none lg:-mt-[6.6rem] lg:ml-0 dark:block"
                                viewBox="0 0 440 376"
                                fill="none"
                                xmlns="http://www.w3.org/2000/svg"
                            &gt;
                                &lt;g className="translate-y-0 opacity-100 transition-all delay-300 duration-750 starting:translate-y-4 starting:opacity-0"&gt;
                                    &lt;path
                                        d="M188.263 355.73L188.595 355.73C195.441 348.845 205.766 339.761 219.569 328.477C232.93 317.193 242.978 308.205 249.714 301.511C256.34 294.626 260.867 287.358 263.296 279.708C265.725 272.058 264.565 264.121 259.816 255.896C254.516 246.716 247.062 239.352 237.454 233.805C227.957 228.067 217.908 225.198 207.307 225.198C196.927 225.197 190.136 227.97 186.934 233.516C183.621 238.872 184.726 246.331 190.247 255.894L125.647 255.891C116.371 239.825 112.395 225.481 113.72 212.858C115.265 200.235 121.559 190.481 132.602 183.596C143.754 176.52 158.607 172.982 177.159 172.983C196.594 172.984 215.863 176.523 234.968 183.6C253.961 190.486 271.299 200.241 286.98 212.864C302.661 225.488 315.14 239.833 324.416 255.899C333.03 270.817 336.841 283.918 335.847 295.203C335.075 306.487 331.376 316.336 324.75 324.751C318.346 333.167 308.408 343.494 294.936 355.734L377.094 355.737L405.917 405.656L217.087 405.649L188.263 355.73Z"
                                        fill="black"
                                    /&gt;
                                    &lt;path
                                        d="M9.11884 226.339L-13.7396 226.338L-42.7286 176.132L43.0733 176.135L175.595 405.649L112.651 405.647L9.11884 226.339Z"
                                        fill="black"
                                    /&gt;
                                    &lt;path
                                        d="M188.263 355.73L188.595 355.73C195.441 348.845 205.766 339.761 219.569 328.477C232.93 317.193 242.978 308.205 249.714 301.511C256.34 294.626 260.867 287.358 263.296 279.708C265.725 272.058 264.565 264.121 259.816 255.896C254.516 246.716 247.062 239.352 237.454 233.805C227.957 228.067 217.908 225.198 207.307 225.198C196.927 225.197 190.136 227.97 186.934 233.516C183.621 238.872 184.726 246.331 190.247 255.894L125.647 255.891C116.371 239.825 112.395 225.481 113.72 212.858C115.265 200.235 121.559 190.481 132.602 183.596C143.754 176.52 158.607 172.982 177.159 172.983C196.594 172.984 215.863 176.523 234.968 183.6C253.961 190.486 271.299 200.241 286.98 212.864C302.661 225.488 315.14 239.833 324.416 255.899C333.03 270.817 336.841 283.918 335.847 295.203C335.075 306.487 331.376 316.336 324.75 324.751C318.346 333.167 308.408 343.494 294.936 355.734L377.094 355.737L405.917 405.656L217.087 405.649L188.263 355.73Z"
                                        stroke="#FF750F"
                                        strokeWidth={1}
                                    /&gt;
                                    &lt;path
                                        d="M9.11884 226.339L-13.7396 226.338L-42.7286 176.132L43.0733 176.135L175.595 405.649L112.651 405.647L9.11884 226.339Z"
                                        stroke="#FF750F"
                                        strokeWidth={1}
                                    /&gt;
                                    &lt;path
                                        d="M204.592 327.449L204.923 327.449C211.769 320.564 222.094 311.479 235.897 300.196C249.258 288.912 259.306 279.923 266.042 273.23C272.668 266.345 277.195 259.077 279.624 251.427C282.053 243.777 280.893 235.839 276.145 227.615C270.844 218.435 263.39 211.071 253.782 205.524C244.285 199.786 234.236 196.917 223.635 196.916C213.255 196.916 206.464 199.689 203.262 205.235C199.949 210.59 201.054 218.049 206.575 227.612L141.975 227.61C132.699 211.544 128.723 197.2 130.048 184.577C131.593 171.954 137.887 162.2 148.93 155.315C160.083 148.239 174.935 144.701 193.487 144.702C212.922 144.703 232.192 148.242 251.296 155.319C270.289 162.205 287.627 171.96 303.308 184.583C318.989 197.207 331.468 211.552 340.745 227.618C349.358 242.536 353.169 255.637 352.175 266.921C351.403 278.205 347.704 288.055 341.078 296.47C334.674 304.885 324.736 315.213 311.264 327.453L393.422 327.456L422.246 377.375L233.415 377.368L204.592 327.449Z"
                                        fill="#391800"
                                    /&gt;
                                    &lt;path
                                        d="M25.447 198.058L2.58852 198.057L-26.4005 147.851L59.4015 147.854L191.923 377.368L128.979 377.365L25.447 198.058Z"
                                        fill="#391800"
                                    /&gt;
                                    &lt;path
                                        d="M204.592 327.449L204.923 327.449C211.769 320.564 222.094 311.479 235.897 300.196C249.258 288.912 259.306 279.923 266.042 273.23C272.668 266.345 277.195 259.077 279.624 251.427C282.053 243.777 280.893 235.839 276.145 227.615C270.844 218.435 263.39 211.071 253.782 205.524C244.285 199.786 234.236 196.917 223.635 196.916C213.255 196.916 206.464 199.689 203.262 205.235C199.949 210.59 201.054 218.049 206.575 227.612L141.975 227.61C132.699 211.544 128.723 197.2 130.048 184.577C131.593 171.954 137.887 162.2 148.93 155.315C160.083 148.239 174.935 144.701 193.487 144.702C212.922 144.703 232.192 148.242 251.296 155.319C270.289 162.205 287.627 171.96 303.308 184.583C318.989 197.207 331.468 211.552 340.745 227.618C349.358 242.536 353.169 255.637 352.175 266.921C351.403 278.205 347.704 288.055 341.078 296.47C334.674 304.885 324.736 315.213 311.264 327.453L393.422 327.456L422.246 377.375L233.415 377.368L204.592 327.449Z"
                                        stroke="#FF750F"
                                        strokeWidth={1}
                                    /&gt;
                                    &lt;path
                                        d="M25.447 198.058L2.58852 198.057L-26.4005 147.851L59.4015 147.854L191.923 377.368L128.979 377.365L25.447 198.058Z"
                                        stroke="#FF750F"
                                        strokeWidth={1}
                                    /&gt;
                                &lt;/g&gt;
                                &lt;g
                                    className="translate-y-0 opacity-100 transition-all delay-300 duration-750 starting:translate-y-4 starting:opacity-0"
                                    style={{ mixBlendMode: 'hard-light' }}
                                &gt;
                                    &lt;path
                                        d="M217.342 305.363L217.673 305.363C224.519 298.478 234.844 289.393 248.647 278.11C262.008 266.826 272.056 257.837 278.792 251.144C285.418 244.259 289.945 236.991 292.374 229.341C294.803 221.691 293.643 213.753 288.895 205.529C283.594 196.349 276.14 188.985 266.532 183.438C257.035 177.7 246.986 174.831 236.385 174.83C226.005 174.83 219.214 177.603 216.012 183.149C212.699 188.504 213.804 195.963 219.325 205.527L154.725 205.524C145.449 189.458 141.473 175.114 142.798 162.491C144.343 149.868 150.637 140.114 161.68 133.229C172.833 126.153 187.685 122.615 206.237 122.616C225.672 122.617 244.942 126.156 264.046 133.233C283.039 140.119 300.377 149.874 316.058 162.497C331.739 175.121 344.218 189.466 353.495 205.532C362.108 220.45 365.919 233.551 364.925 244.835C364.153 256.12 360.454 265.969 353.828 274.384C347.424 282.799 337.486 293.127 324.014 305.367L406.172 305.37L434.996 355.289L246.165 355.282L217.342 305.363Z"
                                        fill="#733000"
                                    /&gt;
                                    &lt;path
                                        d="M38.197 175.972L15.3385 175.971L-13.6505 125.765L72.1515 125.768L204.673 355.282L141.729 355.279L38.197 175.972Z"
                                        fill="#733000"
                                    /&gt;
                                    &lt;path
                                        d="M217.342 305.363L217.673 305.363C224.519 298.478 234.844 289.393 248.647 278.11C262.008 266.826 272.056 257.837 278.792 251.144C285.418 244.259 289.945 236.991 292.374 229.341C294.803 221.691 293.643 213.753 288.895 205.529C283.594 196.349 276.14 188.985 266.532 183.438C257.035 177.7 246.986 174.831 236.385 174.83C226.005 174.83 219.214 177.603 216.012 183.149C212.699 188.504 213.804 195.963 219.325 205.527L154.725 205.524C145.449 189.458 141.473 175.114 142.798 162.491C144.343 149.868 150.637 140.114 161.68 133.229C172.833 126.153 187.685 122.615 206.237 122.616C225.672 122.617 244.942 126.156 264.046 133.233C283.039 140.119 300.377 149.874 316.058 162.497C331.739 175.121 344.218 189.466 353.495 205.532C362.108 220.45 365.919 233.551 364.925 244.835C364.153 256.12 360.454 265.969 353.828 274.384C347.424 282.799 337.486 293.127 324.014 305.367L406.172 305.37L434.996 355.289L246.165 355.282L217.342 305.363Z"
                                        stroke="#FF750F"
                                        strokeWidth={1}
                                    /&gt;
                                    &lt;path
                                        d="M38.197 175.972L15.3385 175.971L-13.6505 125.765L72.1515 125.768L204.673 355.282L141.729 355.279L38.197 175.972Z"
                                        stroke="#FF750F"
                                        strokeWidth={1}
                                    /&gt;
                                &lt;/g&gt;
                                &lt;g className="translate-y-0 opacity-100 transition-all delay-300 duration-750 starting:translate-y-4 starting:opacity-0"&gt;
                                    &lt;path
                                        d="M217.342 305.363L217.673 305.363C224.519 298.478 234.844 289.393 248.647 278.11C262.008 266.826 272.056 257.837 278.792 251.144C285.418 244.259 289.945 236.991 292.374 229.341C294.803 221.691 293.643 213.753 288.895 205.529C283.594 196.349 276.14 188.985 266.532 183.438C257.035 177.7 246.986 174.831 236.385 174.83C226.005 174.83 219.214 177.603 216.012 183.149C212.699 188.504 213.804 195.963 219.325 205.527L154.726 205.524C145.449 189.458 141.473 175.114 142.798 162.491C144.343 149.868 150.637 140.114 161.68 133.229C172.833 126.153 187.685 122.615 206.237 122.616C225.672 122.617 244.942 126.156 264.046 133.233C283.039 140.119 300.377 149.874 316.058 162.497C331.739 175.121 344.218 189.466 353.495 205.532C362.108 220.45 365.919 233.551 364.925 244.835C364.153 256.12 360.454 265.969 353.828 274.384C347.424 282.799 337.486 293.127 324.014 305.367L406.172 305.37L434.996 355.289L246.165 355.282L217.342 305.363Z"
                                        stroke="#FF750F"
                                        strokeWidth={1}
                                    /&gt;
                                    &lt;path
                                        d="M38.197 175.972L15.3385 175.971L-13.6505 125.765L72.1515 125.768L204.673 355.282L141.729 355.279L38.197 175.972Z"
                                        stroke="#FF750F"
                                        strokeWidth={1}
                                    /&gt;
                                &lt;/g&gt;
                                &lt;g className="translate-y-0 opacity-100 transition-all delay-300 duration-750 starting:translate-y-4 starting:opacity-0"&gt;
                                    &lt;path
                                        d="M188.467 355.363L188.798 355.363C195.644 348.478 205.969 339.393 219.772 328.11C233.133 316.826 243.181 307.837 249.917 301.144C253.696 297.217 256.792 293.166 259.205 288.991C261.024 285.845 262.455 282.628 263.499 279.341C265.928 271.691 264.768 263.753 260.02 255.529C254.719 246.349 247.265 238.985 237.657 233.438C228.16 227.7 218.111 224.831 207.51 224.83C197.13 224.83 190.339 227.603 187.137 233.149C183.824 238.504 184.929 245.963 190.45 255.527L125.851 255.524C116.574 239.458 112.598 225.114 113.923 212.491C114.615 206.836 116.261 201.756 118.859 197.253C122.061 191.704 126.709 187.03 132.805 183.229C143.958 176.153 158.81 172.615 177.362 172.616C196.797 172.617 216.067 176.156 235.171 183.233C254.164 190.119 271.502 199.874 287.183 212.497C302.864 225.121 315.343 239.466 324.62 255.532C333.233 270.45 337.044 283.551 336.05 294.835C335.46 303.459 333.16 311.245 329.151 318.194C327.915 320.337 326.515 322.4 324.953 324.384C318.549 332.799 308.611 343.127 295.139 355.367L377.297 355.37L406.121 405.289L217.29 405.282L188.467 355.363Z"
                                        stroke="#FF750F"
                                        strokeWidth={1}
                                        strokeLinejoin="bevel"
                                    /&gt;
                                    &lt;path
                                        d="M9.32197 225.972L-13.5365 225.971L-42.5255 175.765L43.2765 175.768L175.798 405.282L112.854 405.279L9.32197 225.972Z"
                                        stroke="#FF750F"
                                        strokeWidth={1}
                                        strokeLinejoin="bevel"
                                    /&gt;
                                    &lt;path
                                        d="M345.247 111.915C329.566 99.2919 312.229 89.5371 293.235 82.6512L235.167 183.228C254.161 190.114 271.498 199.869 287.179 212.492L345.247 111.915Z"
                                        stroke="#FF750F"
                                        strokeWidth={1}
                                        strokeLinejoin="bevel"
                                    /&gt;
                                    &lt;path
                                        d="M382.686 154.964C373.41 138.898 360.931 124.553 345.25 111.93L287.182 212.506C302.863 225.13 315.342 239.475 324.618 255.541L382.686 154.964Z"
                                        stroke="#FF750F"
                                        strokeWidth={1}
                                        strokeLinejoin="bevel"
                                    /&gt;
                                    &lt;path
                                        d="M293.243 82.6472C274.139 75.57 254.869 72.031 235.434 72.0303L177.366 172.607C196.801 172.608 216.071 176.147 235.175 183.224L293.243 82.6472Z"
                                        stroke="#FF750F"
                                        strokeWidth={1}
                                        strokeLinejoin="bevel"
                                    /&gt;
                                    &lt;path
                                        d="M394.118 194.257C395.112 182.973 391.301 169.872 382.688 154.953L324.619 255.53C333.233 270.448 337.044 283.55 336.05 294.834L394.118 194.257Z"
                                        stroke="#FF750F"
                                        strokeWidth={1}
                                        strokeLinejoin="bevel"
                                    /&gt;
                                    &lt;path
                                        d="M235.432 72.0311C216.88 72.0304 202.027 75.5681 190.875 82.6442L132.806 183.221C143.959 176.145 158.812 172.607 177.363 172.608L235.432 72.0311Z"
                                        stroke="#FF750F"
                                        strokeWidth={1}
                                        strokeLinejoin="bevel"
                                    /&gt;
                                    &lt;path
                                        d="M265.59 124.25C276.191 124.251 286.24 127.12 295.737 132.858L237.669 233.435C228.172 227.697 218.123 224.828 207.522 224.827L265.59 124.25Z"
                                        stroke="#FF750F"
                                        strokeWidth={1}
                                        strokeLinejoin="bevel"
                                    /&gt;
                                    &lt;path
                                        d="M295.719 132.859C305.326 138.406 312.78 145.77 318.081 154.95L260.013 255.527C254.712 246.347 247.258 238.983 237.651 233.436L295.719 132.859Z"
                                        stroke="#FF750F"
                                        strokeWidth={1}
                                        strokeLinejoin="bevel"
                                    /&gt;
                                    &lt;path
                                        d="M387.218 217.608C391.227 210.66 393.527 202.874 394.117 194.25L336.049 294.827C335.459 303.451 333.159 311.237 329.15 318.185L387.218 217.608Z"
                                        stroke="#FF750F"
                                        strokeWidth={1}
                                        strokeLinejoin="bevel"
                                    /&gt;
                                    &lt;path
                                        d="M245.211 132.577C248.413 127.03 255.204 124.257 265.584 124.258L207.516 224.835C197.136 224.834 190.345 227.607 187.143 233.154L245.211 132.577Z"
                                        stroke="#FF750F"
                                        strokeWidth={1}
                                        strokeLinejoin="bevel"
                                    /&gt;
                                    &lt;path
                                        d="M318.094 154.945C322.842 163.17 324.002 171.107 321.573 178.757L263.505 279.334C265.934 271.684 264.774 263.746 260.026 255.522L318.094 154.945Z"
                                        stroke="#FF750F"
                                        strokeWidth={1}
                                        strokeLinejoin="bevel"
                                    /&gt;
                                    &lt;path
                                        d="M176.925 96.6737C180.127 91.1249 184.776 86.4503 190.871 82.6499L132.803 183.227C126.708 187.027 122.059 191.702 118.857 197.25L176.925 96.6737Z"
                                        stroke="#FF750F"
                                        strokeWidth={1}
                                        strokeLinejoin="bevel"
                                    /&gt;
                                    &lt;path
                                        d="M387.226 217.606C385.989 219.749 384.59 221.813 383.028 223.797L324.96 324.373C326.522 322.39 327.921 320.326 329.157 318.183L387.226 217.606Z"
                                        stroke="#FF750F"
                                        strokeWidth={1}
                                        strokeLinejoin="bevel"
                                    /&gt;
                                    &lt;path
                                        d="M317.269 188.408C319.087 185.262 320.519 182.045 321.562 178.758L263.494 279.335C262.451 282.622 261.019 285.839 259.201 288.985L317.269 188.408Z"
                                        stroke="#FF750F"
                                        strokeWidth={1}
                                        strokeLinejoin="bevel"
                                    /&gt;
                                    &lt;path
                                        d="M245.208 132.573C241.895 137.928 243 145.387 248.522 154.95L190.454 255.527C184.932 245.964 183.827 238.505 187.14 233.15L245.208 132.573Z"
                                        stroke="#FF750F"
                                        strokeWidth={1}
                                        strokeLinejoin="bevel"
                                    /&gt;
                                    &lt;path
                                        d="M176.93 96.6719C174.331 101.175 172.686 106.255 171.993 111.91L113.925 212.487C114.618 206.831 116.263 201.752 118.862 197.249L176.93 96.6719Z"
                                        stroke="#FF750F"
                                        strokeWidth={1}
                                        strokeLinejoin="bevel"
                                    /&gt;
                                    &lt;path
                                        d="M317.266 188.413C314.853 192.589 311.757 196.64 307.978 200.566L249.91 301.143C253.689 297.216 256.785 293.166 259.198 288.99L317.266 188.413Z"
                                        stroke="#FF750F"
                                        strokeWidth={1}
                                        strokeLinejoin="bevel"
                                    /&gt;
                                    &lt;path
                                        d="M464.198 304.708L435.375 254.789L377.307 355.366L406.13 405.285L464.198 304.708Z"
                                        stroke="#FF750F"
                                        strokeWidth={1}
                                        strokeLinejoin="bevel"
                                    /&gt;
                                    &lt;path
                                        d="M353.209 254.787C366.68 242.548 376.618 232.22 383.023 223.805L324.955 324.382C318.55 332.797 308.612 343.124 295.141 355.364L353.209 254.787Z"
                                        stroke="#FF750F"
                                        strokeWidth={1}
                                        strokeLinejoin="bevel"
                                    /&gt;
                                    &lt;path
                                        d="M435.37 254.787L353.212 254.784L295.144 355.361L377.302 355.364L435.37 254.787Z"
                                        stroke="#FF750F"
                                        strokeWidth={1}
                                        strokeLinejoin="bevel"
                                    /&gt;
                                    &lt;path
                                        d="M183.921 154.947L248.521 154.95L190.453 255.527L125.853 255.524L183.921 154.947Z"
                                        stroke="#FF750F"
                                        strokeWidth={1}
                                        strokeLinejoin="bevel"
                                    /&gt;
                                    &lt;path
                                        d="M171.992 111.914C170.668 124.537 174.643 138.881 183.92 154.947L125.852 255.524C116.575 239.458 112.599 225.114 113.924 212.491L171.992 111.914Z"
                                        stroke="#FF750F"
                                        strokeWidth={1}
                                        strokeLinejoin="bevel"
                                    /&gt;
                                    &lt;path
                                        d="M307.987 200.562C301.251 207.256 291.203 216.244 277.842 227.528L219.774 328.105C233.135 316.821 243.183 307.832 249.919 301.139L307.987 200.562Z"
                                        stroke="#FF750F"
                                        strokeWidth={1}
                                        strokeLinejoin="bevel"
                                    /&gt;
                                    &lt;path
                                        d="M15.5469 75.1797L44.5359 125.386L-13.5321 225.963L-42.5212 175.756L15.5469 75.1797Z"
                                        stroke="#FF750F"
                                        strokeWidth={1}
                                        strokeLinejoin="bevel"
                                    /&gt;
                                    &lt;path
                                        d="M277.836 227.536C264.033 238.82 253.708 247.904 246.862 254.789L188.794 355.366C195.64 348.481 205.965 339.397 219.768 328.113L277.836 227.536Z"
                                        stroke="#FF750F"
                                        strokeWidth={1}
                                        strokeLinejoin="bevel"
                                    /&gt;
                                    &lt;path
                                        d="M275.358 304.706L464.189 304.713L406.12 405.29L217.29 405.283L275.358 304.706Z"
                                        stroke="#FF750F"
                                        strokeWidth={1}
                                        strokeLinejoin="bevel"
                                    /&gt;
                                    &lt;path
                                        d="M44.5279 125.39L67.3864 125.39L9.31834 225.967L-13.5401 225.966L44.5279 125.39Z"
                                        stroke="#FF750F"
                                        strokeWidth={1}
                                        strokeLinejoin="bevel"
                                    /&gt;
                                    &lt;path
                                        d="M101.341 75.1911L233.863 304.705L175.795 405.282L43.2733 175.768L101.341 75.1911ZM15.5431 75.19L-42.525 175.767L43.277 175.77L101.345 75.1932L15.5431 75.19Z"
                                        stroke="#FF750F"
                                        strokeWidth={1}
                                        strokeLinejoin="bevel"
                                    /&gt;
                                    &lt;path
                                        d="M246.866 254.784L246.534 254.784L188.466 355.361L188.798 355.361L246.866 254.784Z"
                                        stroke="#FF750F"
                                        strokeWidth={1}
                                        strokeLinejoin="bevel"
                                    /&gt;
                                    &lt;path
                                        d="M246.539 254.781L275.362 304.701L217.294 405.277L188.471 355.358L246.539 254.781Z"
                                        stroke="#FF750F"
                                        strokeWidth={1}
                                        strokeLinejoin="bevel"
                                    /&gt;
                                    &lt;path
                                        d="M67.3906 125.391L170.923 304.698L112.855 405.275L9.32257 225.967L67.3906 125.391Z"
                                        stroke="#FF750F"
                                        strokeWidth={1}
                                        strokeLinejoin="bevel"
                                    /&gt;
                                    &lt;path
                                        d="M170.921 304.699L233.865 304.701L175.797 405.278L112.853 405.276L170.921 304.699Z"
                                        stroke="#FF750F"
                                        strokeWidth={1}
                                        strokeLinejoin="bevel"
                                    /&gt;
                                &lt;/g&gt;
                                &lt;g
                                    className="translate-y-0 opacity-100 transition-all delay-300 duration-750 starting:translate-y-4 starting:opacity-0"
                                    style={{ mixBlendMode: 'hard-light' }}
                                &gt;
                                    &lt;path
                                        d="M246.544 254.79L246.875 254.79C253.722 247.905 264.046 238.82 277.849 227.537C291.21 216.253 301.259 207.264 307.995 200.57C314.62 193.685 319.147 186.418 321.577 178.768C324.006 171.117 322.846 163.18 318.097 154.956C312.796 145.775 305.342 138.412 295.735 132.865C286.238 127.127 276.189 124.258 265.588 124.257C255.208 124.257 248.416 127.03 245.214 132.576C241.902 137.931 243.006 145.39 248.528 154.953L183.928 154.951C174.652 138.885 170.676 124.541 172 111.918C173.546 99.2946 179.84 89.5408 190.882 82.6559C202.035 75.5798 216.887 72.0421 235.439 72.0428C254.874 72.0435 274.144 75.5825 293.248 82.6598C312.242 89.5457 329.579 99.3005 345.261 111.924C360.942 124.548 373.421 138.892 382.697 154.958C391.311 169.877 395.121 182.978 394.128 194.262C393.355 205.546 389.656 215.396 383.031 223.811C376.627 232.226 366.688 242.554 353.217 254.794L435.375 254.797L464.198 304.716L275.367 304.709L246.544 254.79Z"
                                        fill="#4B0600"
                                    /&gt;
                                    &lt;path
                                        d="M246.544 254.79L246.875 254.79C253.722 247.905 264.046 238.82 277.849 227.537C291.21 216.253 301.259 207.264 307.995 200.57C314.62 193.685 319.147 186.418 321.577 178.768C324.006 171.117 322.846 163.18 318.097 154.956C312.796 145.775 305.342 138.412 295.735 132.865C286.238 127.127 276.189 124.258 265.588 124.257C255.208 124.257 248.416 127.03 245.214 132.576C241.902 137.931 243.006 145.39 248.528 154.953L183.928 154.951C174.652 138.885 170.676 124.541 172 111.918C173.546 99.2946 179.84 89.5408 190.882 82.6559C202.035 75.5798 216.887 72.0421 235.439 72.0428C254.874 72.0435 274.144 75.5825 293.248 82.6598C312.242 89.5457 329.579 99.3005 345.261 111.924C360.942 124.548 373.421 138.892 382.697 154.958C391.311 169.877 395.121 182.978 394.128 194.262C393.355 205.546 389.656 215.396 383.031 223.811C376.627 232.226 366.688 242.554 353.217 254.794L435.375 254.797L464.198 304.716L275.367 304.709L246.544 254.79Z"
                                        stroke="#FF750F"
                                        strokeWidth={1}
                                        strokeLinejoin="round"
                                    /&gt;
                                &lt;/g&gt;
                                &lt;g
                                    className="translate-y-0 opacity-100 transition-all delay-300 duration-750 starting:translate-y-4 starting:opacity-0"
                                    style={{ mixBlendMode: 'hard-light' }}
                                &gt;
                                    &lt;path
                                        d="M67.41 125.402L44.5515 125.401L15.5625 75.1953L101.364 75.1985L233.886 304.712L170.942 304.71L67.41 125.402Z"
                                        fill="#4B0600"
                                    /&gt;
                                    &lt;path
                                        d="M67.41 125.402L44.5515 125.401L15.5625 75.1953L101.364 75.1985L233.886 304.712L170.942 304.71L67.41 125.402Z"
                                        stroke="#FF750F"
                                        strokeWidth={1}
                                    /&gt;
                                &lt;/g&gt;
                            &lt;/svg&gt;
                            &lt;div className="absolute inset-0 rounded-t-lg shadow-[inset_0px_0px_0px_1px_rgba(26,26,0,0.16)] lg:rounded-t-none lg:rounded-r-lg dark:shadow-[inset_0px_0px_0px_1px_#fffaed2d]" /&gt;
                        &lt;/div&gt;
                    &lt;/main&gt;
                &lt;/div&gt;
                &lt;div className="hidden h-14.5 lg:block"&gt;&lt;/div&gt;
            &lt;/div&gt;
        &lt;/&gt;
    );
}</content>
    

  </file>
  <file>
    
  
    <path>resources/js/routes/index.ts</path>
    
  
    <content>import { queryParams, type RouteQueryOptions, type RouteDefinition, type RouteFormDefinition } from './../wayfinder'
/**
 * @see routes/web.php:6
 * @route '/'
 */
export const home = (options?: RouteQueryOptions): RouteDefinition&lt;'get'&gt; =&gt; ({
    url: home.url(options),
    method: 'get',
})

home.definition = {
    methods: ["get","head"],
    url: '/',
} satisfies RouteDefinition&lt;["get","head"]&gt;

/**
 * @see routes/web.php:6
 * @route '/'
 */
home.url = (options?: RouteQueryOptions) =&gt; {
    return home.definition.url + queryParams(options)
}

/**
 * @see routes/web.php:6
 * @route '/'
 */
home.get = (options?: RouteQueryOptions): RouteDefinition&lt;'get'&gt; =&gt; ({
    url: home.url(options),
    method: 'get',
})
/**
 * @see routes/web.php:6
 * @route '/'
 */
home.head = (options?: RouteQueryOptions): RouteDefinition&lt;'head'&gt; =&gt; ({
    url: home.url(options),
    method: 'head',
})

    /**
 * @see routes/web.php:6
 * @route '/'
 */
    const homeForm = (options?: RouteQueryOptions): RouteFormDefinition&lt;'get'&gt; =&gt; ({
        action: home.url(options),
        method: 'get',
    })

            /**
 * @see routes/web.php:6
 * @route '/'
 */
        homeForm.get = (options?: RouteQueryOptions): RouteFormDefinition&lt;'get'&gt; =&gt; ({
            action: home.url(options),
            method: 'get',
        })
            /**
 * @see routes/web.php:6
 * @route '/'
 */
        homeForm.head = (options?: RouteQueryOptions): RouteFormDefinition&lt;'get'&gt; =&gt; ({
            action: home.url({
                        [options?.mergeQuery ? 'mergeQuery' : 'query']: {
                            _method: 'HEAD',
                            ...(options?.query ?? options?.mergeQuery ?? {}),
                        }
                    }),
            method: 'get',
        })
    
    home.form = homeForm
/**
 * @see routes/web.php:11
 * @route '/dashboard'
 */
export const dashboard = (options?: RouteQueryOptions): RouteDefinition&lt;'get'&gt; =&gt; ({
    url: dashboard.url(options),
    method: 'get',
})

dashboard.definition = {
    methods: ["get","head"],
    url: '/dashboard',
} satisfies RouteDefinition&lt;["get","head"]&gt;

/**
 * @see routes/web.php:11
 * @route '/dashboard'
 */
dashboard.url = (options?: RouteQueryOptions) =&gt; {
    return dashboard.definition.url + queryParams(options)
}

/**
 * @see routes/web.php:11
 * @route '/dashboard'
 */
dashboard.get = (options?: RouteQueryOptions): RouteDefinition&lt;'get'&gt; =&gt; ({
    url: dashboard.url(options),
    method: 'get',
})
/**
 * @see routes/web.php:11
 * @route '/dashboard'
 */
dashboard.head = (options?: RouteQueryOptions): RouteDefinition&lt;'head'&gt; =&gt; ({
    url: dashboard.url(options),
    method: 'head',
})

    /**
 * @see routes/web.php:11
 * @route '/dashboard'
 */
    const dashboardForm = (options?: RouteQueryOptions): RouteFormDefinition&lt;'get'&gt; =&gt; ({
        action: dashboard.url(options),
        method: 'get',
    })

            /**
 * @see routes/web.php:11
 * @route '/dashboard'
 */
        dashboardForm.get = (options?: RouteQueryOptions): RouteFormDefinition&lt;'get'&gt; =&gt; ({
            action: dashboard.url(options),
            method: 'get',
        })
            /**
 * @see routes/web.php:11
 * @route '/dashboard'
 */
        dashboardForm.head = (options?: RouteQueryOptions): RouteFormDefinition&lt;'get'&gt; =&gt; ({
            action: dashboard.url({
                        [options?.mergeQuery ? 'mergeQuery' : 'query']: {
                            _method: 'HEAD',
                            ...(options?.query ?? options?.mergeQuery ?? {}),
                        }
                    }),
            method: 'get',
        })
    
    dashboard.form = dashboardForm
/**
 * @see routes/settings.php:21
 * @route '/settings/appearance'
 */
export const appearance = (options?: RouteQueryOptions): RouteDefinition&lt;'get'&gt; =&gt; ({
    url: appearance.url(options),
    method: 'get',
})

appearance.definition = {
    methods: ["get","head"],
    url: '/settings/appearance',
} satisfies RouteDefinition&lt;["get","head"]&gt;

/**
 * @see routes/settings.php:21
 * @route '/settings/appearance'
 */
appearance.url = (options?: RouteQueryOptions) =&gt; {
    return appearance.definition.url + queryParams(options)
}

/**
 * @see routes/settings.php:21
 * @route '/settings/appearance'
 */
appearance.get = (options?: RouteQueryOptions): RouteDefinition&lt;'get'&gt; =&gt; ({
    url: appearance.url(options),
    method: 'get',
})
/**
 * @see routes/settings.php:21
 * @route '/settings/appearance'
 */
appearance.head = (options?: RouteQueryOptions): RouteDefinition&lt;'head'&gt; =&gt; ({
    url: appearance.url(options),
    method: 'head',
})

    /**
 * @see routes/settings.php:21
 * @route '/settings/appearance'
 */
    const appearanceForm = (options?: RouteQueryOptions): RouteFormDefinition&lt;'get'&gt; =&gt; ({
        action: appearance.url(options),
        method: 'get',
    })

            /**
 * @see routes/settings.php:21
 * @route '/settings/appearance'
 */
        appearanceForm.get = (options?: RouteQueryOptions): RouteFormDefinition&lt;'get'&gt; =&gt; ({
            action: appearance.url(options),
            method: 'get',
        })
            /**
 * @see routes/settings.php:21
 * @route '/settings/appearance'
 */
        appearanceForm.head = (options?: RouteQueryOptions): RouteFormDefinition&lt;'get'&gt; =&gt; ({
            action: appearance.url({
                        [options?.mergeQuery ? 'mergeQuery' : 'query']: {
                            _method: 'HEAD',
                            ...(options?.query ?? options?.mergeQuery ?? {}),
                        }
                    }),
            method: 'get',
        })
    
    appearance.form = appearanceForm
/**
* @see \App\Http\Controllers\Auth\RegisteredUserController::register
 * @see app/Http/Controllers/Auth/RegisteredUserController.php:21
 * @route '/register'
 */
export const register = (options?: RouteQueryOptions): RouteDefinition&lt;'get'&gt; =&gt; ({
    url: register.url(options),
    method: 'get',
})

register.definition = {
    methods: ["get","head"],
    url: '/register',
} satisfies RouteDefinition&lt;["get","head"]&gt;

/**
* @see \App\Http\Controllers\Auth\RegisteredUserController::register
 * @see app/Http/Controllers/Auth/RegisteredUserController.php:21
 * @route '/register'
 */
register.url = (options?: RouteQueryOptions) =&gt; {
    return register.definition.url + queryParams(options)
}

/**
* @see \App\Http\Controllers\Auth\RegisteredUserController::register
 * @see app/Http/Controllers/Auth/RegisteredUserController.php:21
 * @route '/register'
 */
register.get = (options?: RouteQueryOptions): RouteDefinition&lt;'get'&gt; =&gt; ({
    url: register.url(options),
    method: 'get',
})
/**
* @see \App\Http\Controllers\Auth\RegisteredUserController::register
 * @see app/Http/Controllers/Auth/RegisteredUserController.php:21
 * @route '/register'
 */
register.head = (options?: RouteQueryOptions): RouteDefinition&lt;'head'&gt; =&gt; ({
    url: register.url(options),
    method: 'head',
})

    /**
* @see \App\Http\Controllers\Auth\RegisteredUserController::register
 * @see app/Http/Controllers/Auth/RegisteredUserController.php:21
 * @route '/register'
 */
    const registerForm = (options?: RouteQueryOptions): RouteFormDefinition&lt;'get'&gt; =&gt; ({
        action: register.url(options),
        method: 'get',
    })

            /**
* @see \App\Http\Controllers\Auth\RegisteredUserController::register
 * @see app/Http/Controllers/Auth/RegisteredUserController.php:21
 * @route '/register'
 */
        registerForm.get = (options?: RouteQueryOptions): RouteFormDefinition&lt;'get'&gt; =&gt; ({
            action: register.url(options),
            method: 'get',
        })
            /**
* @see \App\Http\Controllers\Auth\RegisteredUserController::register
 * @see app/Http/Controllers/Auth/RegisteredUserController.php:21
 * @route '/register'
 */
        registerForm.head = (options?: RouteQueryOptions): RouteFormDefinition&lt;'get'&gt; =&gt; ({
            action: register.url({
                        [options?.mergeQuery ? 'mergeQuery' : 'query']: {
                            _method: 'HEAD',
                            ...(options?.query ?? options?.mergeQuery ?? {}),
                        }
                    }),
            method: 'get',
        })
    
    register.form = registerForm
/**
* @see \App\Http\Controllers\Auth\AuthenticatedSessionController::login
 * @see app/Http/Controllers/Auth/AuthenticatedSessionController.php:19
 * @route '/login'
 */
export const login = (options?: RouteQueryOptions): RouteDefinition&lt;'get'&gt; =&gt; ({
    url: login.url(options),
    method: 'get',
})

login.definition = {
    methods: ["get","head"],
    url: '/login',
} satisfies RouteDefinition&lt;["get","head"]&gt;

/**
* @see \App\Http\Controllers\Auth\AuthenticatedSessionController::login
 * @see app/Http/Controllers/Auth/AuthenticatedSessionController.php:19
 * @route '/login'
 */
login.url = (options?: RouteQueryOptions) =&gt; {
    return login.definition.url + queryParams(options)
}

/**
* @see \App\Http\Controllers\Auth\AuthenticatedSessionController::login
 * @see app/Http/Controllers/Auth/AuthenticatedSessionController.php:19
 * @route '/login'
 */
login.get = (options?: RouteQueryOptions): RouteDefinition&lt;'get'&gt; =&gt; ({
    url: login.url(options),
    method: 'get',
})
/**
* @see \App\Http\Controllers\Auth\AuthenticatedSessionController::login
 * @see app/Http/Controllers/Auth/AuthenticatedSessionController.php:19
 * @route '/login'
 */
login.head = (options?: RouteQueryOptions): RouteDefinition&lt;'head'&gt; =&gt; ({
    url: login.url(options),
    method: 'head',
})

    /**
* @see \App\Http\Controllers\Auth\AuthenticatedSessionController::login
 * @see app/Http/Controllers/Auth/AuthenticatedSessionController.php:19
 * @route '/login'
 */
    const loginForm = (options?: RouteQueryOptions): RouteFormDefinition&lt;'get'&gt; =&gt; ({
        action: login.url(options),
        method: 'get',
    })

            /**
* @see \App\Http\Controllers\Auth\AuthenticatedSessionController::login
 * @see app/Http/Controllers/Auth/AuthenticatedSessionController.php:19
 * @route '/login'
 */
        loginForm.get = (options?: RouteQueryOptions): RouteFormDefinition&lt;'get'&gt; =&gt; ({
            action: login.url(options),
            method: 'get',
        })
            /**
* @see \App\Http\Controllers\Auth\AuthenticatedSessionController::login
 * @see app/Http/Controllers/Auth/AuthenticatedSessionController.php:19
 * @route '/login'
 */
        loginForm.head = (options?: RouteQueryOptions): RouteFormDefinition&lt;'get'&gt; =&gt; ({
            action: login.url({
                        [options?.mergeQuery ? 'mergeQuery' : 'query']: {
                            _method: 'HEAD',
                            ...(options?.query ?? options?.mergeQuery ?? {}),
                        }
                    }),
            method: 'get',
        })
    
    login.form = loginForm
/**
* @see \App\Http\Controllers\Auth\AuthenticatedSessionController::logout
 * @see app/Http/Controllers/Auth/AuthenticatedSessionController.php:42
 * @route '/logout'
 */
export const logout = (options?: RouteQueryOptions): RouteDefinition&lt;'post'&gt; =&gt; ({
    url: logout.url(options),
    method: 'post',
})

logout.definition = {
    methods: ["post"],
    url: '/logout',
} satisfies RouteDefinition&lt;["post"]&gt;

/**
* @see \App\Http\Controllers\Auth\AuthenticatedSessionController::logout
 * @see app/Http/Controllers/Auth/AuthenticatedSessionController.php:42
 * @route '/logout'
 */
logout.url = (options?: RouteQueryOptions) =&gt; {
    return logout.definition.url + queryParams(options)
}

/**
* @see \App\Http\Controllers\Auth\AuthenticatedSessionController::logout
 * @see app/Http/Controllers/Auth/AuthenticatedSessionController.php:42
 * @route '/logout'
 */
logout.post = (options?: RouteQueryOptions): RouteDefinition&lt;'post'&gt; =&gt; ({
    url: logout.url(options),
    method: 'post',
})

    /**
* @see \App\Http\Controllers\Auth\AuthenticatedSessionController::logout
 * @see app/Http/Controllers/Auth/AuthenticatedSessionController.php:42
 * @route '/logout'
 */
    const logoutForm = (options?: RouteQueryOptions): RouteFormDefinition&lt;'post'&gt; =&gt; ({
        action: logout.url(options),
        method: 'post',
    })

            /**
* @see \App\Http\Controllers\Auth\AuthenticatedSessionController::logout
 * @see app/Http/Controllers/Auth/AuthenticatedSessionController.php:42
 * @route '/logout'
 */
        logoutForm.post = (options?: RouteQueryOptions): RouteFormDefinition&lt;'post'&gt; =&gt; ({
            action: logout.url(options),
            method: 'post',
        })
    
    logout.form = logoutForm</content>
    

  </file>
  <file>
    
  
    <path>resources/js/routes/login/index.ts</path>
    
  
    <content>import { queryParams, type RouteQueryOptions, type RouteDefinition, type RouteFormDefinition } from './../../wayfinder'
/**
* @see \App\Http\Controllers\Auth\AuthenticatedSessionController::store
 * @see app/Http/Controllers/Auth/AuthenticatedSessionController.php:30
 * @route '/login'
 */
export const store = (options?: RouteQueryOptions): RouteDefinition&lt;'post'&gt; =&gt; ({
    url: store.url(options),
    method: 'post',
})

store.definition = {
    methods: ["post"],
    url: '/login',
} satisfies RouteDefinition&lt;["post"]&gt;

/**
* @see \App\Http\Controllers\Auth\AuthenticatedSessionController::store
 * @see app/Http/Controllers/Auth/AuthenticatedSessionController.php:30
 * @route '/login'
 */
store.url = (options?: RouteQueryOptions) =&gt; {
    return store.definition.url + queryParams(options)
}

/**
* @see \App\Http\Controllers\Auth\AuthenticatedSessionController::store
 * @see app/Http/Controllers/Auth/AuthenticatedSessionController.php:30
 * @route '/login'
 */
store.post = (options?: RouteQueryOptions): RouteDefinition&lt;'post'&gt; =&gt; ({
    url: store.url(options),
    method: 'post',
})

    /**
* @see \App\Http\Controllers\Auth\AuthenticatedSessionController::store
 * @see app/Http/Controllers/Auth/AuthenticatedSessionController.php:30
 * @route '/login'
 */
    const storeForm = (options?: RouteQueryOptions): RouteFormDefinition&lt;'post'&gt; =&gt; ({
        action: store.url(options),
        method: 'post',
    })

            /**
* @see \App\Http\Controllers\Auth\AuthenticatedSessionController::store
 * @see app/Http/Controllers/Auth/AuthenticatedSessionController.php:30
 * @route '/login'
 */
        storeForm.post = (options?: RouteQueryOptions): RouteFormDefinition&lt;'post'&gt; =&gt; ({
            action: store.url(options),
            method: 'post',
        })
    
    store.form = storeForm
const login = {
    store,
}

export default login</content>
    

  </file>
  <file>
    
  
    <path>resources/js/routes/password/confirm/index.ts</path>
    
  
    <content>import { queryParams, type RouteQueryOptions, type RouteDefinition, type RouteFormDefinition } from './../../../wayfinder'
/**
* @see \App\Http\Controllers\Auth\ConfirmablePasswordController::store
 * @see app/Http/Controllers/Auth/ConfirmablePasswordController.php:26
 * @route '/confirm-password'
 */
export const store = (options?: RouteQueryOptions): RouteDefinition&lt;'post'&gt; =&gt; ({
    url: store.url(options),
    method: 'post',
})

store.definition = {
    methods: ["post"],
    url: '/confirm-password',
} satisfies RouteDefinition&lt;["post"]&gt;

/**
* @see \App\Http\Controllers\Auth\ConfirmablePasswordController::store
 * @see app/Http/Controllers/Auth/ConfirmablePasswordController.php:26
 * @route '/confirm-password'
 */
store.url = (options?: RouteQueryOptions) =&gt; {
    return store.definition.url + queryParams(options)
}

/**
* @see \App\Http\Controllers\Auth\ConfirmablePasswordController::store
 * @see app/Http/Controllers/Auth/ConfirmablePasswordController.php:26
 * @route '/confirm-password'
 */
store.post = (options?: RouteQueryOptions): RouteDefinition&lt;'post'&gt; =&gt; ({
    url: store.url(options),
    method: 'post',
})

    /**
* @see \App\Http\Controllers\Auth\ConfirmablePasswordController::store
 * @see app/Http/Controllers/Auth/ConfirmablePasswordController.php:26
 * @route '/confirm-password'
 */
    const storeForm = (options?: RouteQueryOptions): RouteFormDefinition&lt;'post'&gt; =&gt; ({
        action: store.url(options),
        method: 'post',
    })

            /**
* @see \App\Http\Controllers\Auth\ConfirmablePasswordController::store
 * @see app/Http/Controllers/Auth/ConfirmablePasswordController.php:26
 * @route '/confirm-password'
 */
        storeForm.post = (options?: RouteQueryOptions): RouteFormDefinition&lt;'post'&gt; =&gt; ({
            action: store.url(options),
            method: 'post',
        })
    
    store.form = storeForm
const confirm = {
    store,
}

export default confirm</content>
    

  </file>
  <file>
    
  
    <path>resources/js/routes/profile/index.ts</path>
    
  
    <content>import { queryParams, type RouteQueryOptions, type RouteDefinition, type RouteFormDefinition } from './../../wayfinder'
/**
* @see \App\Http\Controllers\Settings\ProfileController::edit
 * @see app/Http/Controllers/Settings/ProfileController.php:19
 * @route '/settings/profile'
 */
export const edit = (options?: RouteQueryOptions): RouteDefinition&lt;'get'&gt; =&gt; ({
    url: edit.url(options),
    method: 'get',
})

edit.definition = {
    methods: ["get","head"],
    url: '/settings/profile',
} satisfies RouteDefinition&lt;["get","head"]&gt;

/**
* @see \App\Http\Controllers\Settings\ProfileController::edit
 * @see app/Http/Controllers/Settings/ProfileController.php:19
 * @route '/settings/profile'
 */
edit.url = (options?: RouteQueryOptions) =&gt; {
    return edit.definition.url + queryParams(options)
}

/**
* @see \App\Http\Controllers\Settings\ProfileController::edit
 * @see app/Http/Controllers/Settings/ProfileController.php:19
 * @route '/settings/profile'
 */
edit.get = (options?: RouteQueryOptions): RouteDefinition&lt;'get'&gt; =&gt; ({
    url: edit.url(options),
    method: 'get',
})
/**
* @see \App\Http\Controllers\Settings\ProfileController::edit
 * @see app/Http/Controllers/Settings/ProfileController.php:19
 * @route '/settings/profile'
 */
edit.head = (options?: RouteQueryOptions): RouteDefinition&lt;'head'&gt; =&gt; ({
    url: edit.url(options),
    method: 'head',
})

    /**
* @see \App\Http\Controllers\Settings\ProfileController::edit
 * @see app/Http/Controllers/Settings/ProfileController.php:19
 * @route '/settings/profile'
 */
    const editForm = (options?: RouteQueryOptions): RouteFormDefinition&lt;'get'&gt; =&gt; ({
        action: edit.url(options),
        method: 'get',
    })

            /**
* @see \App\Http\Controllers\Settings\ProfileController::edit
 * @see app/Http/Controllers/Settings/ProfileController.php:19
 * @route '/settings/profile'
 */
        editForm.get = (options?: RouteQueryOptions): RouteFormDefinition&lt;'get'&gt; =&gt; ({
            action: edit.url(options),
            method: 'get',
        })
            /**
* @see \App\Http\Controllers\Settings\ProfileController::edit
 * @see app/Http/Controllers/Settings/ProfileController.php:19
 * @route '/settings/profile'
 */
        editForm.head = (options?: RouteQueryOptions): RouteFormDefinition&lt;'get'&gt; =&gt; ({
            action: edit.url({
                        [options?.mergeQuery ? 'mergeQuery' : 'query']: {
                            _method: 'HEAD',
                            ...(options?.query ?? options?.mergeQuery ?? {}),
                        }
                    }),
            method: 'get',
        })
    
    edit.form = editForm
/**
* @see \App\Http\Controllers\Settings\ProfileController::update
 * @see app/Http/Controllers/Settings/ProfileController.php:30
 * @route '/settings/profile'
 */
export const update = (options?: RouteQueryOptions): RouteDefinition&lt;'patch'&gt; =&gt; ({
    url: update.url(options),
    method: 'patch',
})

update.definition = {
    methods: ["patch"],
    url: '/settings/profile',
} satisfies RouteDefinition&lt;["patch"]&gt;

/**
* @see \App\Http\Controllers\Settings\ProfileController::update
 * @see app/Http/Controllers/Settings/ProfileController.php:30
 * @route '/settings/profile'
 */
update.url = (options?: RouteQueryOptions) =&gt; {
    return update.definition.url + queryParams(options)
}

/**
* @see \App\Http\Controllers\Settings\ProfileController::update
 * @see app/Http/Controllers/Settings/ProfileController.php:30
 * @route '/settings/profile'
 */
update.patch = (options?: RouteQueryOptions): RouteDefinition&lt;'patch'&gt; =&gt; ({
    url: update.url(options),
    method: 'patch',
})

    /**
* @see \App\Http\Controllers\Settings\ProfileController::update
 * @see app/Http/Controllers/Settings/ProfileController.php:30
 * @route '/settings/profile'
 */
    const updateForm = (options?: RouteQueryOptions): RouteFormDefinition&lt;'post'&gt; =&gt; ({
        action: update.url({
                    [options?.mergeQuery ? 'mergeQuery' : 'query']: {
                        _method: 'PATCH',
                        ...(options?.query ?? options?.mergeQuery ?? {}),
                    }
                }),
        method: 'post',
    })

            /**
* @see \App\Http\Controllers\Settings\ProfileController::update
 * @see app/Http/Controllers/Settings/ProfileController.php:30
 * @route '/settings/profile'
 */
        updateForm.patch = (options?: RouteQueryOptions): RouteFormDefinition&lt;'post'&gt; =&gt; ({
            action: update.url({
                        [options?.mergeQuery ? 'mergeQuery' : 'query']: {
                            _method: 'PATCH',
                            ...(options?.query ?? options?.mergeQuery ?? {}),
                        }
                    }),
            method: 'post',
        })
    
    update.form = updateForm
/**
* @see \App\Http\Controllers\Settings\ProfileController::destroy
 * @see app/Http/Controllers/Settings/ProfileController.php:46
 * @route '/settings/profile'
 */
export const destroy = (options?: RouteQueryOptions): RouteDefinition&lt;'delete'&gt; =&gt; ({
    url: destroy.url(options),
    method: 'delete',
})

destroy.definition = {
    methods: ["delete"],
    url: '/settings/profile',
} satisfies RouteDefinition&lt;["delete"]&gt;

/**
* @see \App\Http\Controllers\Settings\ProfileController::destroy
 * @see app/Http/Controllers/Settings/ProfileController.php:46
 * @route '/settings/profile'
 */
destroy.url = (options?: RouteQueryOptions) =&gt; {
    return destroy.definition.url + queryParams(options)
}

/**
* @see \App\Http\Controllers\Settings\ProfileController::destroy
 * @see app/Http/Controllers/Settings/ProfileController.php:46
 * @route '/settings/profile'
 */
destroy.delete = (options?: RouteQueryOptions): RouteDefinition&lt;'delete'&gt; =&gt; ({
    url: destroy.url(options),
    method: 'delete',
})

    /**
* @see \App\Http\Controllers\Settings\ProfileController::destroy
 * @see app/Http/Controllers/Settings/ProfileController.php:46
 * @route '/settings/profile'
 */
    const destroyForm = (options?: RouteQueryOptions): RouteFormDefinition&lt;'post'&gt; =&gt; ({
        action: destroy.url({
                    [options?.mergeQuery ? 'mergeQuery' : 'query']: {
                        _method: 'DELETE',
                        ...(options?.query ?? options?.mergeQuery ?? {}),
                    }
                }),
        method: 'post',
    })

            /**
* @see \App\Http\Controllers\Settings\ProfileController::destroy
 * @see app/Http/Controllers/Settings/ProfileController.php:46
 * @route '/settings/profile'
 */
        destroyForm.delete = (options?: RouteQueryOptions): RouteFormDefinition&lt;'post'&gt; =&gt; ({
            action: destroy.url({
                        [options?.mergeQuery ? 'mergeQuery' : 'query']: {
                            _method: 'DELETE',
                            ...(options?.query ?? options?.mergeQuery ?? {}),
                        }
                    }),
            method: 'post',
        })
    
    destroy.form = destroyForm
const profile = {
    edit,
update,
destroy,
}

export default profile</content>
    

  </file>
  <file>
    
  
    <path>resources/js/routes/register/index.ts</path>
    
  
    <content>import { queryParams, type RouteQueryOptions, type RouteDefinition, type RouteFormDefinition } from './../../wayfinder'
/**
* @see \App\Http\Controllers\Auth\RegisteredUserController::store
 * @see app/Http/Controllers/Auth/RegisteredUserController.php:31
 * @route '/register'
 */
export const store = (options?: RouteQueryOptions): RouteDefinition&lt;'post'&gt; =&gt; ({
    url: store.url(options),
    method: 'post',
})

store.definition = {
    methods: ["post"],
    url: '/register',
} satisfies RouteDefinition&lt;["post"]&gt;

/**
* @see \App\Http\Controllers\Auth\RegisteredUserController::store
 * @see app/Http/Controllers/Auth/RegisteredUserController.php:31
 * @route '/register'
 */
store.url = (options?: RouteQueryOptions) =&gt; {
    return store.definition.url + queryParams(options)
}

/**
* @see \App\Http\Controllers\Auth\RegisteredUserController::store
 * @see app/Http/Controllers/Auth/RegisteredUserController.php:31
 * @route '/register'
 */
store.post = (options?: RouteQueryOptions): RouteDefinition&lt;'post'&gt; =&gt; ({
    url: store.url(options),
    method: 'post',
})

    /**
* @see \App\Http\Controllers\Auth\RegisteredUserController::store
 * @see app/Http/Controllers/Auth/RegisteredUserController.php:31
 * @route '/register'
 */
    const storeForm = (options?: RouteQueryOptions): RouteFormDefinition&lt;'post'&gt; =&gt; ({
        action: store.url(options),
        method: 'post',
    })

            /**
* @see \App\Http\Controllers\Auth\RegisteredUserController::store
 * @see app/Http/Controllers/Auth/RegisteredUserController.php:31
 * @route '/register'
 */
        storeForm.post = (options?: RouteQueryOptions): RouteFormDefinition&lt;'post'&gt; =&gt; ({
            action: store.url(options),
            method: 'post',
        })
    
    store.form = storeForm
const register = {
    store,
}

export default register</content>
    

  </file>
  <file>
    
  
    <path>resources/js/routes/storage/index.ts</path>
    
  
    <content>import { queryParams, type RouteQueryOptions, type RouteDefinition, type RouteFormDefinition, applyUrlDefaults } from './../../wayfinder'
/**
 * @see vendor/laravel/framework/src/Illuminate/Filesystem/FilesystemServiceProvider.php:98
 * @route '/storage/{path}'
 */
export const local = (args: { path: string | number } | [path: string | number ] | string | number, options?: RouteQueryOptions): RouteDefinition&lt;'get'&gt; =&gt; ({
    url: local.url(args, options),
    method: 'get',
})

local.definition = {
    methods: ["get","head"],
    url: '/storage/{path}',
} satisfies RouteDefinition&lt;["get","head"]&gt;

/**
 * @see vendor/laravel/framework/src/Illuminate/Filesystem/FilesystemServiceProvider.php:98
 * @route '/storage/{path}'
 */
local.url = (args: { path: string | number } | [path: string | number ] | string | number, options?: RouteQueryOptions) =&gt; {
    if (typeof args === 'string' || typeof args === 'number') {
        args = { path: args }
    }

    
    if (Array.isArray(args)) {
        args = {
                    path: args[0],
                }
    }

    args = applyUrlDefaults(args)

    const parsedArgs = {
                        path: args.path,
                }

    return local.definition.url
            .replace('{path}', parsedArgs.path.toString())
            .replace(/\/+$/, '') + queryParams(options)
}

/**
 * @see vendor/laravel/framework/src/Illuminate/Filesystem/FilesystemServiceProvider.php:98
 * @route '/storage/{path}'
 */
local.get = (args: { path: string | number } | [path: string | number ] | string | number, options?: RouteQueryOptions): RouteDefinition&lt;'get'&gt; =&gt; ({
    url: local.url(args, options),
    method: 'get',
})
/**
 * @see vendor/laravel/framework/src/Illuminate/Filesystem/FilesystemServiceProvider.php:98
 * @route '/storage/{path}'
 */
local.head = (args: { path: string | number } | [path: string | number ] | string | number, options?: RouteQueryOptions): RouteDefinition&lt;'head'&gt; =&gt; ({
    url: local.url(args, options),
    method: 'head',
})

    /**
 * @see vendor/laravel/framework/src/Illuminate/Filesystem/FilesystemServiceProvider.php:98
 * @route '/storage/{path}'
 */
    const localForm = (args: { path: string | number } | [path: string | number ] | string | number, options?: RouteQueryOptions): RouteFormDefinition&lt;'get'&gt; =&gt; ({
        action: local.url(args, options),
        method: 'get',
    })

            /**
 * @see vendor/laravel/framework/src/Illuminate/Filesystem/FilesystemServiceProvider.php:98
 * @route '/storage/{path}'
 */
        localForm.get = (args: { path: string | number } | [path: string | number ] | string | number, options?: RouteQueryOptions): RouteFormDefinition&lt;'get'&gt; =&gt; ({
            action: local.url(args, options),
            method: 'get',
        })
            /**
 * @see vendor/laravel/framework/src/Illuminate/Filesystem/FilesystemServiceProvider.php:98
 * @route '/storage/{path}'
 */
        localForm.head = (args: { path: string | number } | [path: string | number ] | string | number, options?: RouteQueryOptions): RouteFormDefinition&lt;'get'&gt; =&gt; ({
            action: local.url(args, {
                        [options?.mergeQuery ? 'mergeQuery' : 'query']: {
                            _method: 'HEAD',
                            ...(options?.query ?? options?.mergeQuery ?? {}),
                        }
                    }),
            method: 'get',
        })
    
    local.form = localForm
const storage = {
    local,
}

export default storage</content>
    

  </file>
  <file>
    
  
    <path>resources/js/routes/verification/index.ts</path>
    
  
    <content>import { queryParams, type RouteQueryOptions, type RouteDefinition, type RouteFormDefinition, applyUrlDefaults } from './../../wayfinder'
/**
* @see \App\Http\Controllers\Auth\EmailVerificationPromptController::__invoke
 * @see app/Http/Controllers/Auth/EmailVerificationPromptController.php:16
 * @route '/verify-email'
 */
export const notice = (options?: RouteQueryOptions): RouteDefinition&lt;'get'&gt; =&gt; ({
    url: notice.url(options),
    method: 'get',
})

notice.definition = {
    methods: ["get","head"],
    url: '/verify-email',
} satisfies RouteDefinition&lt;["get","head"]&gt;

/**
* @see \App\Http\Controllers\Auth\EmailVerificationPromptController::__invoke
 * @see app/Http/Controllers/Auth/EmailVerificationPromptController.php:16
 * @route '/verify-email'
 */
notice.url = (options?: RouteQueryOptions) =&gt; {
    return notice.definition.url + queryParams(options)
}

/**
* @see \App\Http\Controllers\Auth\EmailVerificationPromptController::__invoke
 * @see app/Http/Controllers/Auth/EmailVerificationPromptController.php:16
 * @route '/verify-email'
 */
notice.get = (options?: RouteQueryOptions): RouteDefinition&lt;'get'&gt; =&gt; ({
    url: notice.url(options),
    method: 'get',
})
/**
* @see \App\Http\Controllers\Auth\EmailVerificationPromptController::__invoke
 * @see app/Http/Controllers/Auth/EmailVerificationPromptController.php:16
 * @route '/verify-email'
 */
notice.head = (options?: RouteQueryOptions): RouteDefinition&lt;'head'&gt; =&gt; ({
    url: notice.url(options),
    method: 'head',
})

    /**
* @see \App\Http\Controllers\Auth\EmailVerificationPromptController::__invoke
 * @see app/Http/Controllers/Auth/EmailVerificationPromptController.php:16
 * @route '/verify-email'
 */
    const noticeForm = (options?: RouteQueryOptions): RouteFormDefinition&lt;'get'&gt; =&gt; ({
        action: notice.url(options),
        method: 'get',
    })

            /**
* @see \App\Http\Controllers\Auth\EmailVerificationPromptController::__invoke
 * @see app/Http/Controllers/Auth/EmailVerificationPromptController.php:16
 * @route '/verify-email'
 */
        noticeForm.get = (options?: RouteQueryOptions): RouteFormDefinition&lt;'get'&gt; =&gt; ({
            action: notice.url(options),
            method: 'get',
        })
            /**
* @see \App\Http\Controllers\Auth\EmailVerificationPromptController::__invoke
 * @see app/Http/Controllers/Auth/EmailVerificationPromptController.php:16
 * @route '/verify-email'
 */
        noticeForm.head = (options?: RouteQueryOptions): RouteFormDefinition&lt;'get'&gt; =&gt; ({
            action: notice.url({
                        [options?.mergeQuery ? 'mergeQuery' : 'query']: {
                            _method: 'HEAD',
                            ...(options?.query ?? options?.mergeQuery ?? {}),
                        }
                    }),
            method: 'get',
        })
    
    notice.form = noticeForm
/**
* @see \App\Http\Controllers\Auth\VerifyEmailController::__invoke
 * @see app/Http/Controllers/Auth/VerifyEmailController.php:14
 * @route '/verify-email/{id}/{hash}'
 */
export const verify = (args: { id: string | number, hash: string | number } | [id: string | number, hash: string | number ], options?: RouteQueryOptions): RouteDefinition&lt;'get'&gt; =&gt; ({
    url: verify.url(args, options),
    method: 'get',
})

verify.definition = {
    methods: ["get","head"],
    url: '/verify-email/{id}/{hash}',
} satisfies RouteDefinition&lt;["get","head"]&gt;

/**
* @see \App\Http\Controllers\Auth\VerifyEmailController::__invoke
 * @see app/Http/Controllers/Auth/VerifyEmailController.php:14
 * @route '/verify-email/{id}/{hash}'
 */
verify.url = (args: { id: string | number, hash: string | number } | [id: string | number, hash: string | number ], options?: RouteQueryOptions) =&gt; {
    if (Array.isArray(args)) {
        args = {
                    id: args[0],
                    hash: args[1],
                }
    }

    args = applyUrlDefaults(args)

    const parsedArgs = {
                        id: args.id,
                                hash: args.hash,
                }

    return verify.definition.url
            .replace('{id}', parsedArgs.id.toString())
            .replace('{hash}', parsedArgs.hash.toString())
            .replace(/\/+$/, '') + queryParams(options)
}

/**
* @see \App\Http\Controllers\Auth\VerifyEmailController::__invoke
 * @see app/Http/Controllers/Auth/VerifyEmailController.php:14
 * @route '/verify-email/{id}/{hash}'
 */
verify.get = (args: { id: string | number, hash: string | number } | [id: string | number, hash: string | number ], options?: RouteQueryOptions): RouteDefinition&lt;'get'&gt; =&gt; ({
    url: verify.url(args, options),
    method: 'get',
})
/**
* @see \App\Http\Controllers\Auth\VerifyEmailController::__invoke
 * @see app/Http/Controllers/Auth/VerifyEmailController.php:14
 * @route '/verify-email/{id}/{hash}'
 */
verify.head = (args: { id: string | number, hash: string | number } | [id: string | number, hash: string | number ], options?: RouteQueryOptions): RouteDefinition&lt;'head'&gt; =&gt; ({
    url: verify.url(args, options),
    method: 'head',
})

    /**
* @see \App\Http\Controllers\Auth\VerifyEmailController::__invoke
 * @see app/Http/Controllers/Auth/VerifyEmailController.php:14
 * @route '/verify-email/{id}/{hash}'
 */
    const verifyForm = (args: { id: string | number, hash: string | number } | [id: string | number, hash: string | number ], options?: RouteQueryOptions): RouteFormDefinition&lt;'get'&gt; =&gt; ({
        action: verify.url(args, options),
        method: 'get',
    })

            /**
* @see \App\Http\Controllers\Auth\VerifyEmailController::__invoke
 * @see app/Http/Controllers/Auth/VerifyEmailController.php:14
 * @route '/verify-email/{id}/{hash}'
 */
        verifyForm.get = (args: { id: string | number, hash: string | number } | [id: string | number, hash: string | number ], options?: RouteQueryOptions): RouteFormDefinition&lt;'get'&gt; =&gt; ({
            action: verify.url(args, options),
            method: 'get',
        })
            /**
* @see \App\Http\Controllers\Auth\VerifyEmailController::__invoke
 * @see app/Http/Controllers/Auth/VerifyEmailController.php:14
 * @route '/verify-email/{id}/{hash}'
 */
        verifyForm.head = (args: { id: string | number, hash: string | number } | [id: string | number, hash: string | number ], options?: RouteQueryOptions): RouteFormDefinition&lt;'get'&gt; =&gt; ({
            action: verify.url(args, {
                        [options?.mergeQuery ? 'mergeQuery' : 'query']: {
                            _method: 'HEAD',
                            ...(options?.query ?? options?.mergeQuery ?? {}),
                        }
                    }),
            method: 'get',
        })
    
    verify.form = verifyForm
/**
* @see \App\Http\Controllers\Auth\EmailVerificationNotificationController::send
 * @see app/Http/Controllers/Auth/EmailVerificationNotificationController.php:14
 * @route '/email/verification-notification'
 */
export const send = (options?: RouteQueryOptions): RouteDefinition&lt;'post'&gt; =&gt; ({
    url: send.url(options),
    method: 'post',
})

send.definition = {
    methods: ["post"],
    url: '/email/verification-notification',
} satisfies RouteDefinition&lt;["post"]&gt;

/**
* @see \App\Http\Controllers\Auth\EmailVerificationNotificationController::send
 * @see app/Http/Controllers/Auth/EmailVerificationNotificationController.php:14
 * @route '/email/verification-notification'
 */
send.url = (options?: RouteQueryOptions) =&gt; {
    return send.definition.url + queryParams(options)
}

/**
* @see \App\Http\Controllers\Auth\EmailVerificationNotificationController::send
 * @see app/Http/Controllers/Auth/EmailVerificationNotificationController.php:14
 * @route '/email/verification-notification'
 */
send.post = (options?: RouteQueryOptions): RouteDefinition&lt;'post'&gt; =&gt; ({
    url: send.url(options),
    method: 'post',
})

    /**
* @see \App\Http\Controllers\Auth\EmailVerificationNotificationController::send
 * @see app/Http/Controllers/Auth/EmailVerificationNotificationController.php:14
 * @route '/email/verification-notification'
 */
    const sendForm = (options?: RouteQueryOptions): RouteFormDefinition&lt;'post'&gt; =&gt; ({
        action: send.url(options),
        method: 'post',
    })

            /**
* @see \App\Http\Controllers\Auth\EmailVerificationNotificationController::send
 * @see app/Http/Controllers/Auth/EmailVerificationNotificationController.php:14
 * @route '/email/verification-notification'
 */
        sendForm.post = (options?: RouteQueryOptions): RouteFormDefinition&lt;'post'&gt; =&gt; ({
            action: send.url(options),
            method: 'post',
        })
    
    send.form = sendForm
const verification = {
    notice,
verify,
send,
}

export default verification</content>
    

  </file>
  <file>
    
  
    <path>resources/js/ssr.tsx</path>
    
  
    <content>import { createInertiaApp } from '@inertiajs/react';
import createServer from '@inertiajs/react/server';
import { resolvePageComponent } from 'laravel-vite-plugin/inertia-helpers';
import ReactDOMServer from 'react-dom/server';

const appName = import.meta.env.VITE_APP_NAME || 'Laravel';

createServer((page) =&gt;
    createInertiaApp({
        page,
        render: ReactDOMServer.renderToString,
        title: (title) =&gt; (title ? `${title} - ${appName}` : appName),
        resolve: (name) =&gt; resolvePageComponent(`./pages/${name}.tsx`, import.meta.glob('./pages/**/*.tsx')),
        setup: ({ App, props }) =&gt; {
            return &lt;App {...props} /&gt;;
        },
    }),
);</content>
    

  </file>
  <file>
    
  
    <path>resources/js/wayfinder/index.ts</path>
    
  
    <content>export type QueryParams = Record&lt;
    string,
    | string
    | number
    | boolean
    | string[]
    | null
    | undefined
    | Record&lt;string, string | number | boolean&gt;
&gt;;

type Method = "get" | "post" | "put" | "delete" | "patch" | "head" | "options";

let urlDefaults: Record&lt;string, unknown&gt; = {};

export type RouteDefinition&lt;TMethod extends Method | Method[]&gt; = {
    url: string;
} &amp; (TMethod extends Method[] ? { methods: TMethod } : { method: TMethod });

export type RouteFormDefinition&lt;TMethod extends Method&gt; = {
    action: string;
    method: TMethod;
};

export type RouteQueryOptions = {
    query?: QueryParams;
    mergeQuery?: QueryParams;
};

export const queryParams = (options?: RouteQueryOptions) =&gt; {
    if (!options || (!options.query &amp;&amp; !options.mergeQuery)) {
        return "";
    }

    const query = options.query ?? options.mergeQuery;
    const includeExisting = options.mergeQuery !== undefined;

    const getValue = (value: string | number | boolean) =&gt; {
        if (value === true) {
            return "1";
        }

        if (value === false) {
            return "0";
        }

        return value.toString();
    };

    const params = new URLSearchParams(
        includeExisting &amp;&amp; typeof window !== "undefined"
            ? window.location.search
            : "",
    );

    for (const key in query) {
        if (query[key] === undefined || query[key] === null) {
            params.delete(key);
            continue;
        }

        if (Array.isArray(query[key])) {
            if (params.has(`${key}[]`)) {
                params.delete(`${key}[]`);
            }

            query[key].forEach((value) =&gt; {
                params.append(`${key}[]`, value.toString());
            });
        } else if (typeof query[key] === "object") {
            params.forEach((_, paramKey) =&gt; {
                if (paramKey.startsWith(`${key}[`)) {
                    params.delete(paramKey);
                }
            });

            for (const subKey in query[key]) {
                if (typeof query[key][subKey] === "undefined") {
                    continue;
                }

                if (
                    ["string", "number", "boolean"].includes(
                        typeof query[key][subKey],
                    )
                ) {
                    params.set(
                        `${key}[${subKey}]`,
                        getValue(query[key][subKey]),
                    );
                }
            }
        } else {
            params.set(key, getValue(query[key]));
        }
    }

    const str = params.toString();

    return str.length &gt; 0 ? `?${str}` : "";
};

export const setUrlDefaults = (params: Record&lt;string, unknown&gt;) =&gt; {
    urlDefaults = params;
};

export const addUrlDefault = (
    key: string,
    value: string | number | boolean,
) =&gt; {
    urlDefaults[key] = value;
};

export const applyUrlDefaults = &lt;T extends Record&lt;string, unknown&gt; | undefined&gt;(
    existing: T,
): T =&gt; {
    const existingParams = { ...(existing ?? ({} as Record&lt;string, unknown&gt;)) };

    for (const key in urlDefaults) {
        if (
            existingParams[key] === undefined &amp;&amp;
            urlDefaults[key] !== undefined
        ) {
            (existingParams as Record&lt;string, unknown&gt;)[key] = urlDefaults[key];
        }
    }

    return existingParams as T;
};

export const validateParameters = (
    args: Record&lt;string, unknown&gt; | undefined,
    optional: string[],
) =&gt; {
    const missing = optional.filter((key) =&gt; !args?.[key]);
    const expectedMissing = optional.slice(missing.length * -1);

    for (let i = 0; i &lt; missing.length; i++) {
        if (missing[i] !== expectedMissing[i]) {
            throw Error(
                "Unexpected optional parameters missing. Unable to generate a URL.",
            );
        }
    }
};</content>
    

  </file>
  <file>
    
  
    <path>resources/views/app.blade.php</path>
    
  
    <content>&lt;!DOCTYPE html&gt;
&lt;html lang="{{ str_replace('_', '-', app()-&gt;getLocale()) }}" @class(['dark' =&gt; ($appearance ?? 'system') == 'dark'])&gt;
    &lt;head&gt;
        &lt;meta charset="utf-8"&gt;
        &lt;meta name="viewport" content="width=device-width, initial-scale=1"&gt;

        {{-- Inline script to detect system dark mode preference and apply it immediately --}}
        &lt;script&gt;
            (function() {
                const appearance = '{{ $appearance ?? "system" }}';

                if (appearance === 'system') {
                    const prefersDark = window.matchMedia('(prefers-color-scheme: dark)').matches;

                    if (prefersDark) {
                        document.documentElement.classList.add('dark');
                    }
                }
            })();
        &lt;/script&gt;

        {{-- Inline style to set the HTML background color based on our theme in app.css --}}
        &lt;style&gt;
            html {
                background-color: oklch(1 0 0);
            }

            html.dark {
                background-color: oklch(0.145 0 0);
            }
        &lt;/style&gt;

        &lt;title inertia&gt;{{ config('app.name', 'Laravel') }}&lt;/title&gt;

        &lt;link rel="icon" href="/favicon.ico" sizes="any"&gt;
        &lt;link rel="icon" href="/favicon.svg" type="image/svg+xml"&gt;
        &lt;link rel="apple-touch-icon" href="/apple-touch-icon.png"&gt;

        &lt;link rel="preconnect" href="https://fonts.bunny.net"&gt;
        &lt;link href="https://fonts.bunny.net/css?family=instrument-sans:400,500,600" rel="stylesheet" /&gt;

        @viteReactRefresh
        @vite(['resources/js/app.tsx', "resources/js/pages/{$page['component']}.tsx"])
        @inertiaHead
    &lt;/head&gt;
    &lt;body class="font-sans antialiased"&gt;
        @inertia
    &lt;/body&gt;
&lt;/html&gt;</content>
    

  </file>
  <file>
    
  
    <path>routes/console.php</path>
    
  
    <content>&lt;?php

use Illuminate\Foundation\Inspiring;
use Illuminate\Support\Facades\Artisan;

Artisan::command('inspire', function () {
    $this-&gt;comment(Inspiring::quote());
})-&gt;purpose('Display an inspiring quote');</content>
    

  </file>
  <file>
    
  
    <path>routes/web.php</path>
    
  
    <content>&lt;?php

use Illuminate\Support\Facades\Route;
use Inertia\Inertia;

Route::get('/', function () {
    return Inertia::render('welcome');
})-&gt;name('home');

Route::middleware(['auth', 'verified'])-&gt;group(function () {
    Route::get('dashboard', function () {
        return Inertia::render('dashboard');
    })-&gt;name('dashboard');
});

require __DIR__.'/settings.php';
require __DIR__.'/auth.php';</content>
    

  </file>
  <file>
    
  
    <path>storage/app/.gitignore</path>
    
  
    <content>*
!private/
!public/
!.gitignore</content>
    

  </file>
  <file>
    
  
    <path>storage/app/private/.gitignore</path>
    
  
    <content>*
!.gitignore</content>
    

  </file>
  <file>
    
  
    <path>storage/app/public/.gitignore</path>
    
  
    <content>*
!.gitignore</content>
    

  </file>
  <file>
    
  
    <path>storage/framework/.gitignore</path>
    
  
    <content>compiled.php
config.php
down
events.scanned.php
maintenance.php
routes.php
routes.scanned.php
schedule-*
services.json</content>
    

  </file>
  <file>
    
  
    <path>storage/framework/cache/.gitignore</path>
    
  
    <content>*
!data/
!.gitignore</content>
    

  </file>
  <file>
    
  
    <path>storage/framework/cache/data/.gitignore</path>
    
  
    <content>*
!.gitignore</content>
    

  </file>
  <file>
    
  
    <path>storage/framework/sessions/.gitignore</path>
    
  
    <content>*
!.gitignore</content>
    

  </file>
  <file>
    
  
    <path>storage/framework/testing/.gitignore</path>
    
  
    <content>*
!.gitignore</content>
    

  </file>
  <file>
    
  
    <path>storage/framework/views/.gitignore</path>
    
  
    <content>*
!.gitignore</content>
    

  </file>
  <file>
    
  
    <path>storage/framework/views/1077c2d274bb732d416d182fc2d906ed.php</path>
    
  
    <content>&lt;?php if($parameters-&gt;isNotEmpty()): ?&gt;
args&lt;?php echo when($parameters-&gt;every-&gt;optional, '?'); ?&gt;: {
    &lt;?php $__currentLoopData = $parameters; $__env-&gt;addLoop($__currentLoopData); foreach($__currentLoopData as $parameter): $__env-&gt;incrementLoopIndices(); $loop = $__env-&gt;getLastLoop(); ?&gt;
        &lt;?php echo e($parameter-&gt;name); ?&gt;&lt;?php echo when($parameter-&gt;optional, '?'); ?&gt;: &lt;?php echo $parameter-&gt;types; ?&gt;

        &lt;?php if($parameter-&gt;key): ?&gt;
            | { &lt;?php echo $parameter-&gt;key; ?&gt;: &lt;?php echo $parameter-&gt;types; ?&gt; }
        &lt;?php endif; ?&gt;,
    &lt;?php endforeach; $__env-&gt;popLoop(); $loop = $__env-&gt;getLastLoop(); ?&gt;
}

| [
    &lt;?php $__currentLoopData = $parameters; $__env-&gt;addLoop($__currentLoopData); foreach($__currentLoopData as $parameter): $__env-&gt;incrementLoopIndices(); $loop = $__env-&gt;getLastLoop(); ?&gt;
        &lt;?php echo e($parameter-&gt;safeName()); ?&gt;: &lt;?php echo $parameter-&gt;types; ?&gt;

        &lt;?php if($parameter-&gt;key): ?&gt;
            | { &lt;?php echo $parameter-&gt;key; ?&gt;: &lt;?php echo $parameter-&gt;types; ?&gt; }
         &lt;?php endif; ?&gt;
        &lt;?php echo when(!$loop-&gt;last, ', '); ?&gt;

    &lt;?php endforeach; $__env-&gt;popLoop(); $loop = $__env-&gt;getLastLoop(); ?&gt;
]

&lt;?php if($parameters-&gt;count() === 1): ?&gt; | &lt;?php echo $parameters-&gt;first()-&gt;types; ?&gt;

    &lt;?php if($parameters-&gt;first()-&gt;key): ?&gt; | { &lt;?php echo $parameters-&gt;first()-&gt;key; ?&gt;: &lt;?php echo $parameters-&gt;first()-&gt;types; ?&gt; }&lt;?php endif; ?&gt;
&lt;?php endif; ?&gt;
,
&lt;?php endif; ?&gt;
options?: RouteQueryOptions
&lt;?php /**PATH D:\research\applications\school.mouadh.tech\vendor\laravel\wayfinder\src/../resources/function-arguments.blade.ts ENDPATH**/ ?&gt;</content>
    

  </file>
  <file>
    
  
    <path>storage/framework/views/357c133fa0d791427a33a63701cbf366.php</path>
    
  
    <content>/**&lt;?php echo when(!str_contains($controller, '\\Closure'), PHP_EOL . " * @see {$controller}::" . ($isInvokable ? '__invoke' : $docblock_method ?? $method)); ?&gt;

 * @see &lt;?php echo $path; ?&gt;:&lt;?php echo $line; ?&gt;

&lt;?php $__currentLoopData = $parameters; $__env-&gt;addLoop($__currentLoopData); foreach($__currentLoopData as $parameter): $__env-&gt;incrementLoopIndices(); $loop = $__env-&gt;getLastLoop(); ?&gt;
&lt;?php if($parameter-&gt;default !== null): ?&gt;
 * @param &lt;?php echo $parameter-&gt;name; ?&gt; - Default: &lt;?php echo \Illuminate\Support\Js::from($parameter-&gt;default)-&gt;toHtml() ?&gt;

&lt;?php endif; ?&gt;
&lt;?php endforeach; $__env-&gt;popLoop(); $loop = $__env-&gt;getLastLoop(); ?&gt;
 * @route &lt;?php echo $uri; ?&gt;

 */
&lt;?php /**PATH D:\research\applications\school.mouadh.tech\vendor\laravel\wayfinder\src/../resources/docblock.blade.ts ENDPATH**/ ?&gt;</content>
    

  </file>
  <file>
    
  
    <path>storage/framework/views/edc0d82e8583c7fcd29844caf9b77a6f.php</path>
    
  
    <content>&lt;?php echo $__env-&gt;make('wayfinder::docblock', array_diff_key(get_defined_vars(), ['__data' =&gt; 1, '__path' =&gt; 1]))-&gt;render(); ?&gt;
&lt;?php echo when($shouldExport, 'export '); ?&gt;const &lt;?php echo $method; ?&gt; = (&lt;?php echo $__env-&gt;make('wayfinder::function-arguments', array_diff_key(get_defined_vars(), ['__data' =&gt; 1, '__path' =&gt; 1]))-&gt;render(); ?&gt;): RouteDefinition&lt;&lt;?php echo \Illuminate\Support\Js::from($verbs-&gt;first()-&gt;actual)-&gt;toHtml() ?&gt;&gt; =&gt; ({
    url: &lt;?php echo $method; ?&gt;.url(&lt;?php echo when($parameters-&gt;isNotEmpty(), 'args, '); ?&gt;options),
    method: &lt;?php echo \Illuminate\Support\Js::from($verbs-&gt;first()-&gt;actual)-&gt;toHtml() ?&gt;,
})

&lt;?php echo $method; ?&gt;.definition = {
    methods: &lt;?php echo $verbs-&gt;pluck('actual')-&gt;toJson(); ?&gt;,
    url: &lt;?php echo $uri; ?&gt;,
} satisfies RouteDefinition&lt;&lt;?php echo $verbs-&gt;pluck('actual')-&gt;toJson(); ?&gt;&gt;

&lt;?php echo $__env-&gt;make('wayfinder::docblock', array_diff_key(get_defined_vars(), ['__data' =&gt; 1, '__path' =&gt; 1]))-&gt;render(); ?&gt;
&lt;?php echo $method; ?&gt;.url = (&lt;?php echo $__env-&gt;make('wayfinder::function-arguments', array_diff_key(get_defined_vars(), ['__data' =&gt; 1, '__path' =&gt; 1]))-&gt;render(); ?&gt;) =&gt; {
&lt;?php if($parameters-&gt;count() === 1): ?&gt;
    if (typeof args === 'string' || typeof args === 'number') {
        args = { &lt;?php echo $parameters-&gt;first()-&gt;name; ?&gt;: args }
    }

    &lt;?php if($parameters-&gt;first()-&gt;key): ?&gt;
        if (typeof args === 'object' &amp;&amp; !Array.isArray(args) &amp;&amp; &lt;?php echo \Illuminate\Support\Js::from($parameters-&gt;first()-&gt;key)-&gt;toHtml() ?&gt; in args) {
            args = { &lt;?php echo $parameters-&gt;first()-&gt;name; ?&gt;: args.&lt;?php echo $parameters-&gt;first()-&gt;key; ?&gt; }
        }
    &lt;?php endif; ?&gt;
&lt;?php endif; ?&gt;

&lt;?php if($parameters-&gt;isNotEmpty()): ?&gt;
    if (Array.isArray(args)) {
        args = {
        &lt;?php $__currentLoopData = $parameters; $__env-&gt;addLoop($__currentLoopData); foreach($__currentLoopData as $parameter): $__env-&gt;incrementLoopIndices(); $loop = $__env-&gt;getLastLoop(); ?&gt;
            &lt;?php echo $parameter-&gt;name; ?&gt;: args[&lt;?php echo $loop-&gt;index; ?&gt;],
        &lt;?php endforeach; $__env-&gt;popLoop(); $loop = $__env-&gt;getLastLoop(); ?&gt;
        }
    }

    args = applyUrlDefaults(args)
&lt;?php endif; ?&gt;

&lt;?php if($parameters-&gt;where('optional')-&gt;isNotEmpty()): ?&gt;
    validateParameters(args, [
    &lt;?php $__currentLoopData = $parameters-&gt;where('optional'); $__env-&gt;addLoop($__currentLoopData); foreach($__currentLoopData as $parameter): $__env-&gt;incrementLoopIndices(); $loop = $__env-&gt;getLastLoop(); ?&gt;
        "&lt;?php echo $parameter-&gt;name; ?&gt;",
    &lt;?php endforeach; $__env-&gt;popLoop(); $loop = $__env-&gt;getLastLoop(); ?&gt;
    ])
&lt;?php endif; ?&gt;

&lt;?php if($parameters-&gt;isNotEmpty()): ?&gt;
    const parsedArgs = {
    &lt;?php $__currentLoopData = $parameters; $__env-&gt;addLoop($__currentLoopData); foreach($__currentLoopData as $parameter): $__env-&gt;incrementLoopIndices(); $loop = $__env-&gt;getLastLoop(); ?&gt;
        &lt;?php if($parameter-&gt;key): ?&gt;
            &lt;?php echo $parameter-&gt;name; ?&gt;: &lt;?php echo when($parameter-&gt;default !== null, '('); ?&gt;typeof args&lt;?php echo when($parameters-&gt;every-&gt;optional, '?'); ?&gt;.&lt;?php echo $parameter-&gt;name; ?&gt; === 'object'
                ? args.&lt;?php echo $parameter-&gt;name; ?&gt;.&lt;?php echo $parameter-&gt;key ?? 'id'; ?&gt;

                : args&lt;?php echo when($parameters-&gt;every-&gt;optional, '?'); ?&gt;.&lt;?php echo $parameter-&gt;name; ?&gt;&lt;?php echo when($parameter-&gt;default !== null, ') ?? '); ?&gt;&lt;?php if($parameter-&gt;default !== null): ?&gt;&lt;?php echo \Illuminate\Support\Js::from($parameter-&gt;default)-&gt;toHtml() ?&gt;&lt;?php endif; ?&gt;,
        &lt;?php else: ?&gt;
            &lt;?php echo $parameter-&gt;name; ?&gt;: args&lt;?php echo when($parameters-&gt;every-&gt;optional, '?'); ?&gt;.&lt;?php echo $parameter-&gt;name; ?&gt;&lt;?php echo when($parameter-&gt;default !== null, ' ?? '); ?&gt;&lt;?php if($parameter-&gt;default !== null): ?&gt;&lt;?php echo \Illuminate\Support\Js::from($parameter-&gt;default)-&gt;toHtml() ?&gt;&lt;?php endif; ?&gt;,
        &lt;?php endif; ?&gt;
    &lt;?php endforeach; $__env-&gt;popLoop(); $loop = $__env-&gt;getLastLoop(); ?&gt;
    }
&lt;?php endif; ?&gt;

    return &lt;?php echo $method; ?&gt;.definition.url
&lt;?php $__currentLoopData = $parameters; $__env-&gt;addLoop($__currentLoopData); foreach($__currentLoopData as $parameter): $__env-&gt;incrementLoopIndices(); $loop = $__env-&gt;getLastLoop(); ?&gt;
            .replace(&lt;?php echo \Illuminate\Support\Js::from($parameter-&gt;placeholder)-&gt;toHtml() ?&gt;, parsedArgs.&lt;?php echo $parameter-&gt;name; ?&gt;&lt;?php echo when($parameter-&gt;optional, '?'); ?&gt;.toString()&lt;?php echo when($parameter-&gt;optional, " ?? ''"); ?&gt;)
    &lt;?php if($loop-&gt;last): ?&gt;
            .replace(/\/+$/, '')
    &lt;?php endif; ?&gt;
&lt;?php endforeach; $__env-&gt;popLoop(); $loop = $__env-&gt;getLastLoop(); ?&gt; + queryParams(options)
}

&lt;?php $__currentLoopData = $verbs; $__env-&gt;addLoop($__currentLoopData); foreach($__currentLoopData as $verb): $__env-&gt;incrementLoopIndices(); $loop = $__env-&gt;getLastLoop(); ?&gt;
&lt;?php echo $__env-&gt;make('wayfinder::docblock', array_diff_key(get_defined_vars(), ['__data' =&gt; 1, '__path' =&gt; 1]))-&gt;render(); ?&gt;
&lt;?php echo $method; ?&gt;.&lt;?php echo $verb-&gt;actual; ?&gt; = (&lt;?php echo $__env-&gt;make('wayfinder::function-arguments', array_diff_key(get_defined_vars(), ['__data' =&gt; 1, '__path' =&gt; 1]))-&gt;render(); ?&gt;): RouteDefinition&lt;&lt;?php echo \Illuminate\Support\Js::from($verb-&gt;actual)-&gt;toHtml() ?&gt;&gt; =&gt; ({
    url: &lt;?php echo $method; ?&gt;.url(&lt;?php echo when($parameters-&gt;isNotEmpty(), 'args, '); ?&gt;options),
    method: &lt;?php echo \Illuminate\Support\Js::from($verb-&gt;actual)-&gt;toHtml() ?&gt;,
})
&lt;?php endforeach; $__env-&gt;popLoop(); $loop = $__env-&gt;getLastLoop(); ?&gt;

&lt;?php if($withForm): ?&gt;
    &lt;?php echo $__env-&gt;make('wayfinder::docblock', array_diff_key(get_defined_vars(), ['__data' =&gt; 1, '__path' =&gt; 1]))-&gt;render(); ?&gt;
    const &lt;?php echo $method; ?&gt;Form = (&lt;?php echo $__env-&gt;make('wayfinder::function-arguments', array_diff_key(get_defined_vars(), ['__data' =&gt; 1, '__path' =&gt; 1]))-&gt;render(); ?&gt;): RouteFormDefinition&lt;&lt;?php echo \Illuminate\Support\Js::from($verbs-&gt;first()-&gt;formSafe)-&gt;toHtml() ?&gt;&gt; =&gt; ({
        action: &lt;?php echo $method; ?&gt;.url(
            &lt;?php echo when($parameters-&gt;isNotEmpty(), 'args, '); ?&gt;

            &lt;?php if($verbs-&gt;first()-&gt;formSafe === $verbs-&gt;first()-&gt;actual): ?&gt;
                options
            &lt;?php else: ?&gt;
                {
                    [options?.mergeQuery ? 'mergeQuery' : 'query']: {
                        _method: &lt;?php echo \Illuminate\Support\Js::from(strtoupper($verbs-&gt;first()-&gt;actual))-&gt;toHtml() ?&gt;,
                        ...(options?.query ?? options?.mergeQuery ?? {}),
                    }
                }
            &lt;?php endif; ?&gt;
        ),
        method: &lt;?php echo \Illuminate\Support\Js::from($verbs-&gt;first()-&gt;formSafe)-&gt;toHtml() ?&gt;,
    })

    &lt;?php $__currentLoopData = $verbs; $__env-&gt;addLoop($__currentLoopData); foreach($__currentLoopData as $verb): $__env-&gt;incrementLoopIndices(); $loop = $__env-&gt;getLastLoop(); ?&gt;
        &lt;?php echo $__env-&gt;make('wayfinder::docblock', array_diff_key(get_defined_vars(), ['__data' =&gt; 1, '__path' =&gt; 1]))-&gt;render(); ?&gt;
        &lt;?php echo $method; ?&gt;Form.&lt;?php echo $verb-&gt;actual; ?&gt; = (&lt;?php echo $__env-&gt;make('wayfinder::function-arguments', array_diff_key(get_defined_vars(), ['__data' =&gt; 1, '__path' =&gt; 1]))-&gt;render(); ?&gt;): RouteFormDefinition&lt;&lt;?php echo \Illuminate\Support\Js::from($verb-&gt;formSafe)-&gt;toHtml() ?&gt;&gt; =&gt; ({
            action: &lt;?php echo $method; ?&gt;.url(
                &lt;?php echo when($parameters-&gt;isNotEmpty(), 'args, '); ?&gt;

                &lt;?php if($verb-&gt;formSafe === $verb-&gt;actual): ?&gt;
                options
                &lt;?php else: ?&gt;
                    {
                        [options?.mergeQuery ? 'mergeQuery' : 'query']: {
                            _method: &lt;?php echo \Illuminate\Support\Js::from(strtoupper($verb-&gt;actual))-&gt;toHtml() ?&gt;,
                            ...(options?.query ?? options?.mergeQuery ?? {}),
                        }
                    }
                &lt;?php endif; ?&gt;
            ),
            method: &lt;?php echo \Illuminate\Support\Js::from($verb-&gt;formSafe)-&gt;toHtml() ?&gt;,
        })
    &lt;?php endforeach; $__env-&gt;popLoop(); $loop = $__env-&gt;getLastLoop(); ?&gt;

    &lt;?php echo $method; ?&gt;.form = &lt;?php echo $method; ?&gt;Form
&lt;?php endif; ?&gt;
&lt;?php /**PATH D:\research\applications\school.mouadh.tech\vendor\laravel\wayfinder\src/../resources/method.blade.ts ENDPATH**/ ?&gt;</content>
    

  </file>
  <file>
    
  
    <path>storage/logs/.gitignore</path>
    
  
    <content>*
!.gitignore</content>
    

  </file>
  <file>
    
  
    <path>tests/Feature/Auth/EmailVerificationTest.php</path>
    
  
    <content>&lt;?php

use App\Models\User;
use Illuminate\Auth\Events\Verified;
use Illuminate\Support\Facades\Event;
use Illuminate\Support\Facades\URL;

test('email verification screen can be rendered', function () {
    $user = User::factory()-&gt;unverified()-&gt;create();

    $response = $this-&gt;actingAs($user)-&gt;get(route('verification.notice'));

    $response-&gt;assertStatus(200);
});

test('email can be verified', function () {
    $user = User::factory()-&gt;unverified()-&gt;create();

    Event::fake();

    $verificationUrl = URL::temporarySignedRoute(
        'verification.verify',
        now()-&gt;addMinutes(60),
        ['id' =&gt; $user-&gt;id, 'hash' =&gt; sha1($user-&gt;email)]
    );

    $response = $this-&gt;actingAs($user)-&gt;get($verificationUrl);

    Event::assertDispatched(Verified::class);
    expect($user-&gt;fresh()-&gt;hasVerifiedEmail())-&gt;toBeTrue();
    $response-&gt;assertRedirect(route('dashboard', absolute: false).'?verified=1');
});

test('email is not verified with invalid hash', function () {
    $user = User::factory()-&gt;unverified()-&gt;create();

    $verificationUrl = URL::temporarySignedRoute(
        'verification.verify',
        now()-&gt;addMinutes(60),
        ['id' =&gt; $user-&gt;id, 'hash' =&gt; sha1('wrong-email')]
    );

    $this-&gt;actingAs($user)-&gt;get($verificationUrl);

    expect($user-&gt;fresh()-&gt;hasVerifiedEmail())-&gt;toBeFalse();
});

test('email is not verified with invalid user id', function () {
    $user = User::factory()-&gt;create([
        'email_verified_at' =&gt; null,
    ]);

    $verificationUrl = URL::temporarySignedRoute(
        'verification.verify',
        now()-&gt;addMinutes(60),
        ['id' =&gt; 123, 'hash' =&gt; sha1($user-&gt;email)]
    );

    $this-&gt;actingAs($user)-&gt;get($verificationUrl);

    expect($user-&gt;fresh()-&gt;hasVerifiedEmail())-&gt;toBeFalse();
});

test('verified user is redirected to dashboard from verification prompt', function () {
    $user = User::factory()-&gt;create([
        'email_verified_at' =&gt; now(),
    ]);

    $response = $this-&gt;actingAs($user)-&gt;get(route('verification.notice'));

    $response-&gt;assertRedirect(route('dashboard', absolute: false));
});

test('already verified user visiting verification link is redirected without firing event again', function () {
    $user = User::factory()-&gt;create([
        'email_verified_at' =&gt; now(),
    ]);

    Event::fake();

    $verificationUrl = URL::temporarySignedRoute(
        'verification.verify',
        now()-&gt;addMinutes(60),
        ['id' =&gt; $user-&gt;id, 'hash' =&gt; sha1($user-&gt;email)]
    );

    $this-&gt;actingAs($user)-&gt;get($verificationUrl)
        -&gt;assertRedirect(route('dashboard', absolute: false).'?verified=1');

    expect($user-&gt;fresh()-&gt;hasVerifiedEmail())-&gt;toBeTrue();
    Event::assertNotDispatched(Verified::class);
});</content>
    

  </file>
  <file>
    
  
    <path>tests/Feature/Auth/VerificationNotificationTest.php</path>
    
  
    <content>&lt;?php

use App\Models\User;
use Illuminate\Auth\Notifications\VerifyEmail;
use Illuminate\Support\Facades\Notification;

test('sends verification notification', function () {
    Notification::fake();

    $user = User::factory()-&gt;create([
        'email_verified_at' =&gt; null,
    ]);

    $this-&gt;actingAs($user)
        -&gt;post(route('verification.send'))
        -&gt;assertRedirect(route('home'));

    Notification::assertSentTo($user, VerifyEmail::class);
});

test('does not send verification notification if email is verified', function () {
    Notification::fake();

    $user = User::factory()-&gt;create([
        'email_verified_at' =&gt; now(),
    ]);

    $this-&gt;actingAs($user)
        -&gt;post(route('verification.send'))
        -&gt;assertRedirect(route('dashboard', absolute: false));

    Notification::assertNothingSent();
});</content>
    

  </file>
  <file>
    
  
    <path>tests/Feature/DashboardTest.php</path>
    
  
    <content>&lt;?php

use App\Models\User;

test('guests are redirected to the login page', function () {
    $this-&gt;get(route('dashboard'))-&gt;assertRedirect(route('login'));
});

test('authenticated users can visit the dashboard', function () {
    $this-&gt;actingAs($user = User::factory()-&gt;create());

    $this-&gt;get(route('dashboard'))-&gt;assertOk();
});</content>
    

  </file>
  <file>
    
  
    <path>tests/Feature/ExampleTest.php</path>
    
  
    <content>&lt;?php

it('returns a successful response', function () {
    $response = $this-&gt;get('/');

    $response-&gt;assertStatus(200);
});</content>
    

  </file>
  <file>
    
  
    <path>tests/Pest.php</path>
    
  
    <content>&lt;?php

/*
|--------------------------------------------------------------------------
| Test Case
|--------------------------------------------------------------------------
|
| The closure you provide to your test functions is always bound to a specific PHPUnit test
| case class. By default, that class is "PHPUnit\Framework\TestCase". Of course, you may
| need to change it using the "pest()" function to bind a different classes or traits.
|
*/

pest()-&gt;extend(Tests\TestCase::class)
    -&gt;use(Illuminate\Foundation\Testing\RefreshDatabase::class)
    -&gt;in('Feature');

/*
|--------------------------------------------------------------------------
| Expectations
|--------------------------------------------------------------------------
|
| When you're writing tests, you often need to check that values meet certain conditions. The
| "expect()" function gives you access to a set of "expectations" methods that you can use
| to assert different things. Of course, you may extend the Expectation API at any time.
|
*/

expect()-&gt;extend('toBeOne', function () {
    return $this-&gt;toBe(1);
});

/*
|--------------------------------------------------------------------------
| Functions
|--------------------------------------------------------------------------
|
| While Pest is very powerful out-of-the-box, you may have some testing code specific to your
| project that you don't want to repeat in every file. Here you can also expose helpers as
| global functions to help you to reduce the number of lines of code in your test files.
|
*/

function something()
{
    // ..
}</content>
    

  </file>
  <file>
    
  
    <path>tests/TestCase.php</path>
    
  
    <content>&lt;?php

namespace Tests;

use Illuminate\Foundation\Testing\TestCase as BaseTestCase;

abstract class TestCase extends BaseTestCase
{
    //
}</content>
    

  </file>
  <file>
    
  
    <path>tests/Unit/ExampleTest.php</path>
    
  
    <content>&lt;?php

test('that true is true', function () {
    expect(true)-&gt;toBeTrue();
});</content>
    

  </file>
  <file>
    
  
    <path>tsconfig.json</path>
    
  
    <content>{
    "compilerOptions": {
        /* Visit https://aka.ms/tsconfig to read more about this file */

        /* Projects */
        // "incremental": true,                              /* Save .tsbuildinfo files to allow for incremental compilation of projects. */
        // "composite": true,                                /* Enable constraints that allow a TypeScript project to be used with project references. */
        // "tsBuildInfoFile": "./.tsbuildinfo",              /* Specify the path to .tsbuildinfo incremental compilation file. */
        // "disableSourceOfProjectReferenceRedirect": true,  /* Disable preferring source files instead of declaration files when referencing composite projects. */
        // "disableSolutionSearching": true,                 /* Opt a project out of multi-project reference checking when editing. */
        // "disableReferencedProjectLoad": true,             /* Reduce the number of projects loaded automatically by TypeScript. */

        /* Language and Environment */
        "target": "ESNext" /* Set the JavaScript language version for emitted JavaScript and include compatible library declarations. */,
        // "lib": [],                                        /* Specify a set of bundled library declaration files that describe the target runtime environment. */
        // "jsx": "preserve",                                /* Specify what JSX code is generated. */
        // "experimentalDecorators": true,                   /* Enable experimental support for legacy experimental decorators. */
        // "emitDecoratorMetadata": true,                    /* Emit design-type metadata for decorated declarations in source files. */
        // "jsxFactory": "",                                 /* Specify the JSX factory function used when targeting React JSX emit, e.g. 'React.createElement' or 'h'. */
        // "jsxFragmentFactory": "",                         /* Specify the JSX Fragment reference used for fragments when targeting React JSX emit e.g. 'React.Fragment' or 'Fragment'. */
        // "jsxImportSource": "",                            /* Specify module specifier used to import the JSX factory functions when using 'jsx: react-jsx*'. */
        // "reactNamespace": "",                             /* Specify the object invoked for 'createElement'. This only applies when targeting 'react' JSX emit. */
        // "noLib": true,                                    /* Disable including any library files, including the default lib.d.ts. */
        // "useDefineForClassFields": true,                  /* Emit ECMAScript-standard-compliant class fields. */
        // "moduleDetection": "auto",                        /* Control what method is used to detect module-format JS files. */

        /* Modules */
        "module": "ESNext" /* Specify what module code is generated. */,
        // "rootDir": "./",                                  /* Specify the root folder within your source files. */
        "moduleResolution": "bundler" /* Specify how TypeScript looks up a file from a given module specifier. */,
        // "baseUrl": "./",                                  /* Specify the base directory to resolve non-relative module names. */
        // "paths": {},                                      /* Specify a set of entries that re-map imports to additional lookup locations. */
        // "rootDirs": [],                                   /* Allow multiple folders to be treated as one when resolving modules. */
        // "typeRoots": [],                                  /* Specify multiple folders that act like './node_modules/@types'. */
        // "types": [],                                      /* Specify type package names to be included without being referenced in a source file. */
        // "allowUmdGlobalAccess": true,                     /* Allow accessing UMD globals from modules. */
        // "moduleSuffixes": [],                             /* List of file name suffixes to search when resolving a module. */
        // "allowImportingTsExtensions": true,               /* Allow imports to include TypeScript file extensions. Requires '--moduleResolution bundler' and either '--noEmit' or '--emitDeclarationOnly' to be set. */
        // "rewriteRelativeImportExtensions": true,          /* Rewrite '.ts', '.tsx', '.mts', and '.cts' file extensions in relative import paths to their JavaScript equivalent in output files. */
        // "resolvePackageJsonExports": true,                /* Use the package.json 'exports' field when resolving package imports. */
        // "resolvePackageJsonImports": true,                /* Use the package.json 'imports' field when resolving imports. */
        // "customConditions": [],                           /* Conditions to set in addition to the resolver-specific defaults when resolving imports. */
        // "noUncheckedSideEffectImports": true,             /* Check side effect imports. */
        // "resolveJsonModule": true,                        /* Enable importing .json files. */
        // "allowArbitraryExtensions": true,                 /* Enable importing files with any extension, provided a declaration file is present. */
        // "noResolve": true,                                /* Disallow 'import's, 'require's or '&lt;reference&gt;'s from expanding the number of files TypeScript should add to a project. */

        /* JavaScript Support */
        "allowJs": true /* Allow JavaScript files to be a part of your program. Use the 'checkJS' option to get errors from these files. */,
        // "checkJs": true,                                  /* Enable error reporting in type-checked JavaScript files. */
        // "maxNodeModuleJsDepth": 1,                        /* Specify the maximum folder depth used for checking JavaScript files from 'node_modules'. Only applicable with 'allowJs'. */

        /* Emit */
        // "declaration": true,                              /* Generate .d.ts files from TypeScript and JavaScript files in your project. */
        // "declarationMap": true,                           /* Create sourcemaps for d.ts files. */
        // "emitDeclarationOnly": true,                      /* Only output d.ts files and not JavaScript files. */
        // "sourceMap": true,                                /* Create source map files for emitted JavaScript files. */
        // "inlineSourceMap": true,                          /* Include sourcemap files inside the emitted JavaScript. */
        "noEmit": true /* Disable emitting files from a compilation. */,
        // "outFile": "./",                                  /* Specify a file that bundles all outputs into one JavaScript file. If 'declaration' is true, also designates a file that bundles all .d.ts output. */
        // "outDir": "./",                                   /* Specify an output folder for all emitted files. */
        // "removeComments": true,                           /* Disable emitting comments. */
        // "importHelpers": true,                            /* Allow importing helper functions from tslib once per project, instead of including them per-file. */
        // "downlevelIteration": true,                       /* Emit more compliant, but verbose and less performant JavaScript for iteration. */
        // "sourceRoot": "",                                 /* Specify the root path for debuggers to find the reference source code. */
        // "mapRoot": "",                                    /* Specify the location where debugger should locate map files instead of generated locations. */
        // "inlineSources": true,                            /* Include source code in the sourcemaps inside the emitted JavaScript. */
        // "emitBOM": true,                                  /* Emit a UTF-8 Byte Order Mark (BOM) in the beginning of output files. */
        // "newLine": "crlf",                                /* Set the newline character for emitting files. */
        // "stripInternal": true,                            /* Disable emitting declarations that have '@internal' in their JSDoc comments. */
        // "noEmitHelpers": true,                            /* Disable generating custom helper functions like '__extends' in compiled output. */
        // "noEmitOnError": true,                            /* Disable emitting files if any type checking errors are reported. */
        // "preserveConstEnums": true,                       /* Disable erasing 'const enum' declarations in generated code. */
        // "declarationDir": "./",                           /* Specify the output directory for generated declaration files. */

        /* Interop Constraints */
        "isolatedModules": true /* Ensure that each file can be safely transpiled without relying on other imports. */,
        // "verbatimModuleSyntax": true,                     /* Do not transform or elide any imports or exports not marked as type-only, ensuring they are written in the output file's format based on the 'module' setting. */
        // "isolatedDeclarations": true,                     /* Require sufficient annotation on exports so other tools can trivially generate declaration files. */
        // "allowSyntheticDefaultImports": true,             /* Allow 'import x from y' when a module doesn't have a default export. */
        "esModuleInterop": true /* Emit additional JavaScript to ease support for importing CommonJS modules. This enables 'allowSyntheticDefaultImports' for type compatibility. */,
        // "preserveSymlinks": true,                         /* Disable resolving symlinks to their realpath. This correlates to the same flag in node. */
        "forceConsistentCasingInFileNames": true /* Ensure that casing is correct in imports. */,

        /* Type Checking */
        "strict": true /* Enable all strict type-checking options. */,
        "noImplicitAny": true /* Enable error reporting for expressions and declarations with an implied 'any' type. */,
        // "strictNullChecks": true,                         /* When type checking, take into account 'null' and 'undefined'. */
        // "strictFunctionTypes": true,                      /* When assigning functions, check to ensure parameters and the return values are subtype-compatible. */
        // "strictBindCallApply": true,                      /* Check that the arguments for 'bind', 'call', and 'apply' methods match the original function. */
        // "strictPropertyInitialization": true,             /* Check for class properties that are declared but not set in the constructor. */
        // "strictBuiltinIteratorReturn": true,              /* Built-in iterators are instantiated with a 'TReturn' type of 'undefined' instead of 'any'. */
        // "noImplicitThis": true,                           /* Enable error reporting when 'this' is given the type 'any'. */
        // "useUnknownInCatchVariables": true,               /* Default catch clause variables as 'unknown' instead of 'any'. */
        // "alwaysStrict": true,                             /* Ensure 'use strict' is always emitted. */
        // "noUnusedLocals": true,                           /* Enable error reporting when local variables aren't read. */
        // "noUnusedParameters": true,                       /* Raise an error when a function parameter isn't read. */
        // "exactOptionalPropertyTypes": true,               /* Interpret optional property types as written, rather than adding 'undefined'. */
        // "noImplicitReturns": true,                        /* Enable error reporting for codepaths that do not explicitly return in a function. */
        // "noFallthroughCasesInSwitch": true,               /* Enable error reporting for fallthrough cases in switch statements. */
        // "noUncheckedIndexedAccess": true,                 /* Add 'undefined' to a type when accessed using an index. */
        // "noImplicitOverride": true,                       /* Ensure overriding members in derived classes are marked with an override modifier. */
        // "noPropertyAccessFromIndexSignature": true,       /* Enforces using indexed accessors for keys declared using an indexed type. */
        // "allowUnusedLabels": true,                        /* Disable error reporting for unused labels. */
        // "allowUnreachableCode": true,                     /* Disable error reporting for unreachable code. */

        /* Completeness */
        // "skipDefaultLibCheck": true,                      /* Skip type checking .d.ts files that are included with TypeScript. */
        "skipLibCheck": true /* Skip type checking all .d.ts files. */,
        "baseUrl": ".",
        "paths": {
            "@/*": ["./resources/js/*"]
        },
        "jsx": "react-jsx"
    },
    "include": ["resources/js/**/*.ts", "resources/js/**/*.d.ts", "resources/js/**/*.tsx"]
}</content>
    

  </file>
  <file>
    
  
    <path>vite.config.ts</path>
    
  
    <content>import { wayfinder } from '@laravel/vite-plugin-wayfinder';
import tailwindcss from '@tailwindcss/vite';
import react from '@vitejs/plugin-react';
import laravel from 'laravel-vite-plugin';
import { defineConfig } from 'vite';

export default defineConfig({
    plugins: [
        laravel({
            input: ['resources/css/app.css', 'resources/js/app.tsx'],
            ssr: 'resources/js/ssr.tsx',
            refresh: true,
        }),
        react(),
        tailwindcss(),
        wayfinder({
            formVariants: true,
        }),
    ],
    esbuild: {
        jsx: 'automatic',
    },
});</content>
    

  </file>
</repository_files>
<statistics>
  <total_files>148</total_files>
  <total_chars>843382</total_chars>
  <total_tokens>0</total_tokens>
  <generated_at>2025-09-05 23:38:18</generated_at>
</statistics>
</repository>